<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>S7-200SMART通信12</title>
      <link href="/2019/07/15/2019-07-15-smart200-xue-xi-12/"/>
      <url>/2019/07/15/2019-07-15-smart200-xue-xi-12/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-通信"><a href="#一、S7-200-SMART-通信" class="headerlink" title="一、S7-200 SMART 通信"></a>一、S7-200 SMART 通信</h1><h2 id="1-通信总览"><a href="#1-通信总览" class="headerlink" title="1.通信总览"></a>1.通信总览</h2><p><img src="1.png" alt></p><p><img src="2.png" alt></p><p><img src="3.png" alt></p><p><img src="4.png" alt></p><p><img src="5.png" alt></p><h2 id="2-通信概念"><a href="#2-通信概念" class="headerlink" title="2.通信概念"></a>2.通信概念</h2><h2 id="2-中断"><a href="#2-中断" class="headerlink" title="2.中断"></a>2.中断</h2><p><img src="6.png" alt></p><p><img src="7.png" alt></p><h2 id="3-通信示例"><a href="#3-通信示例" class="headerlink" title="3.通信示例"></a>3.通信示例</h2><p><img src="8.png" alt></p><p><img src="9.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：IQ区通信案例，即可查看完整视频</strong>。</p></blockquote><p><img src="10.png" alt></p><p><img src="11.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：V区通信案例，即可查看完整视频</strong>。</p></blockquote><h2 id="4-威纶通变频器通信"><a href="#4-威纶通变频器通信" class="headerlink" title="4.威纶通变频器通信"></a>4.威纶通变频器通信</h2><p><img src="12.png" alt></p><p><img src="13.png" alt></p><p><img src="14.png" alt></p><p><img src="15.png" alt></p><p><img src="16.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：威纶通通信，即可查看完整视频</strong>。</p></blockquote><p><img src="17.png" alt></p><p><img src="18.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：威纶通通信案例，即可查看完整视频</strong>。</p></blockquote><h2 id="5-USS协议"><a href="#5-USS协议" class="headerlink" title="5.USS协议"></a>5.USS协议</h2><p><img src="19.png" alt></p><p><img src="20.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：USS通信程序的编写，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200通信 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART脉冲11</title>
      <link href="/2019/07/09/2019-07-09-smart200-xue-xi-11/"/>
      <url>/2019/07/09/2019-07-09-smart200-xue-xi-11/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-脉冲"><a href="#一、S7-200-SMART-脉冲" class="headerlink" title="一、S7-200 SMART 脉冲"></a>一、S7-200 SMART 脉冲</h1><h2 id="1-PWM输出，脉宽调制"><a href="#1-PWM输出，脉宽调制" class="headerlink" title="1.PWM输出，脉宽调制"></a>1.PWM输出，脉宽调制</h2><p><img src="1.png" alt></p><p><img src="2.png" alt></p><p><img src="3.png" alt></p><h2 id="2-PTO-脉冲串输出"><a href="#2-PTO-脉冲串输出" class="headerlink" title="2.PTO 脉冲串输出"></a>2.PTO 脉冲串输出</h2><p><img src="4.png" alt></p><p><img src="5.png" alt></p><p><img src="6.png" alt></p><h2 id="3-PTO控制步进电机运行"><a href="#3-PTO控制步进电机运行" class="headerlink" title="3.PTO控制步进电机运行"></a>3.PTO控制步进电机运行</h2><p><img src="7.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：PTO步进电机，即可查看完整视频</strong>。</p></blockquote><h2 id="3-高速脉冲运动控制"><a href="#3-高速脉冲运动控制" class="headerlink" title="3.高速脉冲运动控制"></a>3.高速脉冲运动控制</h2><p><img src="8.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：高速脉冲运动控制，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200脉冲 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART高速计数器10</title>
      <link href="/2019/07/05/2019-07-05-smart200-xue-xi-10/"/>
      <url>/2019/07/05/2019-07-05-smart200-xue-xi-10/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-高速计数器"><a href="#一、S7-200-SMART-高速计数器" class="headerlink" title="一、S7-200 SMART 高速计数器"></a>一、S7-200 SMART 高速计数器</h1><h2 id="1-高速计数器"><a href="#1-高速计数器" class="headerlink" title="1.高速计数器"></a>1.高速计数器</h2><p><img src="1.png" alt></p><p><img src="2.png" alt></p><p><img src="3.png" alt></p><h2 id="2-高速计数器编程步骤"><a href="#2-高速计数器编程步骤" class="headerlink" title="2.高速计数器编程步骤"></a>2.高速计数器编程步骤</h2><p><img src="4.png" alt></p><p><img src="5.png" alt></p><p><img src="6.png" alt></p><p><img src="7.png" alt></p><p><img src="8.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：高速计数器编程步骤，即可查看完整视频</strong>。</p></blockquote><h2 id="3-计数模式"><a href="#3-计数模式" class="headerlink" title="3.计数模式"></a>3.计数模式</h2><p><img src="9.png" alt></p><p><img src="10.png" alt></p><p><img src="11.png" alt></p><p><img src="12.png" alt></p><p><img src="13.png" alt></p><h2 id="4-高速计数-编码器"><a href="#4-高速计数-编码器" class="headerlink" title="4.高速计数-编码器"></a>4.高速计数-编码器</h2><p><img src="14.png" alt></p><p><img src="15.png" alt></p><p><img src="16.png" alt></p><p><img src="17.png" alt></p><p><img src="18.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：编码器应用，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200高速计数器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART中PID09</title>
      <link href="/2019/06/27/2019-06-27-smart200-xue-xi-09/"/>
      <url>/2019/06/27/2019-06-27-smart200-xue-xi-09/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、PID"><a href="#一、PID" class="headerlink" title="一、PID"></a>一、PID</h1><h2 id="1-PID基本概念"><a href="#1-PID基本概念" class="headerlink" title="1.PID基本概念"></a>1.PID基本概念</h2><p><img src="1.png" alt></p><h2 id="2-PID控制原理"><a href="#2-PID控制原理" class="headerlink" title="2.PID控制原理"></a>2.PID控制原理</h2><p><img src="2.png" alt></p><h2 id="3-PID调节典型算法"><a href="#3-PID调节典型算法" class="headerlink" title="3.PID调节典型算法"></a>3.PID调节典型算法</h2><p><img src="3.png" alt></p><h2 id="4-PID调节功能及设定"><a href="#4-PID调节功能及设定" class="headerlink" title="4.PID调节功能及设定"></a>4.PID调节功能及设定</h2><p><img src="4.png" alt></p><h2 id="5-PID调节实验"><a href="#5-PID调节实验" class="headerlink" title="5.PID调节实验"></a>5.PID调节实验</h2><p><img src="5.png" alt></p><p><img src="6.png" alt></p><p><img src="7.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：PID调节实验，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> PID </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART模拟量案例08</title>
      <link href="/2019/06/25/2019-06-25-smart200-xue-xi-08/"/>
      <url>/2019/06/25/2019-06-25-smart200-xue-xi-08/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、模拟量案例"><a href="#一、模拟量案例" class="headerlink" title="一、模拟量案例"></a>一、模拟量案例</h1><h2 id="1-案例一"><a href="#1-案例一" class="headerlink" title="1.案例一"></a>1.案例一</h2><p><img src="1.png" alt></p><p><img src="2.png" alt></p><p><img src="3.png" alt></p><h2 id="2-案例二"><a href="#2-案例二" class="headerlink" title="2.案例二"></a>2.案例二</h2><p><img src="4.png" alt></p><p><img src="5.png" alt></p><p><img src="6.png" alt></p><p><img src="7.png" alt></p><p><img src="8.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200模拟量案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART模拟量07</title>
      <link href="/2019/06/19/2019-06-19-smart200-xue-xi-07/"/>
      <url>/2019/06/19/2019-06-19-smart200-xue-xi-07/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-模拟量"><a href="#一、S7-200-SMART-模拟量" class="headerlink" title="一、S7-200 SMART 模拟量"></a>一、S7-200 SMART 模拟量</h1><h2 id="1-模拟量简述"><a href="#1-模拟量简述" class="headerlink" title="1.模拟量简述"></a>1.模拟量简述</h2><p><img src="1.png" alt></p><h2 id="2-常用仪器"><a href="#2-常用仪器" class="headerlink" title="2.常用仪器"></a>2.常用仪器</h2><h3 id="传感器"><a href="#传感器" class="headerlink" title="传感器"></a>传感器</h3><p><img src="2.png" alt></p><h3 id="变送器"><a href="#变送器" class="headerlink" title="变送器"></a>变送器</h3><p><img src="3.png" alt></p><h3 id="模拟量模块"><a href="#模拟量模块" class="headerlink" title="模拟量模块"></a>模拟量模块</h3><p><img src="4.png" alt></p><h2 id="3-PLC处理模拟量过程"><a href="#3-PLC处理模拟量过程" class="headerlink" title="3.PLC处理模拟量过程"></a>3.PLC处理模拟量过程</h2><p><img src="5.png" alt></p><h2 id="4-模拟量输入模块-EM-AE04"><a href="#4-模拟量输入模块-EM-AE04" class="headerlink" title="4.模拟量输入模块 EM AE04"></a>4.模拟量输入模块 EM AE04</h2><p><img src="6.png" alt></p><p><img src="7.png" alt></p><h2 id="5-模拟量输出模块-EM-AQ02"><a href="#5-模拟量输出模块-EM-AQ02" class="headerlink" title="5.模拟量输出模块     EM AQ02"></a>5.模拟量输出模块     EM AQ02</h2><p><img src="8.png" alt></p><p><img src="9.png" alt></p><h2 id="5-模拟量输入-输出模块-EM-AQ02"><a href="#5-模拟量输入-输出模块-EM-AQ02" class="headerlink" title="5.模拟量输入/输出模块     EM AQ02"></a>5.模拟量输入/输出模块     EM AQ02</h2><p><img src="10.png" alt></p><p><img src="11.png" alt></p><h2 id="6-热电阻输入模块-EM-AR02"><a href="#6-热电阻输入模块-EM-AR02" class="headerlink" title="6.热电阻输入模块 EM AR02"></a>6.热电阻输入模块 EM AR02</h2><p><img src="12.png" alt></p><p><img src="13.png" alt></p><p><img src="14.png" alt></p><h2 id="7-热电偶输入模块"><a href="#7-热电偶输入模块" class="headerlink" title="7.热电偶输入模块"></a>7.热电偶输入模块</h2><p><img src="15.png" alt></p><p><img src="16.png" alt></p><h2 id="8-模拟量模块扩展存储器及地址分配"><a href="#8-模拟量模块扩展存储器及地址分配" class="headerlink" title="8.模拟量模块扩展存储器及地址分配"></a>8.模拟量模块扩展存储器及地址分配</h2><p><img src="17.png" alt></p><h2 id="9-温度变送器与模拟量输入模块的接线图"><a href="#9-温度变送器与模拟量输入模块的接线图" class="headerlink" title="9.温度变送器与模拟量输入模块的接线图"></a>9.温度变送器与模拟量输入模块的接线图</h2><p><img src="18.png" alt></p><h2 id="10-压力传感器与模拟量输入模块的接线图"><a href="#10-压力传感器与模拟量输入模块的接线图" class="headerlink" title="10.压力传感器与模拟量输入模块的接线图"></a>10.压力传感器与模拟量输入模块的接线图</h2><p><img src="19.png" alt></p><p><img src="20.png" alt></p><h2 id="11-模拟量与数字量对应的关系"><a href="#11-模拟量与数字量对应的关系" class="headerlink" title="11.模拟量与数字量对应的关系"></a>11.模拟量与数字量对应的关系</h2><p><img src="21.png" alt></p><p><img src="22.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：中断子程序，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200模拟量 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART子程序06</title>
      <link href="/2019/06/15/2019-06-15-smart200-xue-xi-06/"/>
      <url>/2019/06/15/2019-06-15-smart200-xue-xi-06/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-子程序"><a href="#一、S7-200-SMART-子程序" class="headerlink" title="一、S7-200 SMART 子程序"></a>一、S7-200 SMART 子程序</h1><h2 id="1-子程序"><a href="#1-子程序" class="headerlink" title="1.子程序"></a>1.子程序</h2><p><img src="1.png" alt></p><p><img src="2.png" alt></p><p><img src="3.png" alt></p><p><img src="4.png" alt></p><p>## </p><h2 id="2-中断"><a href="#2-中断" class="headerlink" title="2.中断"></a>2.中断</h2><p><img src="5.png" alt></p><p><img src="6.png" alt></p><p><img src="7.png" alt></p><p><img src="8.png" alt></p><p><img src="9.png" alt></p><p><img src="10.png" alt></p><h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p><img src="11.png" alt></p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p><img src="12.png" alt></p><p><img src="13.png" alt></p><p><img src="14.png" alt></p><p><img src="15.png" alt></p><p><img src="16.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：中断子程序，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200子程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART数据处理05</title>
      <link href="/2019/06/09/2019-06-09-smart200-xue-xi-05/"/>
      <url>/2019/06/09/2019-06-09-smart200-xue-xi-05/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-数据处理"><a href="#一、S7-200-SMART-数据处理" class="headerlink" title="一、S7-200 SMART 数据处理"></a>一、S7-200 SMART 数据处理</h1><h2 id="1-比较指令"><a href="#1-比较指令" class="headerlink" title="1.比较指令"></a>1.比较指令</h2><p><img src="1.png" alt></p><p>## </p><h2 id="2-数据传送指令"><a href="#2-数据传送指令" class="headerlink" title="2.数据传送指令"></a>2.数据传送指令</h2><p><img src="5.png" alt></p><p><img src="6.png" alt></p><h2 id="3-数据转换指令"><a href="#3-数据转换指令" class="headerlink" title="3.数据转换指令"></a>3.数据转换指令</h2><p><img src="7.png" alt></p><p><img src="8.png" alt></p><p><img src="9.png" alt></p><h2 id="4-整数运算"><a href="#4-整数运算" class="headerlink" title="4.整数运算"></a>4.整数运算</h2><p><img src="10.png" alt></p><p><img src="11.png" alt></p><h2 id="5-浮点数四则运算"><a href="#5-浮点数四则运算" class="headerlink" title="5.浮点数四则运算"></a>5.浮点数四则运算</h2><p><img src="2.png" alt></p><p><img src="3.png" alt></p><h2 id="6-浮点数三角函数"><a href="#6-浮点数三角函数" class="headerlink" title="6.浮点数三角函数"></a>6.浮点数三角函数</h2><p><img src="4.png" alt></p><p><img src="12.png" alt></p><h2 id="7-移位指令"><a href="#7-移位指令" class="headerlink" title="7.移位指令"></a>7.移位指令</h2><p><img src="13.png" alt></p><p><img src="14.png" alt></p><p><img src="15.png" alt></p><p><img src="16.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200数据处理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART数据类型04</title>
      <link href="/2019/06/05/2019-06-05-smart200-xue-xi-04/"/>
      <url>/2019/06/05/2019-06-05-smart200-xue-xi-04/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-数据类型"><a href="#一、S7-200-SMART-数据类型" class="headerlink" title="一、S7-200 SMART 数据类型"></a>一、S7-200 SMART 数据类型</h1><h2 id="1-数据寄存器及地址范围"><a href="#1-数据寄存器及地址范围" class="headerlink" title="1.数据寄存器及地址范围"></a>1.数据寄存器及地址范围</h2><p><img src="1.png" alt></p><h2 id="2-数据存储结构"><a href="#2-数据存储结构" class="headerlink" title="2.数据存储结构"></a>2.数据存储结构</h2><p><img src="2.png" alt></p><p><img src="3.png" alt></p><p><img src="4.png" alt></p><p><img src="5.png" alt></p><h1 id="二、位、字节、双字"><a href="#二、位、字节、双字" class="headerlink" title="二、位、字节、双字"></a>二、位、字节、双字</h1><p><img src="15.png" alt></p><h1 id="三、进制转换（八、十、十六）"><a href="#三、进制转换（八、十、十六）" class="headerlink" title="三、进制转换（八、十、十六）"></a>三、进制转换（八、十、十六）</h1><h2 id="1-进制概念"><a href="#1-进制概念" class="headerlink" title="1.进制概念"></a>1.进制概念</h2><p><img src="6.png" alt></p><h3 id="十进制转二进制"><a href="#十进制转二进制" class="headerlink" title="十进制转二进制"></a>十进制转二进制</h3><p><img src="7.png" alt></p><h3 id="二进制转八进制"><a href="#二进制转八进制" class="headerlink" title="二进制转八进制"></a>二进制转八进制</h3><p><img src="8.png" alt></p><h3 id="八进制转二进制"><a href="#八进制转二进制" class="headerlink" title="八进制转二进制"></a>八进制转二进制</h3><p><img src="9.png" alt></p><h3 id="二进制转十六进制"><a href="#二进制转十六进制" class="headerlink" title="二进制转十六进制"></a>二进制转十六进制</h3><p><img src="10.png" alt></p><h3 id="十六进制转二进制"><a href="#十六进制转二进制" class="headerlink" title="十六进制转二进制"></a>十六进制转二进制</h3><p><img src="11.png" alt></p><h3 id="十进制转换"><a href="#十进制转换" class="headerlink" title="十进制转换"></a>十进制转换</h3><p><img src="12.png" alt></p><p><img src="13.png" alt></p><h3 id="BCD与十进制转换"><a href="#BCD与十进制转换" class="headerlink" title="BCD与十进制转换"></a>BCD与十进制转换</h3><p><img src="14.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART案例相关03</title>
      <link href="/2019/05/27/2019-05-27-smart200-xue-xi-03/"/>
      <url>/2019/05/27/2019-05-27-smart200-xue-xi-03/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="S7-200-SMART案例相关"><a href="#S7-200-SMART案例相关" class="headerlink" title="S7-200 SMART案例相关"></a>S7-200 SMART案例相关</h1><h2 id="一、案例（1）"><a href="#一、案例（1）" class="headerlink" title="一、案例（1）"></a>一、案例（1）</h2><h3 id="1-启保停程序"><a href="#1-启保停程序" class="headerlink" title="1.启保停程序"></a>1.启保停程序</h3><p><img src="1.png" alt></p><h3 id="2-电机正停正启、反停反启"><a href="#2-电机正停正启、反停反启" class="headerlink" title="2.电机正停正启、反停反启"></a>2.电机正停正启、反停反启</h3><p><img src="2.png" alt></p><p><img src="3.png" alt></p><h3 id="3-机械手控制系统"><a href="#3-机械手控制系统" class="headerlink" title="3.机械手控制系统"></a>3.机械手控制系统</h3><p><img src="4.png" alt></p><p><img src="5.png" alt></p><p><img src="6.png" alt></p><p><img src="7.png" alt></p><p><img src="8.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：机械手案例，即可查看完整视频</strong>。</p></blockquote><h3 id="4-喷泉控制"><a href="#4-喷泉控制" class="headerlink" title="4.喷泉控制"></a>4.喷泉控制</h3><p><img src="9.png" alt></p><p><img src="10.png" alt></p><blockquote><p><strong>关注公众号：自律的鱼，回复关键字：喷泉案例，即可查看完整视频</strong>。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> plc案例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART常用操作指令02</title>
      <link href="/2019/05/25/2019-05-25-smart200-xue-xi-02/"/>
      <url>/2019/05/25/2019-05-25-smart200-xue-xi-02/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-常用操作指令"><a href="#一、S7-200-SMART-常用操作指令" class="headerlink" title="一、S7-200 SMART 常用操作指令"></a>一、S7-200 SMART 常用操作指令</h1><h2 id="1-1-顺序控制篇"><a href="#1-1-顺序控制篇" class="headerlink" title="1.1 顺序控制篇"></a>1.1 顺序控制篇</h2><h3 id="1-常开、常闭、线圈"><a href="#1-常开、常闭、线圈" class="headerlink" title="1.常开、常闭、线圈"></a>1.常开、常闭、线圈</h3><p><img src="1.png" alt></p><h3 id="2-上升沿、下降沿指令"><a href="#2-上升沿、下降沿指令" class="headerlink" title="2.上升沿、下降沿指令"></a>2.上升沿、下降沿指令</h3><p><img src="2.png" alt></p><h3 id="3-置位、复位指令"><a href="#3-置位、复位指令" class="headerlink" title="3.置位、复位指令"></a>3.置位、复位指令</h3><p><img src="3.png" alt></p><h3 id="4-取反指令"><a href="#4-取反指令" class="headerlink" title="4.取反指令"></a>4.取反指令</h3><p><img src="4.png" alt></p><h3 id="5-特殊继电器SM0-0-SM0-1"><a href="#5-特殊继电器SM0-0-SM0-1" class="headerlink" title="5.特殊继电器SM0.0 SM0.1"></a>5.特殊继电器SM0.0 SM0.1</h3><p><img src="5.png" alt></p><h2 id="1-2-PLC的工作原理"><a href="#1-2-PLC的工作原理" class="headerlink" title="1.2 PLC的工作原理"></a>1.2 PLC的工作原理</h2><p><img src="6.png" alt></p><h2 id="1-3-plc定时器"><a href="#1-3-plc定时器" class="headerlink" title="1.3 plc定时器"></a>1.3 plc定时器</h2><p><img src="7.png" alt></p><p><img src="8.png" alt></p><h3 id="1-接通延时定时器TON"><a href="#1-接通延时定时器TON" class="headerlink" title="1.接通延时定时器TON"></a>1.接通延时定时器TON</h3><p><img src="9.png" alt></p><h3 id="2-关断延时定时器TOF"><a href="#2-关断延时定时器TOF" class="headerlink" title="2.关断延时定时器TOF"></a>2.关断延时定时器TOF</h3><p><img src="10.png" alt></p><h3 id="3-记忆接通延时定时器TONR"><a href="#3-记忆接通延时定时器TONR" class="headerlink" title="3.记忆接通延时定时器TONR"></a>3.记忆接通延时定时器TONR</h3><p><img src="11.png" alt></p><h3 id="4-增计数器CTU"><a href="#4-增计数器CTU" class="headerlink" title="4.增计数器CTU"></a>4.增计数器CTU</h3><p><img src="12.png" alt></p><p><img src="13.png" alt></p><h3 id="5-减计数器CTU"><a href="#5-减计数器CTU" class="headerlink" title="5.减计数器CTU"></a>5.减计数器CTU</h3><p><img src="14.png" alt></p><p><img src="15.png" alt></p><h3 id="6-增减计数器CTUD"><a href="#6-增减计数器CTUD" class="headerlink" title="6.增减计数器CTUD"></a>6.增减计数器CTUD</h3><p><img src="16.png" alt></p><p><img src="17.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>S7-200SMART使用基础01</title>
      <link href="/2019/05/19/2019-05-19-smart200-xue-xi-01/"/>
      <url>/2019/05/19/2019-05-19-smart200-xue-xi-01/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、S7-200-SMART-使用基础"><a href="#一、S7-200-SMART-使用基础" class="headerlink" title="一、S7-200 SMART 使用基础"></a>一、S7-200 SMART 使用基础</h1><h2 id="1-1-smart-200的硬件组成"><a href="#1-1-smart-200的硬件组成" class="headerlink" title="1.1 smart 200的硬件组成"></a>1.1 smart 200的硬件组成</h2><p><img src="1.png" alt></p><h2 id="1-2-smart-200的订货号"><a href="#1-2-smart-200的订货号" class="headerlink" title="1.2 smart 200的订货号"></a>1.2 smart 200的订货号</h2><p><img src="2.png" alt></p><h2 id="1-3-smart-200的硬件接线"><a href="#1-3-smart-200的硬件接线" class="headerlink" title="1.3 smart 200的硬件接线"></a>1.3 smart 200的硬件接线</h2><h3 id="1-3-1-输入端子接线方式"><a href="#1-3-1-输入端子接线方式" class="headerlink" title="1.3.1 输入端子接线方式"></a>1.3.1 输入端子接线方式</h3><p><img src="3.png" alt></p><h3 id="1-3-2-两线制传感器与s7-200-smart接线"><a href="#1-3-2-两线制传感器与s7-200-smart接线" class="headerlink" title="1.3.2 两线制传感器与s7-200 smart接线"></a>1.3.2 两线制传感器与s7-200 smart接线</h3><p><img src="4.png" alt></p><p><img src="5.png" alt></p><h3 id="1-3-3NPN型和PNP型传感器接线"><a href="#1-3-3NPN型和PNP型传感器接线" class="headerlink" title="1.3.3NPN型和PNP型传感器接线"></a>1.3.3NPN型和PNP型传感器接线</h3><p><img src="6.png" alt></p><p><img src="7.png" alt></p><p><img src="8.png" alt></p><h2 id="1-4输出信号的类型"><a href="#1-4输出信号的类型" class="headerlink" title="1.4输出信号的类型"></a>1.4输出信号的类型</h2><h3 id="1-4-1-继电器输出与晶体管输出"><a href="#1-4-1-继电器输出与晶体管输出" class="headerlink" title="1.4.1 继电器输出与晶体管输出"></a>1.4.1 继电器输出与晶体管输出</h3><p><img src="9.png" alt></p><h3 id="1-4-2-晶体管输出端子接线方式"><a href="#1-4-2-晶体管输出端子接线方式" class="headerlink" title="1.4.2 晶体管输出端子接线方式"></a>1.4.2 晶体管输出端子接线方式</h3><p><img src="10.png" alt></p><h3 id="1-4-3继电器输出端子接线方式"><a href="#1-4-3继电器输出端子接线方式" class="headerlink" title="1.4.3继电器输出端子接线方式"></a>1.4.3继电器输出端子接线方式</h3><p><img src="11.png" alt></p><h1 id="1-5smart软件相关"><a href="#1-5smart软件相关" class="headerlink" title="1.5smart软件相关"></a>1.5smart软件相关</h1><h2 id="1-5-1-smart-200编程软件的安装"><a href="#1-5-1-smart-200编程软件的安装" class="headerlink" title="1.5.1 smart 200编程软件的安装"></a>1.5.1 smart 200编程软件的安装</h2><p><img src="12.png" alt></p><h2 id="1-5-2-smart-200无法与plc进行通信的解决方法"><a href="#1-5-2-smart-200无法与plc进行通信的解决方法" class="headerlink" title="1.5.2 smart 200无法与plc进行通信的解决方法"></a>1.5.2 smart 200无法与plc进行通信的解决方法</h2><p><img src="13.png" alt></p><h2 id="1-5-3-smart-200常用快捷键"><a href="#1-5-3-smart-200常用快捷键" class="headerlink" title="1.5.3 smart 200常用快捷键"></a>1.5.3 smart 200常用快捷键</h2><p><img src="14.png" alt></p><h2 id="1-5-4-程序的加密与解除"><a href="#1-5-4-程序的加密与解除" class="headerlink" title="1.5.4 程序的加密与解除"></a>1.5.4 程序的加密与解除</h2><p><img src="15.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> PLC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> smart200 </tag>
            
            <tag> smart200基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo下个人博客搭建</title>
      <link href="/2019/05/15/2019-05-15-hexo-xia-ge-ren-bo-ke-da-jian/"/>
      <url>/2019/05/15/2019-05-15-hexo-xia-ge-ren-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<blockquote><p><strong>关注公众号：自律的鱼，让自律伴你我左右</strong>。有任何问题可随时联系我。</p></blockquote><h1 id="一、博客源代码地址"><a href="#一、博客源代码地址" class="headerlink" title="一、博客源代码地址"></a>一、博客源代码地址</h1><p>大家可以直接素质二连，star&amp;fork我的博客源代码：<a href="https://github.com/fishyo9/hexo-matery-modified" target="_blank" rel="noopener">https://github.com/fishyo9/hexo-matery-modified</a></p><p>然后改改配置就可以写文章啦。</p><ul><li>将所有文件下载到本地，解压修改即可使用。</li></ul><h1 id="二、快速搭建"><a href="#二、快速搭建" class="headerlink" title="二、快速搭建"></a>二、快速搭建</h1><p>如果你不想自己从头开始慢慢自定义主题的话，可以直接下载我的修改好的主题，然后稍微修改几个地方就好了：</p><ul><li>根目录配置文件<code>_config.yml</code>和主题目录配置文件<code>_config.yml</code>中修改个人信息。</li><li>根目录配置文件中修改<code>baidu_url_submit</code>一栏的<code>token</code>。</li><li>将本地生成博客目录里面public下所有文件上传到服务器或github即可。</li></ul><p><strong>当然前提是个性化设置章节之前的环境还是需要配置好！</strong></p><p>平时常用命令：</p><pre class="line-numbers language-txt"><code class="language-txt">hexo g  # 生成博客网页文件hexo s  # 本地预览博客<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="三、目录结构"><a href="#三、目录结构" class="headerlink" title="三、目录结构"></a>三、目录结构</h1><ul><li>安装Node.js</li><li>安装Git</li><li>安装Hexo</li><li>写文章、发布文章</li><li>添加网易云音乐BGM</li><li>添加百度统计和谷歌统计代码</li><li>修复代码块行号不显示bug</li><li>动态标签栏</li><li>代码块显示问题</li><li>Github托管网页</li></ul><h1 id="四、安装Node-js"><a href="#四、安装Node-js" class="headerlink" title="四、安装Node.js"></a>四、安装Node.js</h1><p>首先下载稳定版<a href="https://nodejs.org/dist/v9.11.1/node-v9.11.1-x64.msi" target="_blank" rel="noopener">Node.js</a>，我这里给的是64位的。</p><p>安装选项全部默认，一路点击<code>Next</code>。</p><p>最后安装好之后，按<code>Win+R</code>打开命令提示符，输入<code>node -v</code>和<code>npm -v</code>，如果出现版本号，那么就安装成功了。</p><h1 id="五、安装Git"><a href="#五、安装Git" class="headerlink" title="五、安装Git"></a>五、安装Git</h1><p>为了把本地的网页文件上传到github上面去，我们需要用到分布式版本控制工具————Git<a href="https://git-scm.com/download/win" target="_blank" rel="noopener">[下载地址]</a>。</p><p>安装选项还是全部默认，只不过最后一步添加路径时选择<code>Use Git from the Windows Command Prompt</code>，这样我们就可以直接在命令提示符里打开git了。</p><p>安装完成后在命令提示符中输入<code>git --version</code>验证是否安装成功。</p><h1 id="六、安装Hexo"><a href="#六、安装Hexo" class="headerlink" title="六、安装Hexo"></a>六、安装Hexo</h1><p>在合适的地方新建一个文件夹，用来存放自己的博客文件。</p><p>在该目录下右键点击<code>Git Bash Here</code>，打开git的控制台窗口，以后我们所有的操作都在git控制台进行，就不要用Windows自带的控制台了。</p><p>定位到该目录下，输入<code>npm i hexo-cli -g</code>安装Hexo。</p><p>安装完后输入<code>hexo -v</code>验证是否安装成功。</p><p>然后就要初始化我们的网站，输入<code>hexo init</code>初始化文件夹，接着输入<code>npm install</code>安装必备的组件。</p><p>这样本地的网站配置也弄好啦，输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>打开本地服务器，然后浏览器打开<a href="http://localhost:4000/，就可以看到我们的博客啦。" target="_blank" rel="noopener">http://localhost:4000/，就可以看到我们的博客啦。</a></p><p>按<code>ctrl+c</code>关闭本地服务器。</p><h1 id="七、写文章、发布文章"><a href="#七、写文章、发布文章" class="headerlink" title="七、写文章、发布文章"></a>七、写文章、发布文章</h1><p>首先在博客根目录下右键打开git bash，安装一个扩展<code>npm i hexo-deployer-git</code>。</p><p>然后输入<code>hexo new post &quot;article title&quot;</code>，新建一篇文章。</p><p>然后打开根目录下/source/_posts<code>的目录，可以发现下面多了一个文件夹和一个</code>.md`文件，一个用来存放你的图片等数据，另一个就是你的文章文件啦。</p><p>编写完markdown文件后，根目录下输入<code>hexo g</code>生成静态网页，然后输入<code>hexo s</code>可以本地预览效果，将本地生成博客目录里面public下所有文件上传到服务器或github即可。</p><h1 id="八、添加网易云音乐BGM"><a href="#八、添加网易云音乐BGM" class="headerlink" title="八、添加网易云音乐BGM"></a>八、添加网易云音乐BGM</h1><p>写文章的时候，想插入一段BGM怎么办？</p><p>首先打开网易云网页版，找到想听的歌曲，然后点击生成外链：</p><p>复制如下代码，粘贴到文章里就行了，为了美观，设置一下居中，具体代码如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这里粘贴刚刚复制的代码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h1 id="九、添加百度统计和谷歌统计代码"><a href="#九、添加百度统计和谷歌统计代码" class="headerlink" title="九、添加百度统计和谷歌统计代码"></a>九、添加百度统计和谷歌统计代码</h1><p>首先打开<a href="https://ziyuan.baidu.com/site/index" target="_blank" rel="noopener">百度站长平台</a>，然后点击添加网站，输入网址并选择领域。</p><p>接下来要验证网站所有权，有三种方式，推荐采用HTML标签验证，最简单，将代码复制出来。</p><p>打开<code>themes/matery/layout/_partial/head.ejs</code>，修改下面两行：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>baidu-site-verification<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>google-site-verification<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xxx<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="十、修复代码块行号不显示bug"><a href="#十、修复代码块行号不显示bug" class="headerlink" title="十、修复代码块行号不显示bug"></a>十、修复代码块行号不显示bug</h1><p>修改<code>themes/matery/source/css/matery.css</code>第95行左右的<code>pre</code>和<code>code</code>两段改为如下代码：</p><pre class="line-numbers language-css"><code class="language-css"><span class="token selector">pre </span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/* padding: 1.5rem !important; */</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1.5</span>rem <span class="token number">1.5</span>rem <span class="token number">1.5</span>rem <span class="token number">3.3</span>rem <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">1</span>rem <span class="token number">0</span> <span class="token important">!important</span><span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#272822</span><span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">0.35</span>rem<span class="token punctuation">;</span>    <span class="token property">tab-size</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">code </span><span class="token punctuation">{</span>    <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">1</span>px <span class="token number">5</span>px<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> Inconsolata, Monaco, Consolas, <span class="token string">'Courier New'</span>, Courier, monospace<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* font-size: 0.91rem; */</span>    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#e96900</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#f8f8f8</span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> <span class="token number">2</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后在根目录的<code>_config.yml</code>中设置<code>prism_plugin.line_number</code>为<code>true</code>。</p><h1 id="十一、动态标签栏"><a href="#十一、动态标签栏" class="headerlink" title="十一、动态标签栏"></a>十一、动态标签栏</h1><p>在<code>theme/matery/layout/layout.ejs</code>下添加如下代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"> <span class="token keyword">var</span> OriginTitile <span class="token operator">=</span> document<span class="token punctuation">.</span>title<span class="token punctuation">,</span> st<span class="token punctuation">;</span> document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"visibilitychange"</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> document<span class="token punctuation">.</span>hidden <span class="token operator">?</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"已失联"</span><span class="token punctuation">,</span> <span class="token function">clearTimeout</span><span class="token punctuation">(</span>st<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>document<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">"访问中"</span><span class="token punctuation">,</span> st <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> document<span class="token punctuation">.</span>title <span class="token operator">=</span> OriginTitile <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">3e3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h1 id="十二、代码块显示问题"><a href="#十二、代码块显示问题" class="headerlink" title="十二、代码块显示问题"></a>十二、代码块显示问题</h1><ul><li>不要按照网上教程安装<code>kramed</code>插件，已经装了的卸载掉。</li></ul><h1 id="十三、Github托管网页"><a href="#十三、Github托管网页" class="headerlink" title="十三、Github托管网页"></a>十三、Github托管网页</h1><ul><li>自行百度即可解决。</li><li>域名解析到github仓库即可。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Eclipse下开发环境配置</title>
      <link href="/2019/05/09/2019-05-09-eclipse-xia-kai-fa-huan-jing-pei-zhi/"/>
      <url>/2019/05/09/2019-05-09-eclipse-xia-kai-fa-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="Eclipse下开发环境配置"><a href="#Eclipse下开发环境配置" class="headerlink" title="Eclipse下开发环境配置"></a>Eclipse下开发环境配置</h1><h2 id="1-maven仓库的配置"><a href="#1-maven仓库的配置" class="headerlink" title="1. maven仓库的配置"></a>1. maven仓库的配置</h2><hr><ol><li>Maven 官网下载  <a href="https://maven.apache.org/" target="_blank" rel="noopener">https://maven.apache.org/</a> </li></ol><p><img src="1.png" alt></p><ol start="2"><li>然后进行解压，在文件下新建maven-repository 文件夹 这就是以后你本地Maven仓库 </li></ol><p><img src="2.png" alt></p><ol start="3"><li>修改config文件下setting.xml文件 </li></ol><p><img src="3.png" alt></p><p>路径修改为你刚才新建的maven-repssitort文件路径</p><ol start="4"><li><p>然后配置Maven环境变量</p><p>新建变量名 MAVEN_HOME,然后把路劲放在变量值里面</p><p><img src="4.png" alt></p><p>在path后面加上%MAVEN_HOME%\bin\； </p></li></ol><p><img src="5.png" alt></p><p> 检查Maven环境变量是否配置成功 cmd输入mvn -v如下 </p><p><img src="6.png" alt></p><ol start="5"><li>在eclipse中配置maven   windows–Preferences </li></ol><p><img src="7.png" alt></p><p><img src="8.png" alt></p><ol start="6"><li>OK 到此我们的eclipse maven 配置成功 </li></ol><h2 id="2-java环境的配置"><a href="#2-java环境的配置" class="headerlink" title="2. java环境的配置"></a>2. java环境的配置</h2><ol><li><p>下载java安装包   <a href="https://www.oracle.com/technetwork/cn/java/javase/downloads/index.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/cn/java/javase/downloads/index.html</a> </p><p>接下来选择对应的版本，我选择windows 64位版，然后勾上同意协议，点击下载链接 </p></li></ol><p><img src="11.png" alt="11"></p><p><img src="12.png" alt="12"></p><ol start="2"><li><p>下载完成后安装即可</p><p>接下来就是windows程序的通用安装过程了，一路下一步，其中可以选择安装的路径 </p></li></ol><p><img src="13.png" alt="13"></p><p> 整个过程分为安装安装jre（java运行时）和jdk（java开发者工具）两个过程，如果你更改了安装路径，需要注意把两个改成一样的 </p><ol start="3"><li>配置系统环境变量： 右键我的电脑 -》 属性 -》 高级系统设置 -》 系统变量</li></ol><p>变量设置参数如下：（要根据自己实际路径进行配置）</p><p>变量名：<strong>JAVA_HOME</strong></p><p>变量值：<strong>C:\Program Files\Java\jdk1.8.0_231</strong>     // 要根据自己的实际jdk路径配置</p><p>变量名：<strong>CLASSPATH</strong></p><p>变量值：<strong>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</strong>     //记得前面有个”.”</p><p>变量名：<strong>Path</strong></p><p>变量值：<strong>%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</strong>  &lt;—注意win10中path变量是分条显示的需要分别添加  或者分别添加下面两个绝对路径变量</p><p>C:\Program Files\Java\jdk1.8.0_231\jre\bin   /  C:\Program Files\Java\jdk1.8.0_231\bin </p><ol start="4"><li>测试JDK是否安装成功</li></ol><p>1、”开始”-&gt;”运行”，键入”cmd”；</p><p>2、键入命令: <strong>java -version</strong>、<strong>java</strong>、<strong>javac</strong> 几个命令，有版本信息，说明环境变量配置成功；</p><ol start="5"><li><p>在eclipse中配置JDKA </p><p>打开window–&gt;preferences，弹出的页面里选择java–&gt;Installed JREs，打开如下图界面 </p></li></ol><p><img src="14.png" alt="14"></p><p> 然后点击右侧add按钮，打开add jre对话框： </p><p><img src="15.png" alt="15"></p><p> 点击下一步，打开jre路径选择对话框 </p><p><img src="16.png" alt="16"></p><p> 选择JRE home之后，自动会填充JRE name和下面的jar，这里也可以设置vm参数，一般直接点击finish完成即可。到此新的JRE已经配置完成，如果配置了多个JDK，可以勾选一个作为默认，如下图： </p><p><img src="17.png" alt="17"></p><p>设置全局编译版本</p><p> 打开window–&gt;preferences，弹出的页面里选择java–&gt;Compiler，打开如下图界面： </p><p><img src="18.png" alt="18"></p><p>web项目里设置编译版本</p><p><img src="19.png" alt="19"></p>]]></content>
      
      
      <categories>
          
          <category> Eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 配置 </tag>
            
            <tag> 开发环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux常用操作指令</title>
      <link href="/2019/05/05/2019-05-05-linux-chang-yong-cao-zuo-zhi-ling/"/>
      <url>/2019/05/05/2019-05-05-linux-chang-yong-cao-zuo-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="【-Linux常用操作指令】"><a href="#【-Linux常用操作指令】" class="headerlink" title="【 Linux常用操作指令】"></a><strong>【 Linux常用操作指令】</strong></h1><h2 id="一、-修改文件"><a href="#一、-修改文件" class="headerlink" title="一、 修改文件"></a>一、 修改文件</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token number">1</span><span class="token punctuation">.</span>修改配置文件管理员下的只读文件强制修改：  <span class="token punctuation">:</span>w <span class="token operator">!</span>sudo tee <span class="token operator">%</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、软件"><a href="#二、软件" class="headerlink" title="二、软件"></a><strong>二、软件</strong></h2><pre class="line-numbers language-js"><code class="language-js"><span class="token number">1</span><span class="token punctuation">.</span>检查防火墙装状态<span class="token punctuation">:</span>从centos7开始使用systemctl来管理服务和程序，包括了service和chkconfig。systemctl list<span class="token operator">-</span>unit<span class="token operator">-</span>files<span class="token operator">|</span>grep firewalld<span class="token punctuation">.</span>service  详情 systemctl status firewalld<span class="token punctuation">.</span>service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="三、系统"><a href="#三、系统" class="headerlink" title="三、系统"></a>三、系统</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token number">1</span><span class="token punctuation">.</span>重启Linux<span class="token punctuation">:</span>     reboot<span class="token number">2</span><span class="token punctuation">.</span>使用root权限<span class="token punctuation">:</span>     su root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="三、其他"><a href="#三、其他" class="headerlink" title="三、其他"></a>三、其他</h2><pre class="line-numbers language-js"><code class="language-js"><span class="token number">1</span><span class="token punctuation">.</span>更改分辨率<span class="token punctuation">:</span>   xrandr <span class="token operator">-</span>s <span class="token number">10</span>    <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span><span class="token number">13</span><span class="token operator">/</span>help<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 操作指令 </tag>
            
            <tag> Linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>tomcat&amp;servlet入门</title>
      <link href="/2019/04/27/2019-04-27-tomcat-servlet-ru-men/"/>
      <url>/2019/04/27/2019-04-27-tomcat-servlet-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="Tomcat服务器-amp-servlet入门程序"><a href="#Tomcat服务器-amp-servlet入门程序" class="headerlink" title="Tomcat服务器&amp;servlet入门程序"></a>Tomcat服务器&amp;servlet入门程序</h1><h1 id="第1章-tomcat服务器"><a href="#第1章-tomcat服务器" class="headerlink" title="第1章 tomcat服务器"></a>第1章 tomcat服务器</h1><h2 id="1-1-软件的架构"><a href="#1-1-软件的架构" class="headerlink" title="1.1 软件的架构"></a>1.1 软件的架构</h2><h3 id="1-1-1-网络应用程序（软件）的组成"><a href="#1-1-1-网络应用程序（软件）的组成" class="headerlink" title="1.1.1 网络应用程序（软件）的组成"></a>1.1.1 网络应用程序（软件）的组成</h3><p>网络中有很多的计算机，它们直接的信息交流，我们称之为：交互。<br>在互联网交互的过程的有两个非常典型的交互方式——B/S 交互模型和C/S 交互模型。</p><p><strong>什么是B/S 交互模型？</strong></p><p>答：就是浏览器和服务器交互模型。</p><p><strong>什么是C/S 交互模型？</strong></p><p>答：就是客户端（例如：百度网盘）和服务器交互模型。</p><p><strong>B/S 和C/S交互模型相同点和不同点：</strong></p><p><strong>相同点：</strong></p><ol><li><p><strong>都是基于请求-响应交互模型，即：</strong></p><p><strong>浏览器（客户端） 向 服务器发送 一个 请求。</strong></p><p><strong>服务器 向 浏览器（客户端）回送 一个 响应 。</strong></p></li><li><p><strong>必须先有请求 再有响应</strong> </p></li><li><p><strong>请求和响应成对出现</strong> </p></li></ol><p><strong>不同点：</strong></p><ol><li><strong>实现C/S模型需要用户在自己的操作系统安装各种客户端软件（百度网盘、腾讯QQ等）；实现B/S模型，只需要用户在操作系统中安装浏览器即可。</strong></li></ol><p>注：B/S模型可以理解为一种特殊C/S模型。</p><h2 id="1-2-web资源的类别"><a href="#1-2-web资源的类别" class="headerlink" title="1.2 web资源的类别"></a>1.2 web资源的类别</h2><h3 id="1-2-1-静态资源"><a href="#1-2-1-静态资源" class="headerlink" title="1.2.1 静态资源"></a>1.2.1 静态资源</h3><pre><code>  指web页面中供人们浏览的数据始终是不变。比如：HTML、CSS、JS、图片、音频、视频。</code></pre><h3 id="1-2-2-动态资源"><a href="#1-2-2-动态资源" class="headerlink" title="1.2.2 动态资源"></a>1.2.2 动态资源</h3><pre><code>  指web页面中供人们浏览的数据是由程序产生的，不同时间点访问web页面看到的内容各不相同。</code></pre><p>比如：你在不同时间搜索微博的热门话题内容是不一样的，每天的天气情况也是变化的。这些数据由程序生成，JSP/Servlet、ASP、PHP等技术都可以完成。</p><pre><code>总结：    静态资源的数据都是写死在页面上的固定不变。    动态资源浏览器访问的结果是变化的（动态web资源你的数据都是程序读取数据库、xml等文件生成的数据）。</code></pre><p>​    接下来主要学习动态web资源。      </p><h2 id="1-3-服务器的概念"><a href="#1-3-服务器的概念" class="headerlink" title="1.3 服务器的概念"></a>1.3 服务器的概念</h2><h3 id="1-3-1-什么是服务器"><a href="#1-3-1-什么是服务器" class="headerlink" title="1.3.1 什么是服务器"></a>1.3.1 什么是服务器</h3><p>​    服务器就是一个软件，任何电脑只需要安装上了服务器软件，然后该电脑的指定目录下的资源就能提供对外访问。</p><h2 id="1-4-服务器的作用"><a href="#1-4-服务器的作用" class="headerlink" title="1.4 服务器的作用"></a>1.4 服务器的作用</h2><h3 id="1-4-1服务器的作用"><a href="#1-4-1服务器的作用" class="headerlink" title="1.4.1服务器的作用"></a>1.4.1服务器的作用</h3><p><strong>提供计算服务的设备，服务类型有很多，常见的有：游戏服务，购物服务，新闻服务等。</strong></p><p><img src="59.png" alt></p><h2 id="1-5-常见的服务器软件"><a href="#1-5-常见的服务器软件" class="headerlink" title="1.5 常见的服务器软件"></a>1.5 常见的服务器软件</h2><h3 id="1-5-1-常见的服务器软件介绍"><a href="#1-5-1-常见的服务器软件介绍" class="headerlink" title="1.5.1 常见的服务器软件介绍"></a>1.5.1 常见的服务器软件介绍</h3><ol><li><p><strong>WebLogic</strong></p><p>​    Oracle公司的产品，是目前应用最广泛的Web服务器，支持J2EE规范。WebLogic是用于开发、集成、部署和管理大型分布式Web应用、网络应用和数据库应用的Java应用服务器。</p></li><li><p><strong>WebSphere</strong></p><p>​       IBM公司的WebSphere，支持JavaEE规范。WebSphere 是随需应变的电子商务时代的最主要的软件平台，可用于企业开发、部署和整合新一代的电子商务应用。</p></li><li><p><strong>Glass Fish</strong></p><p>​      最早是Sun公司的产品，后来被Oracle收购，开源，中型服务器。</p></li><li><p><strong>JBoss</strong> </p><p>​      JBoss公司产品，开源，支持JavaEE规范，占用内存、硬盘小，安全性和性能高。</p></li><li><p><strong>Tomcat</strong></p><p>​    中小型的应用系统，免费开源，支持JSP和Servlet。    </p><p>​    注意：今天我们学习和使用的是tomcat服务器。</p></li></ol><h2 id="1-6-tomcat服务器软件安装和介绍"><a href="#1-6-tomcat服务器软件安装和介绍" class="headerlink" title="1.6 tomcat服务器软件安装和介绍"></a>1.6 tomcat服务器软件安装和介绍</h2><p>Tomcat基本概述：    </p><p>​    Tomcat服务器是一个免费的开放源代码的Web应用服务器。Tomcat是Apache软件基金会（Apache Software Foundation）的Jakarta项目中的一个核心项目，由Apache、Sun和其他一些公司及个人共同开发而成。由于有了Sun的参与和支持，最新的Servlet 和JSP规范总是能在Tomcat中得到体现。</p><p>​    因为Tomcat技术先进、性能稳定，而且免费，因而深受Java爱好者的喜爱并得到了部分软件开发商的认可，是目前比较流行的Web应用服务器。</p><h3 id="1-6-1-tomcat服务器软件下载"><a href="#1-6-1-tomcat服务器软件下载" class="headerlink" title="1.6.1 tomcat服务器软件下载"></a>1.6.1 tomcat服务器软件下载</h3><ol><li><p><strong>先去官网下载：<a href="http://tomcat.apache.org/，选择tomcat8版本（红框所示）" target="_blank" rel="noopener">http://tomcat.apache.org/，选择tomcat8版本（红框所示）</a></strong>：</p><p><img src="01.png" alt></p></li><li><p><strong>选择要下载的文件（红框所示）</strong>：</p><p><img src="02.png" alt></p><p> tar.gz 文件 是linux操作系统下的安装版本</p><p> exe文件是window操作系统下的安装版本</p><p> zip文件是window操作系统下压缩版本（我们选择zip文件）</p></li></ol><ol start="3"><li><strong>下载完成</strong>：</li></ol><p><img src="03.png" alt></p><h3 id="1-6-2-tomcat服务器软件安装"><a href="#1-6-2-tomcat服务器软件安装" class="headerlink" title="1.6.2 tomcat服务器软件安装"></a>1.6.2 tomcat服务器软件安装</h3><ol><li><p><strong>直接解压当前这个tomcat压缩包</strong>：</p></li><li><p><strong>配置环境变量</strong>：</p><p>tomcat运行依赖于java环境：<br><img src="05.png" alt>        </p></li></ol><h3 id="1-6-3-启动与关闭tomcat服务器"><a href="#1-6-3-启动与关闭tomcat服务器" class="headerlink" title="1.6.3 启动与关闭tomcat服务器"></a>1.6.3 启动与关闭tomcat服务器</h3><ol><li><p><strong>启动tomcat服务器</strong></p><p>查找tomcat目录下bin目录，查找其中的startup.bat命令，双击启动服务器：<br><img src="06.png" alt></p><p>启动效果：<br><img src="07.png" alt></p></li></ol><ol start="2"><li><p><strong>测试访问tomcat服务器</strong></p><p>打开浏览器在，在浏览器的地址栏中输入：</p><p><a href="http://127.0.0.1:8080" target="_blank" rel="noopener">http://127.0.0.1:8080</a></p><p><a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p><p><img src="08.png" alt></p><p>注： Localhost相当于127.0.0.1</p></li></ol><ol start="3"><li><strong>关闭tomcat服务器</strong></li></ol><p>​    常用方式1:查找tomcat目录下bin目录，查找其中的shutdown.bat命令，双击关闭服务器：<br><img src="09.png" alt></p><p>​    常用方式2:可以点击cmd窗口的退出按钮</p><h3 id="1-6-4-tomcat安装常见的问题"><a href="#1-6-4-tomcat安装常见的问题" class="headerlink" title="1.6.4 tomcat安装常见的问题"></a>1.6.4 tomcat安装常见的问题</h3><ol><li><p><strong>无法启动（闪退：cmd命令窗口出现一下，就消失）</strong>：</p><p>主要原因：没有配置JAVA_HOME环境变量。<br>JAVA_HOME 环境变量 中配置的是JDK的安装目录，不包含bin目录，不是tomcat的安装目录。</p><p>闪退的原因查看：可以在startup.bat文件末尾书写pause命令。让运行的窗口暂停。</p><p>效果：<br><img src="10.png" alt></p></li></ol><ol start="2"><li><p><strong>端口被占用导致启动失败</strong></p><p>如果启动的时候，发生异常问题，这时有可能是端口被占用。</p><p>Tomcat服务器在启动的时候默认占用本地的8080端口，如果这个端口被占用，启动的时候就会报错。</p><p>报错内容可以通过查询tomcat目录下的logs目录中Catalina.当前系统年月日.log文件查看，如下图：</p><p><img src="11.png" alt></p><p>我们需要做的是查看本地端口使用情况，关闭占用端口的程序：<br>在dos窗口中输入  netstat –nao 就可以查看当前端口的占用情况：</p><p><img src="12.png" alt></p><p>使用任务管理器—-&gt;选择详细信息—-&gt;查看pid为11604（查询出来的                                        值），关闭结束进程即可：</p><p><img src="13.png" alt></p><p>注意：如果这个进程是操作系统的任务进程，这时一般是不能停止这个进程。</p><p>如果是系统进程占用端口，那么我们只能换一个端口，下面看如何修改端口：</p></li></ol><ol start="3"><li><p><strong>修改tomcat启动端口</strong></p><p>Tomcat服务器的配置文件，全部都在tomcat的安装目录下conf目录下：</p></li></ol><p><img src="14.png" alt></p><p>​    server.xml:服务器端口配置、服务器自身配置文件</p><p>​    打开server.xml，修改服务器端口：</p><p><img src="15.png" alt></p><p>​    修改tomcat的端口为9090：</p><p>​    修改完server.xml文件必须重启服务器才能有效。<br>​    通过浏览器的地址栏访问测试：<a href="http://localhost:9090" target="_blank" rel="noopener">http://localhost:9090</a></p><h3 id="1-6-5-tomcat目录介绍"><a href="#1-6-5-tomcat目录介绍" class="headerlink" title="1.6.5 tomcat目录介绍"></a>1.6.5 tomcat目录介绍</h3><p><img src="04.png" alt="04"></p><h2 id="1-7-web项目目录结构（重要）"><a href="#1-7-web项目目录结构（重要）" class="headerlink" title="1.7 web项目目录结构（重要）"></a>1.7 web项目目录结构（重要）</h2><p>在JavaEE规范中，WEB项目存在一定的目录结构，具体结构如下：</p><p><img src="C:/Users/Administrator/Desktop/HTML/day27_tomcat_servlet/day27_tomcat_servlet/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83_%E8%AE%B2%E4%B9%89/img/107.png" alt></p><h2 id="1-8-tomcat的发布项目方式"><a href="#1-8-tomcat的发布项目方式" class="headerlink" title="1.8 tomcat的发布项目方式"></a>1.8 tomcat的发布项目方式</h2><h3 id="1-8-1-在webapps文件夹下面直接发布"><a href="#1-8-1-在webapps文件夹下面直接发布" class="headerlink" title="1.8.1 在webapps文件夹下面直接发布"></a>1.8.1 在webapps文件夹下面直接发布</h3><p>​    <strong>只要将准备好的web资源直接复制到tomcat/webapps文件夹下，就可以通过浏览器使用http协议访问获取</strong></p><p>创建aaa文件夹：<img src="16.png" alt></p><p>定义一个html文件，内容为：</p><pre class="line-numbers language-html"><code class="language-html"> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Hello Tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-8-2-使用虚拟路径的方式发布项目（两种方式）"><a href="#1-8-2-使用虚拟路径的方式发布项目（两种方式）" class="headerlink" title="1.8.2 使用虚拟路径的方式发布项目（两种方式）"></a>1.8.2 使用虚拟路径的方式发布项目（两种方式）</h3><ol><li><p><strong>第一种：配置server.xml，添加context标签</strong></p><p>第一步：在c盘work目录下创建一个文件夹为aa，在aa文件夹中添加一个1.html文件内容为：hello world！！！</p><p>​    <img src="24.png" alt></p><p>​    第二步：在tomcat/conf/server.xml中找到<host>标签，添加<context>标签，如图所示：<img src="25.png" alt></context></host></p><p><strong>注：这一种方式有一个缺点，就是server.xml是tomcat核心文件一旦出错，导致整个tomcat无法启动。</strong></p></li></ol><ol start="2"><li><p><strong>第二种：配置独立xml文件</strong></p><p>第一步：在tomcat/conf目录下新建一个Catalina目录（如果已经存在无需创建）<br><img src="26.png" alt><br>​第二步：在Catalina目录下创建localhost目录<br><img src="27.png" alt><br>​第三步：在localhost中创建xml配置文件，名称为：second（注：这个名称是浏览器访问路径）<br><img src="28.png" alt><br>​第四步：添加xml文件的内容为：</p><context docbase="C:\work\bb"><p>第五步：在C:\work\bb下创建1.html，内容为“hello tomcat！！！”，访问测试<br><img src="29.png" alt></p></context></li></ol><p><strong>第二种发布方式的优点：无需重启服务器自动加载和卸载项目</strong></p><p>演示：<br>在second.xml创建一个bak文件夹，将second.xml移动到bak文件夹之后：<br><img src="30.png" alt><br>服务器自动卸载项目：<br><img src="31.png" alt><br>将second.xml移动回到localhost目录下：<br><img src="32.png" alt><br>服务器自动加载项目（需要等待一会儿时间）：<br><img src="33.png" alt></p><h2 id="1-9-IDEA中配置tomcat"><a href="#1-9-IDEA中配置tomcat" class="headerlink" title="1.9 IDEA中配置tomcat"></a>1.9 IDEA中配置tomcat</h2><p>因为我们开发的时候都是用IDE,所有我们要将idea和tomcat集成到一起，可以通过idea就控制tomcat的启动和关闭：</p><h3 id="1-9-1-在工程中配置tomcat服务器"><a href="#1-9-1-在工程中配置tomcat服务器" class="headerlink" title="1.9.1 在工程中配置tomcat服务器"></a>1.9.1 在工程中配置tomcat服务器</h3><p><img src="42.png" alt></p><p><img src="43.png" alt></p><p><img src="44.png" alt></p><p><img src="45.png" alt></p><p><img src="46.png" alt></p><p>点击OK回到配置目录,然后再次点击”Configure”</p><blockquote><p>此步不操作的话,会出现两个名称的服务器,一个”tomcat8”,一个”Tomcat 8.5.27”;前者不能使用,后面这个才是真正配置好的服务器,若不配置以下步骤,服务器也可以使用,都是使用”Tomcat 8.5.27”.为了避免这种现象建议操作此步.</p></blockquote><p><img src="47.png" alt></p><p><img src="48.png" alt></p><p>点击ok回到项目区,此时tomcat就配置完成了.</p><blockquote><p>注意:在一个项目中,以上的配置只需要配置一次即可.</p></blockquote><h3 id="1-9-2-测试配置"><a href="#1-9-2-测试配置" class="headerlink" title="1.9.2 测试配置"></a>1.9.2 测试配置</h3><ol><li><p><strong>创建web项目：</strong></p><p><img src="501.png" alt></p><p><img src="502.png" alt></p><p>给模块起个名字,点击finish即可<br><img src="504.png" alt></p></li><li><p><strong>配置访问路径</strong></p><p><img src="505.png" alt></p><p><img src="506.png" alt></p><p>修改完成之后就可以启动tomcat服务器了.</p><p><img src="507.png" alt></p></li></ol><ol start="3"><li><p><strong>浏览器测试访问</strong></p><p>在项目下的web/WEB-INF下有一个index.jsp,当我们启动成功的时候就会访问</p><p><a href="http://localhost:9090/day02" target="_blank" rel="noopener">http://localhost:9090/day02</a> </p><p>访问的就是day02下的index.jsp页面</p></li></ol><h1 id="第2章-Servlet入门"><a href="#第2章-Servlet入门" class="headerlink" title="第2章 Servlet入门"></a>第2章 Servlet入门</h1><h2 id="2-1-Servlet2-5实现Hello-world例子"><a href="#2-1-Servlet2-5实现Hello-world例子" class="headerlink" title="2.1 Servlet2.5实现Hello world例子"></a>2.1 Servlet2.5实现Hello world例子</h2><h3 id="2-1-1-servlet的基本概述"><a href="#2-1-1-servlet的基本概述" class="headerlink" title="2.1.1 servlet的基本概述"></a>2.1.1 servlet的基本概述</h3><p>Servlet 运行在服务端的Java小程序，是sun公司提供一套规范，用来处理客户端请求、响应给浏览器的动态资源。但servlet的实质就是java代码，通过java的API动态的向客户端输出内容</p><ol><li><p><strong>查阅JavaEE手册（帮助文档）阅读Servlet规范</strong>：</p><p><img src="34.png" alt></p><p><strong>根据文档总结，书写servlet一个三个步骤</strong>：</p><p><strong>1）创建一个class实现servlet接口</strong></p><p><strong>2）重写service方法</strong></p><p><strong>3）创建的类必须在web.xml文件中做配置</strong></p></li><li><p><strong>为什么要做配置？</strong></p><p>答：必须将请求路径和java程序的对应关系建立起来。</p></li></ol><h3 id="2-1-2-servlet与普通的java程序的区别"><a href="#2-1-2-servlet与普通的java程序的区别" class="headerlink" title="2.1.2 servlet与普通的java程序的区别"></a>2.1.2 servlet与普通的java程序的区别</h3><pre><code>1.必须实现servlet接口2.必须在servlet容器（服务器）中运行3.servlet程序可以接收用户请求参数以及向浏览器输出数据</code></pre><h3 id="2-1-3-代码实现servlet的步骤"><a href="#2-1-3-代码实现servlet的步骤" class="headerlink" title="2.1.3 代码实现servlet的步骤"></a>2.1.3 代码实现servlet的步骤</h3><ol><li>在工程下创建cn.itcast.web包,在包下创建一个类实现 Servlet接口</li><li>实现service方法</li><li>在web.xml中配置书写好的servlet</li></ol><h3 id="2-1-4-servlet代码实现"><a href="#2-1-4-servlet代码实现" class="headerlink" title="2.1.4 servlet代码实现"></a>2.1.4 servlet代码实现</h3><p><strong>在cn.itcast.web包下创建一个类实现Servlet接口</strong></p><p><img src="41.png" alt></p><p>servlet代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span><span class="token punctuation">{</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>ServletConfig servletConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> ServletConfig <span class="token function">getServletConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> null<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"第一个servlet程序"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> String <span class="token function">getServletInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> null<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    Web.xml配置（该文件在web/WEB-INF 文件夹下）：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">?</span>xml version<span class="token operator">=</span><span class="token string">"1.0"</span> encoding<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">?</span><span class="token operator">></span>  <span class="token operator">&lt;</span>web<span class="token operator">-</span>app xmlns<span class="token operator">=</span><span class="token string">"http://java.sun.com/xml/ns/javaee"</span>  xmlns<span class="token operator">:</span>xsi<span class="token operator">=</span><span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>    xsi<span class="token operator">:</span>schemaLocation<span class="token operator">=</span>"http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>java<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>com<span class="token operator">/</span>xml<span class="token operator">/</span>ns<span class="token operator">/</span>javaee      http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>java<span class="token punctuation">.</span>sun<span class="token punctuation">.</span>com<span class="token operator">/</span>xml<span class="token operator">/</span>ns<span class="token operator">/</span>javaee<span class="token operator">/</span>web<span class="token operator">-</span>app_2_5<span class="token punctuation">.</span>xsd"version<span class="token operator">=</span><span class="token string">"2.5"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>servlet<span class="token operator">></span>          <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">></span>DemoServlet<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">></span>          <span class="token operator">&lt;</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">></span>cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">.</span>DemoServlet<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span><span class="token keyword">class</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">></span>    <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>mapping<span class="token operator">></span>        <span class="token operator">&lt;</span>servlet<span class="token operator">-</span>name<span class="token operator">></span>DemoServlet<span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>name<span class="token operator">></span>        <span class="token operator">&lt;</span>url<span class="token operator">-</span>pattern<span class="token operator">></span><span class="token operator">/</span>demo<span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">-</span>pattern<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>servlet<span class="token operator">-</span>mapping<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>app<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>打开浏览器访问:</strong></p><p><a href="http://localhost:9090/day02/demo" target="_blank" rel="noopener">http://localhost:9090/day02/demo</a> </p><p>就可以在idea的控制台看到输出了”第一个servlet程序”</p><h2 id="2-2-Servlet3-0实现Hello-world例子"><a href="#2-2-Servlet3-0实现Hello-world例子" class="headerlink" title="2.2 Servlet3.0实现Hello world例子"></a>2.2 Servlet3.0实现Hello world例子</h2><h3 id="2-2-1-Servlet2-5与Servlet3-0的区别"><a href="#2-2-1-Servlet2-5与Servlet3-0的区别" class="headerlink" title="2.2.1 Servlet2.5与Servlet3.0的区别"></a>2.2.1 Servlet2.5与Servlet3.0的区别</h3><p><strong>Servlet3.0相较于Servlet2.5：</strong></p><p>​    <strong>新增了一些注解，简化的javaweb代码开发，可以省略web.xml配置文件</strong><br>​    <strong>支持异步处理（多线程技术）</strong><br>​    <strong>支持可插性特性（书写的代码编译后生成的class文件可以直接部署到其他项目的，自动加载执行）</strong></p><h3 id="2-2-2-代码实现Servlet3-0步骤（注解配置servlet演示）"><a href="#2-2-2-代码实现Servlet3-0步骤（注解配置servlet演示）" class="headerlink" title="2.2.2 代码实现Servlet3.0步骤（注解配置servlet演示）"></a>2.2.2 代码实现Servlet3.0步骤（注解配置servlet演示）</h3><ol><li><strong>创建JavaEE6(含6)以上的工程</strong></li><li>创建servlet，在@WebServlet注解中添加urlPatterns = “/hello”，作为请求路径</li></ol><h3 id="2-2-3-注解开发servlet代码演示"><a href="#2-2-3-注解开发servlet代码演示" class="headerlink" title="2.2.3  注解开发servlet代码演示"></a>2.2.3  注解开发servlet代码演示</h3><ol><li><p><strong>创建JavaEE6(含6)以上的工程：</strong></p><p><img src="53.png" alt></p><p><img src="54.png" alt></p><p><img src="55.png" alt></p></li><li><p>注解开发servlet代码演示：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//name = "HelloServlet"：servlet名称，相当于web.xml中的&lt;servlet-name></span><span class="token comment" spellcheck="true">//urlPatterns = "/hello"：servlet的访问路径，相当于&lt;url-pattern></span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"HelloServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/hello"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloServlet</span> <span class="token keyword">implements</span> <span class="token class-name">Servlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>ServletConfig servletConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> ServletConfig <span class="token function">getServletConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HelloServlet执行......."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">getServletInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> null<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>配置项目路径(配置过程参照1.9.2中第二步),启动tomcat服务器测试</p><p>浏览器地址栏输入：<a href="http://localhost:8080/servlet2/hello" target="_blank" rel="noopener">http://localhost:8080/servlet2/hello</a></p><p>测试成功：<img src="58.png" alt></p></li></ol><h1 id="第3章-Servlet的体系结构"><a href="#第3章-Servlet的体系结构" class="headerlink" title="第3章 Servlet的体系结构"></a>第3章 Servlet的体系结构</h1><h2 id="3-1-Servlet的体系结构概述"><a href="#3-1-Servlet的体系结构概述" class="headerlink" title="3.1 Servlet的体系结构概述"></a>3.1 Servlet的体系结构概述</h2><p>​    目前我们已经学会创建一个类实现sevlet接口的方式开发Servlet程序，实现Servlet接口的时候，我们必须实现接口的所有方法。但是，在servlet中，真正执行程序逻辑的是service，对于servlet的初始化和销毁，由服务器调用执行，开发者本身不需要关心。因此，有没有一种更加简洁的方式来开发servlet程序呢？</p><p>我们先来查阅API回顾Servlet接口：<br><img src="301.png" alt></p><p>由上图可知在servlet接口规范下，官方推荐使用继承的方式，继承GenericServlet 或者HttpServlet来实现接口，那么我们接下来再去查看一下这两个类的API：</p><p><strong>GenericServlet ：</strong></p><p><img src="302.png" alt></p><p>阅读上图API可知，GenericServlet 是一个类，它简化了servlet的开发，已经提供好了一些servlet接口所需的方法，我们开发者只需要重写service方法即可</p><p>我们来使用GenericServlet 创建servlet：</p><ol><li>创建一个类</li><li>继承GenericServlet</li><li>重写service方法</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>GenericServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"GenericDemoServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/generic"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GenericDemoServlet</span> <span class="token keyword">extends</span> <span class="token class-name">GenericServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"GenericDemoServlet执行......."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>虽然，GenericServlet已经简化了servlet开发，但是我们平时开发程序需要按照一种互联网传输数据的协议来开发程序——http协议，因此，sun公司又专门提供了HttpServlet，来适配这种协议下的开发。</p><p><strong>HttpServlet：</strong></p><p><img src="303.png" alt></p><p>阅读上图的API可知，继承HttpServlet，我们需要重写doGet、doPost等方法中一个即可，根据Http不同的请求，我们需要实现相应的方法。</p><p>我们来使用HttpServlet创建servlet：    </p><ol><li>创建一个类</li><li>继承HttpServlet</li><li>重写doGet方法</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"HttpDemoServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/http"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HttpDemoServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest req<span class="token punctuation">,</span> HttpServletResponse resp<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"HttpDemoServlet执行......."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过以上两个API阅读，同学们注意一个细节HttpServlet是GenericServlet的子类，它增强了GenericServlet一些功能，因此，在后期使用的时候，我们都是选择继承HttpServlet来开发servlet程序。</p><p>虽然目前开发servlet的选择继承类，已经确定，但是另一个问题一直还在我们头脑中，那就是我们学的这些浏览器、服务器、servlet等，到底是如何运行的？</p><p>那么接下来，我们来看看servlet的运行原理。</p><h2 id="3-2-servlet运行原理"><a href="#3-2-servlet运行原理" class="headerlink" title="3.2 servlet运行原理"></a>3.2 servlet运行原理</h2><p><img src="304.png" alt></p><p><strong>总结</strong></p><pre><code>通过上述流程图我们重点需要掌握如下几个点：    1. Servlet对象是由服务器创建    2. request与response对象也是由tomcat服务器创建    3. request对象封装了浏览器过来的所有请求信息，response对象代表了服务器的响应信息。</code></pre><h1 id="第4章-Servlet生命周期"><a href="#第4章-Servlet生命周期" class="headerlink" title="第4章 Servlet生命周期"></a>第4章 Servlet生命周期</h1><h2 id="4-1-Servlet生命周期的概述"><a href="#4-1-Servlet生命周期的概述" class="headerlink" title="4.1  Servlet生命周期的概述"></a>4.1  Servlet生命周期的概述</h2><h3 id="4-1-1-什么是生命周期"><a href="#4-1-1-什么是生命周期" class="headerlink" title="4.1.1 什么是生命周期"></a>4.1.1 什么是生命周期</h3><p>​    一个对象从创建到消亡的过程，就是生命周期。因此，对Servlet生命周期的学习，我们就是研究Servlet什么时候生，什么时候死。</p><h2 id="4-2-servlet生命周期相关的方法"><a href="#4-2-servlet生命周期相关的方法" class="headerlink" title="4.2  servlet生命周期相关的方法"></a>4.2  servlet生命周期相关的方法</h2><p>​    首先我们来回顾servlet接口的文档内容，其中一部分如图所示：</p><p><img src="401.png" alt></p><h3 id="4-2-1-API-介绍"><a href="#4-2-1-API-介绍" class="headerlink" title="4.2.1 API 介绍"></a>4.2.1 API 介绍</h3><p>​    上图中，我们注意到两个点，servlet的创建和销毁由两个相关的方法init方法和destroy方法</p><ol><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 销毁servlet的方法<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>ServletConfig config<span class="token punctuation">)</span>  初始化servlet的方法<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>我们可以调用测试一下这两个方法：</p><h3 id="4-2-2-使用步骤"><a href="#4-2-2-使用步骤" class="headerlink" title="4.2.2 使用步骤"></a>4.2.2 使用步骤</h3><ol><li>创建LifeCircleServlet初始化</li><li>复写init、service、destroy方法</li><li>访问servlet测试初始化LifeCircleServlet</li><li>关闭服务器测试销毁LifeCircleServlet</li></ol><h3 id="4-2-3-演示代码"><a href="#4-2-3-演示代码" class="headerlink" title="4.2.3 演示代码"></a>4.2.3 演示代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"LifeCircleServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/life"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LifeCircleServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"LifeCircleServlet初始化。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">service</span><span class="token punctuation">(</span>ServletRequest req<span class="token punctuation">,</span> ServletResponse res<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"LifeCircleServlet执行。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"LifeCircleServlet销毁。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果：</p><pre class="line-numbers language-java"><code class="language-java">访问servlet：LifeCircleServlet初始化。。。LifeCircleServlet执行。。。关闭tomcat服务器：LifeCircleServlet销毁。。。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-3-servlet生命周期流程"><a href="#4-3-servlet生命周期流程" class="headerlink" title="4.3  servlet生命周期流程"></a>4.3  servlet生命周期流程</h2><p>虽然简单使用过了servlet生命周期相关的方法，但是servlet从创建到销毁的过程对大家来说还是没说清楚，因此，我们以时序图的方式给大家展示了servlet的运行过程，注意图中每一步都由序号，按照序号查看每一个步骤。</p><p><img src="402.png" alt></p><p>附：servlet在初始化一次之后，就不再创建，因此如果多次访问同一个servlet的效果是这样的：</p><pre class="line-numbers language-java"><code class="language-java">LifeCircleServlet初始化。。。LifeCircleServlet执行。。。LifeCircleServlet执行。。。LifeCircleServlet执行。。。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>因此servlet是一个单例对象。</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
            <tag> Servlet </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ajax&amp;json</title>
      <link href="/2019/04/25/2019-04-25-ajax-json/"/>
      <url>/2019/04/25/2019-04-25-ajax-json/</url>
      
        <content type="html"><![CDATA[<h1 id="AJAX-amp-JSON"><a href="#AJAX-amp-JSON" class="headerlink" title="AJAX&amp;JSON"></a>AJAX&amp;JSON</h1><h1 id="第1章-ajax概述"><a href="#第1章-ajax概述" class="headerlink" title="第1章 ajax概述"></a>第1章 ajax概述</h1><h2 id="1-1-什么是ajax"><a href="#1-1-什么是ajax" class="headerlink" title="1.1 什么是ajax"></a>1.1 什么是ajax</h2><p>Ajax 即”Asynchronous Javascript And XML”（异步 JavaScript 和 XML），是指一种创建交互式网页应用的网页开发技术。Ajax = 异步 JavaScript 和 XML（标准通用标记语言的子集）。通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。传统的网页（不使用 Ajax）如果需要更新内容，必须重载整个网页页面。</p><h2 id="1-2-AJAX的应用场景"><a href="#1-2-AJAX的应用场景" class="headerlink" title="1.2 AJAX的应用场景"></a>1.2 AJAX的应用场景</h2><p>ajax的应用场景很多，常见的应用场景如下：</p><h3 id="1-2-1-检查用户名是否已经被注册"><a href="#1-2-1-检查用户名是否已经被注册" class="headerlink" title="1.2.1 检查用户名是否已经被注册"></a>1.2.1 检查用户名是否已经被注册</h3><p>很多站点的注册页面都具备自动检测用户名是否存在的友好提示，该功能整体页面并没有刷新，但仍然可以异步与服务器端进行数据交换，查询用户的输入的用户名是否在数据库中已经存在。</p><p><img src="1.png" alt></p><h3 id="1-2-2-省市二联下拉框联动"><a href="#1-2-2-省市二联下拉框联动" class="headerlink" title="1.2.2 省市二联下拉框联动"></a>1.2.2 省市二联下拉框联动</h3><p>很多站点都存在输入用户地址的操作，在完成地址输入时，用户所在的省份是下拉框，当选择不同的省份时会出现不同的市区的选择，这就是最常见的省市联动效果。</p><p><img src="2.png" alt></p><h3 id="1-2-3-内容自动补全"><a href="#1-2-3-内容自动补全" class="headerlink" title="1.2.3 内容自动补全"></a>1.2.3 内容自动补全</h3><p>不管是专注于搜索的百度，还是站点内商品搜索的京东，都有搜索功能，在i搜索框输入查询关键字时，整个页面没有刷新，但会根据关键字显示相关查询字条，这个过程是异步的。</p><p><strong>百度的搜索补全功能：</strong></p><p><img src="3.png" alt></p><p><strong>京东的搜索补全功能：</strong></p><p><img src="4.png" alt></p><h2 id="1-3-同步方式与异步方式的区别"><a href="#1-3-同步方式与异步方式的区别" class="headerlink" title="1.3 同步方式与异步方式的区别"></a>1.3 同步方式与异步方式的区别</h2><h3 id="1-3-1-同步方式发送请求"><a href="#1-3-1-同步方式发送请求" class="headerlink" title="1.3.1 同步方式发送请求"></a>1.3.1 同步方式发送请求</h3><p>发送一个请求，需要等待响应返回，然后才能够发送下一个请求，如果该请求没有响应，不能发送下一个请求，客户端会处于一直等待过程中。</p><h3 id="1-3-2-异步方式发送请求"><a href="#1-3-2-异步方式发送请求" class="headerlink" title="1.3.2 异步方式发送请求"></a>1.3.2 异步方式发送请求</h3><p>发送一个请求，不需要等待响应返回，随时可以再发送下一个请求，即不需要等待。</p><h1 id="第2章-js原生的ajax"><a href="#第2章-js原生的ajax" class="headerlink" title="第2章 js原生的ajax"></a>第2章 js原生的ajax</h1><h2 id="2-1-js原生的ajax的开发步骤"><a href="#2-1-js原生的ajax的开发步骤" class="headerlink" title="2.1 js原生的ajax的开发步骤"></a>2.1 js原生的ajax的开发步骤</h2><p>1）创建Ajax引擎对象</p><p>2）为Ajax引擎对象绑定监听（监听服务器已将数据响应给引擎）</p><p>3）绑定提交地址</p><p>4）发送请求</p><p>5）接受响应数据</p><h2 id="2-2-js原生的ajax的代码实现"><a href="#2-2-js原生的ajax的代码实现" class="headerlink" title="2.2 js原生的ajax的代码实现"></a>2.2 js原生的ajax的代码实现</h2><h3 id="2-2-1-js代码"><a href="#2-2-1-js代码" class="headerlink" title="2.2.1 js代码"></a>2.2.1 js代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//js的ajax访问</span>        <span class="token comment" spellcheck="true">//1）创建Ajax引擎对象</span>        <span class="token keyword">var</span> xmlhttp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2）为Ajax引擎对象绑定监听（监听服务器已将数据响应给引擎）</span>        xmlhttp<span class="token punctuation">.</span>onreadystatechange<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment" spellcheck="true">//引擎状态一改变就触发该事件</span>              <span class="token keyword">if</span> <span class="token punctuation">(</span>xmlhttp<span class="token punctuation">.</span>readyState<span class="token operator">==</span><span class="token number">4</span> <span class="token operator">&amp;&amp;</span> xmlhttp<span class="token punctuation">.</span>status<span class="token operator">==</span><span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token comment" spellcheck="true">//5）接受响应数据</span>                <span class="token comment" spellcheck="true">//获得服务器端返回给引擎对象的数据</span>                <span class="token function">alert</span><span class="token punctuation">(</span>xmlhttp<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>          <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//3）绑定提交地址</span>        <span class="token comment" spellcheck="true">/*            GET:请求方式            url地址            true是否异步 代表异步   false代表同步        */</span>        xmlhttp<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"GET"</span><span class="token punctuation">,</span><span class="token string">"/AjaxDemo/ajaxServlet"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//4）发送请求</span>        xmlhttp<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajax异步访问服务器端<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sendRequest()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-2-Servlet代码"><a href="#2-2-2-Servlet代码" class="headerlink" title="2.2.2 Servlet代码"></a>2.2.2 Servlet代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns="/ajaxServlet"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AjaxServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"ajax response data ..."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-3-代码实现效果"><a href="#2-2-3-代码实现效果" class="headerlink" title="2.2.3 代码实现效果"></a>2.2.3 代码实现效果</h3><p><img src="5.png" alt></p><h1 id="第3章-jQuery框架的ajax"><a href="#第3章-jQuery框架的ajax" class="headerlink" title="第3章 jQuery框架的ajax"></a>第3章 jQuery框架的ajax</h1><h2 id="3-1-jQuery框架的ajax简介"><a href="#3-1-jQuery框架的ajax简介" class="headerlink" title="3.1 jQuery框架的ajax简介"></a>3.1 jQuery框架的ajax简介</h2><p>jquery是一个优秀的js框架，自然对js原生的ajax进行了封装，封装后的ajax的操    作方法更简洁，功能更强大，与ajax操作相关的jquery方法有如下几种，但开发中    经常使用的有三种：</p><table><thead><tr><th>请求方式</th><th>语法</th></tr></thead><tbody><tr><td>GET请求</td><td>$.get(url, <em>[data]</em>, <em>[callback]</em>, <em>[type]</em>)</td></tr><tr><td>POST请求</td><td>$.post(url, <em>[data]</em>, <em>[callback]</em>, <em>[type]</em>)</td></tr><tr><td>AJAX请求</td><td>$.ajax([settings])</td></tr><tr><td>GET请求</td><td>$.get([settings])</td></tr><tr><td>POST请求</td><td>$.post([settings])</td></tr></tbody></table><h2 id="3-2-GET请求方式"><a href="#3-2-GET请求方式" class="headerlink" title="3.2 GET请求方式"></a>3.2 GET请求方式</h2><h3 id="3-2-1-GET请求方式概述"><a href="#3-2-1-GET请求方式概述" class="headerlink" title="3.2.1 GET请求方式概述"></a>3.2.1 GET请求方式概述</h3><p>通过远程 HTTP GET 请求载入信息。这是一个简单的 GET 请求功能，如需复杂的ajax参数设置请使用$.ajax。</p><h3 id="3-2-2-GET请求方式语法"><a href="#3-2-2-GET请求方式语法" class="headerlink" title="3.2.2 GET请求方式语法"></a>3.2.2 GET请求方式语法</h3><p>jQuery.get(url, [data], [callback], [type])</p><p>其中，参数说明如下：</p><table><thead><tr><th>参数名称</th><th>解释</th></tr></thead><tbody><tr><td>url</td><td>请求的服务器端url地址</td></tr><tr><td>data</td><td>发送给服务器端的请求参数，格式可以是key=value，也可以是js对象</td></tr><tr><td>callback</td><td>当请求成功后的回掉函数，可以在函数体中编写我们的逻辑代码</td></tr><tr><td>type</td><td>预期的返回数据的类型，取值可以是 xml, html, script, json, text, _defaul等</td></tr></tbody></table><h3 id="3-2-3-GET请求方式代码"><a href="#3-2-3-GET请求方式代码" class="headerlink" title="3.2.3 GET请求方式代码"></a>3.2.3 GET请求方式代码</h3><h4 id="3-2-3-1-js代码"><a href="#3-2-3-1-js代码" class="headerlink" title="3.2.3.1 js代码"></a>3.2.3.1 js代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span>            <span class="token string">"/AjaxDemo/ajaxServlet"</span><span class="token punctuation">,</span>            <span class="token string">"name=tom&amp;age=33"</span><span class="token punctuation">,</span>            <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token string">"text"</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajax异步访问服务器端<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sendRequest()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-3-2-Servlet代码"><a href="#3-2-3-2-Servlet代码" class="headerlink" title="3.2.3.2 Servlet代码"></a>3.2.3.2 Servlet代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns="/ajaxServlet"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AjaxServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获得请求参数</span>        String name <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String age <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"ajax response data ..."</span><span class="token operator">+</span> name <span class="token operator">+</span><span class="token string">"..."</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-2-3-3-代码实现效果"><a href="#3-2-3-3-代码实现效果" class="headerlink" title="3.2.3.3 代码实现效果"></a>3.2.3.3 代码实现效果</h4><p><img src="6.png" alt></p><h2 id="3-3-POST请求方式"><a href="#3-3-POST请求方式" class="headerlink" title="3.3 POST请求方式"></a>3.3 POST请求方式</h2><h3 id="3-3-1-POST请求方式概述"><a href="#3-3-1-POST请求方式概述" class="headerlink" title="3.3.1 POST请求方式概述"></a>3.3.1 POST请求方式概述</h3><p>通过远程 HTTP POST 请求载入信息。这是一个简单的 POST 请求功能，如需复杂的ajax参数设置请使用$.ajax。</p><h3 id="3-3-2-POST请求方式语法"><a href="#3-3-2-POST请求方式语法" class="headerlink" title="3.3.2 POST请求方式语法"></a>3.3.2 POST请求方式语法</h3><p>jQuery.post(url, [data], [callback], [type])</p><p>其中，参数说明如下(和get中的参数一样)：</p><table><thead><tr><th>参数名称</th><th>解释</th></tr></thead><tbody><tr><td>url</td><td>请求的服务器端url地址</td></tr><tr><td>data</td><td>发送给服务器端的请求参数，格式可以是key=value，也可以是js对象</td></tr><tr><td>callback</td><td>当请求成功后的回掉函数，可以在函数体中编写我们的逻辑代码</td></tr><tr><td>type</td><td>预期的返回数据的类型，取值可以是 xml, html, script, json, text, _defaul等</td></tr></tbody></table><h2 id="3-4-AJAX请求方式"><a href="#3-4-AJAX请求方式" class="headerlink" title="3.4 AJAX请求方式"></a>3.4 AJAX请求方式</h2><h3 id="3-4-1-AJAX请求方式概述"><a href="#3-4-1-AJAX请求方式概述" class="headerlink" title="3.4.1 AJAX请求方式概述"></a>3.4.1 AJAX请求方式概述</h3><p>通过 HTTP 请求加载远程数据。jQuery 底层 AJAX 实现。简单易用的高层实现见get和post方法。$.ajax()方法可以更加详细的设置底层的参数。</p><h3 id="3-4-2-AJAX请求方式语法"><a href="#3-4-2-AJAX请求方式语法" class="headerlink" title="3.4.2 AJAX请求方式语法"></a>3.4.2 AJAX请求方式语法</h3><p>jQuery.ajax([settings])</p><p>其中，settings是一个js字面量形式的对象，格式是{name:value,name:value… …}，常用的name属性名如下：</p><table><thead><tr><th>属性名称</th><th>解释</th></tr></thead><tbody><tr><td>url</td><td>请求的服务器端url地址</td></tr><tr><td>async</td><td>(默认: true) 默认设置下，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为 false</td></tr><tr><td>data</td><td>发送到服务器的数据，可以是键值对形式，也可以是js对象形式</td></tr><tr><td>type</td><td>(默认: “GET”) 请求方式 (“POST” 或 “GET”)， 默认为 “GET”</td></tr><tr><td>dataType</td><td>预期的返回数据的类型，取值可以是 xml, html, script, json, text, _defaul等</td></tr><tr><td>success</td><td>请求成功后的回调函数</td></tr><tr><td>error</td><td>请求失败时调用此函数</td></tr></tbody></table><h3 id="3-4-3-AJAX请求方式代码"><a href="#3-4-3-AJAX请求方式代码" class="headerlink" title="3.4.3 AJAX请求方式代码"></a>3.4.3 AJAX请求方式代码</h3><h4 id="3-4-3-1-js代码"><a href="#3-4-3-1-js代码" class="headerlink" title="3.4.3.1 js代码"></a>3.4.3.1 js代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span><span class="token string">"/AjaxDemo/ajaxServlet"</span><span class="token punctuation">,</span>            <span class="token keyword">async</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span><span class="token string">"name=tom&amp;age=33"</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span><span class="token string">"text"</span><span class="token punctuation">,</span>            success<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            error<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"数据没有成功返回!"</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajax异步访问服务器端<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sendRequest()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-4-3-2-Servlet代码"><a href="#3-4-3-2-Servlet代码" class="headerlink" title="3.4.3.2 Servlet代码"></a>3.4.3.2 Servlet代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns="/ajaxServlet"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AjaxServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获得请求参数</span>        String name <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String age <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"ajax response data ..."</span><span class="token operator">+</span> name <span class="token operator">+</span><span class="token string">"..."</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-4-3-3-代码实现效果"><a href="#3-4-3-3-代码实现效果" class="headerlink" title="3.4.3.3 代码实现效果"></a>3.4.3.3 代码实现效果</h4><p><img src="8.png" alt></p><h2 id="3-5-jQuery3-0-的POST新增签名方式"><a href="#3-5-jQuery3-0-的POST新增签名方式" class="headerlink" title="3.5 jQuery3.0 的POST新增签名方式"></a>3.5 jQuery3.0 的POST新增签名方式</h2><h3 id="3-5-1-jQuery3-0-的POST新增签名概述"><a href="#3-5-1-jQuery3-0-的POST新增签名概述" class="headerlink" title="3.5.1  jQuery3.0 的POST新增签名概述"></a>3.5.1  jQuery3.0 的POST新增签名概述</h3><p>jQuery 3 为 jQuery.post() 函数增加了新签名，从而使得它们和 $.ajax() 的接口风格保持一致。</p><h3 id="3-5-2-jQuery3-0-的POST新增签名方式语法"><a href="#3-5-2-jQuery3-0-的POST新增签名方式语法" class="headerlink" title="3.5.2  jQuery3.0 的POST新增签名方式语法"></a>3.5.2  jQuery3.0 的POST新增签名方式语法</h3><p>jQuery.post([settings])</p><p>其中，settings是一个js字面量形式的对象，格式是{name:value,name:value… …}，常用的name属性名如下：</p><table><thead><tr><th>属性名称</th><th>解释</th></tr></thead><tbody><tr><td>url</td><td>请求的服务器端url地址</td></tr><tr><td>async</td><td>(默认: true) 默认设置下，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为 false</td></tr><tr><td>data</td><td>发送到服务器的数据，可以是键值对形式，也可以是js对象形式</td></tr><tr><td>dataType</td><td>预期的返回数据的类型，取值可以是 xml, html, script, json, text, _defaul等</td></tr><tr><td>success</td><td>请求成功后的回调函数</td></tr><tr><td>error</td><td>请求失败时调用此函数</td></tr></tbody></table><h3 id="3-5-3-jQuery3-0-的POST新增签名方式代码"><a href="#3-5-3-jQuery3-0-的POST新增签名方式代码" class="headerlink" title="3.5.3  jQuery3.0 的POST新增签名方式代码"></a>3.5.3  jQuery3.0 的POST新增签名方式代码</h3><h4 id="3-5-3-1-js代码"><a href="#3-5-3-1-js代码" class="headerlink" title="3.5.3.1 js代码"></a>3.5.3.1 js代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">sendRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token punctuation">{</span>            url<span class="token punctuation">:</span><span class="token string">"/AjaxDemo/ajaxServlet"</span><span class="token punctuation">,</span>            <span class="token keyword">async</span><span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>            data<span class="token punctuation">:</span><span class="token string">"name=tom&amp;age=33"</span><span class="token punctuation">,</span>            type<span class="token punctuation">:</span><span class="token string">"GET"</span><span class="token punctuation">,</span>            dataType<span class="token punctuation">:</span><span class="token string">"text"</span><span class="token punctuation">,</span>            success<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            error<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"数据没有成功返回!"</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ajax异步访问服务器端<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>sendRequest()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-5-3-2-Servlet代码"><a href="#3-5-3-2-Servlet代码" class="headerlink" title="3.5.3.2 Servlet代码"></a>3.5.3.2 Servlet代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span><span class="token string">"/ajaxServlet"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AjaxServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获得请求参数</span>        String name <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String age <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"ajax response data ..."</span><span class="token operator">+</span> name <span class="token operator">+</span><span class="token string">"..."</span><span class="token operator">+</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-5-3-3-代码实现效果"><a href="#3-5-3-3-代码实现效果" class="headerlink" title="3.5.3.3 代码实现效果"></a>3.5.3.3 代码实现效果</h4><p><img src="10.png" alt></p><h2 id="3-6-jQuery3-0-的GET新增签名方式"><a href="#3-6-jQuery3-0-的GET新增签名方式" class="headerlink" title="3.6 jQuery3.0 的GET新增签名方式"></a>3.6 jQuery3.0 的GET新增签名方式</h2><h3 id="3-6-1-jQuery3-0-的GET新增签名概述"><a href="#3-6-1-jQuery3-0-的GET新增签名概述" class="headerlink" title="3.6.1  jQuery3.0 的GET新增签名概述"></a>3.6.1  jQuery3.0 的GET新增签名概述</h3><p>jQuery 3 为jQuery.get()函数增加了新签名，从而使得它们和 $.ajax() 的接口风格保持一致。</p><h3 id="3-6-2-jQuery3-0-的GET新增签名方式语法"><a href="#3-6-2-jQuery3-0-的GET新增签名方式语法" class="headerlink" title="3.6.2  jQuery3.0 的GET新增签名方式语法"></a>3.6.2  jQuery3.0 的GET新增签名方式语法</h3><p>jQuery.get([settings])</p><p>其中，settings是一个js字面量形式的对象，格式是{name:value,name:value… …}，常用的name属性名如下(也是和刚才演示的post方式中的属性一样)：</p><table><thead><tr><th>属性名称</th><th>解释</th></tr></thead><tbody><tr><td>url</td><td>请求的服务器端url地址</td></tr><tr><td>async</td><td>(默认: true) 默认设置下，所有请求均为异步请求。如果需要发送同步请求，请将此选项设置为 false</td></tr><tr><td>data</td><td>发送到服务器的数据，可以是键值对形式，也可以是js对象形式</td></tr><tr><td>dataType</td><td>预期的返回数据的类型，取值可以是 xml, html, script, json, text, _defaul等</td></tr><tr><td>success</td><td>请求成功后的回调函数</td></tr><tr><td>error</td><td>请求失败时调用此函数</td></tr></tbody></table><h1 id="第4章-json数据格式"><a href="#第4章-json数据格式" class="headerlink" title="第4章 json数据格式"></a>第4章 json数据格式</h1><h2 id="4-1-什么是json"><a href="#4-1-什么是json" class="headerlink" title="4.1 什么是json"></a>4.1 什么是json</h2><p>JSON(JavaScript Object Notation, JS 对象标记) 是一种轻量级的数据交换格式。它基于ECMAScript的一个子集，采用完全独立于编程语言的文本格式来存储和表示数据。简洁和清晰的层次结构使得 JSON 成为理想的数据交换语言。 易于人阅读和编写，同时也易于机器解析和生成，并有效地提升网络传输效率。</p><h2 id="4-2-json的语法格式"><a href="#4-2-json的语法格式" class="headerlink" title="4.2 json的语法格式"></a>4.2 json的语法格式</h2><p>json对象有三种数据格式，分别如下：</p><table><thead><tr><th>类型</th><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>对象类型</td><td>{name:value,name:value…}</td><td>其中name是字符串类型，而value是任意类型</td></tr><tr><td>数组/集合类型</td><td>[value,value,value…]</td><td>其中value是任意类型</td></tr><tr><td>混合类型</td><td>[{},{}… …] 或 {name:[]… …}</td><td>合理包裹嵌套对象类型和数组类型</td></tr></tbody></table><h2 id="4-3-json格式和json解析练习"><a href="#4-3-json格式和json解析练习" class="headerlink" title="4.3 json格式和json解析练习"></a>4.3 json格式和json解析练习</h2><h3 id="4-3-1-练习1"><a href="#4-3-1-练习1" class="headerlink" title="4.3.1 练习1"></a>4.3.1 练习1</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>json01<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword1,keyword2,keyword3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this is my page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token comment" spellcheck="true">/**     * 案例一     *  var person={key:value,key:value}     *       * class Person{     *       String firstname = "张";     *    String lastname = "三丰";     *    Integer age = 100;     * }     *      * Person p = new Person();     * System.out.println(p.firstname);     */</span>     <span class="token comment" spellcheck="true">//json的定义</span>     <span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"firstname"</span><span class="token punctuation">:</span><span class="token string">"张"</span><span class="token punctuation">,</span><span class="token string">"lastname"</span><span class="token punctuation">:</span><span class="token string">"三丰"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//json解析</span>     <span class="token function">alert</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>firstname<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">alert</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>lastname<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token function">alert</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-2-练习2"><a href="#4-3-2-练习2" class="headerlink" title="4.3.2 练习2"></a>4.3.2 练习2</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>json02<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword1,keyword2,keyword3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this is my page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token comment" spellcheck="true">/**     * 案例二     *  [{key:value,key:value},{key:value,key:value}]     *       */</span>    <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">[</span>                    <span class="token punctuation">{</span><span class="token string">"firstname"</span><span class="token punctuation">:</span><span class="token string">"张"</span><span class="token punctuation">,</span><span class="token string">"lastname"</span><span class="token punctuation">:</span><span class="token string">"三丰"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">100</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span><span class="token string">"firstname"</span><span class="token punctuation">:</span><span class="token string">"张"</span><span class="token punctuation">,</span><span class="token string">"lastname"</span><span class="token punctuation">:</span><span class="token string">"翠山"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">58</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span><span class="token string">"firstname"</span><span class="token punctuation">:</span><span class="token string">"张"</span><span class="token punctuation">,</span><span class="token string">"lastname"</span><span class="token punctuation">:</span><span class="token string">"无忌"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">}</span>                 <span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>json<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token function">alert</span><span class="token punctuation">(</span>json<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lastname<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-3-练习3"><a href="#4-3-3-练习3" class="headerlink" title="4.3.3 练习3"></a>4.3.3 练习3</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>json03<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword1,keyword2,keyword3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this is my page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">   <span class="token comment" spellcheck="true">/**     * 案例三     * {     *   "param":[{key:value,key:value},{key:value,key:value}]     * }     *       *       */</span>     <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">{</span>            <span class="token string">"baobao"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>                          <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"小双"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"扬州"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                          <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"建宁"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"北京海淀"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                          <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"龙儿"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"岛国"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                          <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"阿珂"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"台湾"</span><span class="token punctuation">}</span>                      <span class="token punctuation">]</span>     <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">//全取</span>     <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>json<span class="token punctuation">.</span>baobao<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>         <span class="token function">alert</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>baobao<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token punctuation">}</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-3-4-练习4"><a href="#4-3-4-练习4" class="headerlink" title="4.3.4 练习4"></a>4.3.4 练习4</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>insertBefore.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword1,keyword2,keyword3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this is my page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>JavaScript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">   <span class="token comment" spellcheck="true">/**     * 案例四     * {     *   "param1":[{key:value,key:value},{key:value,key:value}],     *   "param2":[{key:value,key:value},{key:value,key:value}],     *   "param3":[{key:value,key:value},{key:value,key:value}]     * }     *       *       */</span>     <span class="token keyword">var</span> json <span class="token operator">=</span> <span class="token punctuation">{</span>                <span class="token string">"baobao"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>                              <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"小双"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"扬州"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                              <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"建宁"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"北京海淀"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                              <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"龙儿"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">38</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"岛国"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                              <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"阿珂"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"台湾"</span><span class="token punctuation">}</span>                          <span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token string">"beibei"</span><span class="token punctuation">:</span><span class="token punctuation">[</span>                            <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"小北"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"北京顺义"</span><span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span><span class="token string">"小南"</span><span class="token punctuation">,</span><span class="token string">"age"</span><span class="token punctuation">:</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">"addr"</span><span class="token punctuation">:</span><span class="token string">"北京金燕龙"</span><span class="token punctuation">}</span>                          <span class="token punctuation">]</span>         <span class="token punctuation">}</span>     <span class="token comment" spellcheck="true">//娶楠楠</span>     <span class="token function">alert</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>beibei<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-4-json的转换工具"><a href="#4-4-json的转换工具" class="headerlink" title="4.4 json的转换工具"></a>4.4 json的转换工具</h2><h3 id="4-4-1-json转换工具的概述"><a href="#4-4-1-json转换工具的概述" class="headerlink" title="4.4.1 json转换工具的概述"></a>4.4.1 json转换工具的概述</h3><p>json的转换工具是通过java封装好的一些jar工具包，直接将java对象或集合转换成json格式的字符串。</p><h3 id="4-4-2-常见的json转换工具"><a href="#4-4-2-常见的json转换工具" class="headerlink" title="4.4.2 常见的json转换工具"></a>4.4.2 常见的json转换工具</h3><table><thead><tr><th>工具名称</th><th>介绍</th></tr></thead><tbody><tr><td>Jsonlib</td><td>Java 类库，需要导入的jar包较多</td></tr><tr><td>Gson</td><td>google提供的一个简单的json转换工具</td></tr><tr><td>Fastjson</td><td>alibaba技术团队提供的一个高性能的json转换工具</td></tr><tr><td>Jackson</td><td>开源免费的json转换工具，springmvc转换默认使用jackson</td></tr></tbody></table><h3 id="4-4-3-开发步骤"><a href="#4-4-3-开发步骤" class="headerlink" title="4.4.3 开发步骤"></a>4.4.3 开发步骤</h3><p>1）导入json相关jar包</p><p><img src="C:/Users/Administrator/Desktop/HTML/day36_ajax_json/day36_ajax_json/01_%E8%AE%B2%E4%B9%89/image/11.png" alt></p><p>2）创建java对象或集合</p><p>3)   使用jackson的ObjectMapper对象的writeValueAsString方法进行转换</p><h3 id="4-4-4-转换代码实现"><a href="#4-4-4-转换代码实现" class="headerlink" title="4.4.4 转换代码实现"></a>4.4.4 转换代码实现</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>json<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JsonProcessingException<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JacksonDemo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> JsonProcessingException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建User对象</span>        User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span><span class="token string">"100"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"haohao"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建List集合</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"传智播客"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"黑马程序员"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        arr<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"酷丁鱼"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//创建Map集合</span>        Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span>User<span class="token operator">></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换</span>        ObjectMapper om <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String userJson <span class="token operator">=</span> om<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>        String arrJson <span class="token operator">=</span> om<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        String mapJson <span class="token operator">=</span> om<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>userJson<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>arrJson<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>mapJson<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-4-5-转换控制台效果"><a href="#4-4-5-转换控制台效果" class="headerlink" title="4.4.5 转换控制台效果"></a>4.4.5 转换控制台效果</h3><p><img src="12.png" alt></p><h1 id="第5章-综合案例"><a href="#第5章-综合案例" class="headerlink" title="第5章 综合案例"></a>第5章 综合案例</h1><h2 id="5-1-综合案例-：检测用户名是否已经被注册"><a href="#5-1-综合案例-：检测用户名是否已经被注册" class="headerlink" title="5.1 综合案例 ：检测用户名是否已经被注册"></a>5.1 综合案例 ：检测用户名是否已经被注册</h2><h3 id="5-1-1-需求"><a href="#5-1-1-需求" class="headerlink" title="5.1.1 需求"></a>5.1.1 需求</h3><p>在用户注册页面，输入用户名，当用户名输入框失去焦点时，发送异步请求，将输入框的用户名传递给服务器端进行是否存在的校验。</p><h3 id="5-1-2-代码实现"><a href="#5-1-2-代码实现" class="headerlink" title="5.1.2 代码实现"></a>5.1.2 代码实现</h3><h4 id="5-1-2-1-jsp代码"><a href="#5-1-2-1-jsp代码" class="headerlink" title="5.1.2.1 jsp代码"></a>5.1.2.1 jsp代码</h4><pre class="line-numbers language-html"><code class="language-html">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"    pageEncoding="UTF-8"%><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>会员注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">checkUsername</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获得该输入框的值</span>        <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将username异步传递给服务器端进行校验 </span>        $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>            <span class="token string">"${pageContext.request.contextPath}/user"</span><span class="token punctuation">,</span>                    <span class="token punctuation">{</span><span class="token string">"username"</span><span class="token punctuation">:</span>username<span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//判断data是true还是false字符串</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>isExist<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//输入的该用户名已经存在 给提示</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#usernameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"输入的该用户名已经存在"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#usernameInfo"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"该用户名可以使用"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"color"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token string">"json"</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span><span class="token punctuation">></span></span>会员注册<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>USER REGISTER        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>form-horizontal<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">5</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">onblur</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkUsername(this)<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入用户名<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>usernameInfo<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>            密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>请输入密码<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>注册<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-1-2-2-Servlet代码"><a href="#5-1-2-2-Servlet代码" class="headerlink" title="5.1.2.2 Servlet代码"></a>5.1.2.2 Servlet代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns="/user"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//定义isExist true代表存在  false代表不存在</span>        <span class="token keyword">boolean</span> isExist <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获得输入的用户名</span>        String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token string">"tom"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            isExist <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//回写存在状态</span>        String json <span class="token operator">=</span> <span class="token string">"{\"isExist\":"</span><span class="token operator">+</span>isExist<span class="token operator">+</span><span class="token string">"}"</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-1-3-代码效果"><a href="#5-1-3-代码效果" class="headerlink" title="5.1.3 代码效果"></a>5.1.3 代码效果</h3><p><img src="13.png" alt></p><p><img src="14.png" alt></p><h2 id="5-2-综合案例-：内容自动补全"><a href="#5-2-综合案例-：内容自动补全" class="headerlink" title="5.2 综合案例 ：内容自动补全"></a>5.2 综合案例 ：内容自动补全</h2><h3 id="5-2-1-需求"><a href="#5-2-1-需求" class="headerlink" title="5.2.1 需求"></a>5.2.1 需求</h3><p>在输入框输入关键字，下拉框中异步显示与该关键字相关的商品的名称</p><h3 id="5-2-2-代码实现"><a href="#5-2-2-代码实现" class="headerlink" title="5.2.2 代码实现"></a>5.2.2 代码实现</h3><h4 id="5-2-2-1-导入数据库脚本"><a href="#5-2-2-1-导入数据库脚本" class="headerlink" title="5.2.2.1 导入数据库脚本"></a>5.2.2.1 导入数据库脚本</h4><p>导入素材文件夹中的demo.sql</p><p><img src="15.png" alt></p><h4 id="5-2-2-2-编写实体模型"><a href="#5-2-2-2-编写实体模型" class="headerlink" title="5.2.2.2 编写实体模型"></a>5.2.2.2 编写实体模型</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>autocomplate<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-2-3-编写jsp页面"><a href="#5-2-2-3-编写jsp页面" class="headerlink" title="5.2.2.3 编写jsp页面"></a>5.2.2.3 编写jsp页面</h4><pre class="line-numbers language-html"><code class="language-html">&lt;%@ page language="java" contentType="text/html; charset=UTF-8"    pageEncoding="UTF-8"%><span class="token doctype">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token selector"><span class="token class">.content</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">643</span>px<span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">200</span>px auto<span class="token punctuation">;</span>        <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">input<span class="token attribute">[type='text']</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">530</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">40</span>px<span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">14</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">input<span class="token attribute">[type='button']</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">46</span>px<span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#38f</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span><span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">15</span>px    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.show</span></span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">535</span>px<span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#999</span><span class="token punctuation">;</span>        <span class="token property">border-top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">searchWord</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获得当前关键字</span>        <span class="token keyword">var</span> word <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//发送ajax请求</span>        $<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>            <span class="token string">"${pageContext.request.contextPath}/search"</span><span class="token punctuation">,</span>            <span class="token string">"word="</span><span class="token operator">+</span>word<span class="token punctuation">,</span>            <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>                    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>data<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        content<span class="token operator">+</span><span class="token operator">=</span><span class="token string">"&lt;div>"</span><span class="token operator">+</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">"&lt;/div>"</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#show"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span>            <span class="token string">"json"</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>logo.png<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>word<span class="token punctuation">"</span></span> <span class="token attr-name">onkeyup</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>searchWord(this)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>搜索一下<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>show<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-2-4-编写Servlet"><a href="#5-2-2-4-编写Servlet" class="headerlink" title="5.2.2.4 编写Servlet"></a>5.2.2.4 编写Servlet</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>autocomplate<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>fasterxml<span class="token punctuation">.</span>jackson<span class="token punctuation">.</span>databind<span class="token punctuation">.</span>ObjectMapper<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns="/search"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SearchServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//设置中文乱码</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获得关键字</span>        String word <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"word"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//传递关键字到Service</span>        SearchService searchService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> userList <span class="token operator">=</span> searchService<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//转换成json格式的字符串</span>        ObjectMapper om <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ObjectMapper</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String json <span class="token operator">=</span> om<span class="token punctuation">.</span><span class="token function">writeValueAsString</span><span class="token punctuation">(</span>userList<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置response中文乱码</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>json<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-2-5-编写Service"><a href="#5-2-2-5-编写Service" class="headerlink" title="5.2.2.5 编写Service"></a>5.2.2.5 编写Service</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>autocomplate<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SearchService</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">search</span><span class="token punctuation">(</span>String word<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//调用dao层</span>        SearchDao searchDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SearchDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> userList <span class="token operator">=</span> null<span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            userList <span class="token operator">=</span> searchDao<span class="token punctuation">.</span><span class="token function">findUserByLikeName</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> userList<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-2-2-6-编写Dao"><a href="#5-2-2-6-编写Dao" class="headerlink" title="5.2.2.6 编写Dao"></a>5.2.2.6 编写Dao</h4><blockquote><p>不要忘记导入我们之前编写的JdbcUtils和配置文件.</p></blockquote><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>autocomplate<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>BeanPropertyRowMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JdbcUtils<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SearchDao</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>User<span class="token operator">></span> <span class="token function">findUserByLikeName</span><span class="token punctuation">(</span>String word<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建JdbcTemplate</span>        JdbcTemplate jdbcTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>JdbcUtils<span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String sql <span class="token operator">=</span> <span class="token string">"select * from user where name like ? limit 0,6"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//执行查询操作</span>        List<span class="token operator">&lt;</span>User<span class="token operator">></span> list <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span><span class="token punctuation">(</span>User<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"%"</span><span class="token operator">+</span>word<span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-3-代码效果"><a href="#5-2-3-代码效果" class="headerlink" title="5.2.3 代码效果"></a>5.2.3 代码效果</h3><p><img src="16.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ajax </tag>
            
            <tag> Json </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery高级</title>
      <link href="/2019/04/19/2019-04-19-jquery-gao-ji/"/>
      <url>/2019/04/19/2019-04-19-jquery-gao-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery高级"><a href="#jQuery高级" class="headerlink" title="jQuery高级"></a>jQuery高级</h1><h1 id="第1章-jQuery动画"><a href="#第1章-jQuery动画" class="headerlink" title="第1章 jQuery动画"></a>第1章 jQuery动画</h1><h2 id="1-1-显示效果"><a href="#1-1-显示效果" class="headerlink" title="1.1 显示效果"></a>1.1 显示效果</h2><h3 id="1-1-1-方法"><a href="#1-1-1-方法" class="headerlink" title="1.1.1 方法"></a>1.1.1 方法</h3><table><thead><tr><th>方法名称</th><th>解释</th></tr></thead><tbody><tr><td>show([speed,[easing],[fn]])</td><td>显示元素方法</td></tr><tr><td>hide([speed,[easing],[fn]])</td><td>隐藏元素方法</td></tr><tr><td>toggle([speed],[easing],[fn])</td><td>切换元素方法，显示的使之隐藏，隐藏的使之显示</td></tr></tbody></table><h3 id="1-1-2-参数"><a href="#1-1-2-参数" class="headerlink" title="1.1.2 参数"></a>1.1.2 参数</h3><table><thead><tr><th>参数名称</th><th>解释</th></tr></thead><tbody><tr><td>speed</td><td>三种预定速度之一的字符串(“slow”,”normal”, or “fast”)或表示动画时长的毫秒数值(如：1000)</td></tr><tr><td>easing</td><td>指定动画在不同点上的行进速度，默认是”swing”，可用参数”linear” , 我们一般不使用</td></tr><tr><td>fn</td><td>在动画完成时执行的函数，每个元素执行一次</td></tr></tbody></table><h3 id="1-1-3-示例"><a href="#1-1-3-示例" class="headerlink" title="1.1.3 示例"></a>1.1.3 示例</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">hideFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token string">"slow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">showFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token string">"normal"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">toggleFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮隐藏div<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hideFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮显示div<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮切换div显示和隐藏<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggleFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showDiv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        div显示和隐藏    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-1-4-示例效果图"><a href="#1-1-4-示例效果图" class="headerlink" title="1.1.4 示例效果图"></a>1.1.4 示例效果图</h3><p><img src="1.png" alt></p><h2 id="1-2-滑动效果"><a href="#1-2-滑动效果" class="headerlink" title="1.2 滑动效果"></a>1.2 滑动效果</h2><h3 id="1-2-1-方法"><a href="#1-2-1-方法" class="headerlink" title="1.2.1 方法"></a>1.2.1 方法</h3><table><thead><tr><th>方法名称</th><th>解释</th></tr></thead><tbody><tr><td>slideDown([speed,[easing],[fn]])</td><td>向下滑动方法</td></tr><tr><td>slideUp([speed,[easing],[fn]])</td><td>向上滑动方法</td></tr><tr><td>slideToggle([speed],[easing],[fn])</td><td>切换元素方法，显示的使之隐藏，隐藏的使之显示</td></tr></tbody></table><h3 id="1-2-2-示例"><a href="#1-2-2-示例" class="headerlink" title="1.2.2 示例"></a>1.2.2 示例</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">hideFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token string">"slow"</span><span class="token punctuation">,</span><span class="token string">"swing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">showFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token string">"normal"</span><span class="token punctuation">,</span><span class="token string">"swing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">toggleFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideToggle</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">"linear"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮隐藏div<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hideFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮显示div<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮切换div显示和隐藏<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggleFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showDiv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        div显示和隐藏    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-3-示例效果图"><a href="#1-2-3-示例效果图" class="headerlink" title="1.2.3 示例效果图"></a>1.2.3 示例效果图</h3><p><img src="2.png" alt></p><h2 id="1-3-淡入淡出效果"><a href="#1-3-淡入淡出效果" class="headerlink" title="1.3 淡入淡出效果"></a>1.3 淡入淡出效果</h2><h3 id="1-3-1-方法"><a href="#1-3-1-方法" class="headerlink" title="1.3.1 方法"></a>1.3.1 方法</h3><table><thead><tr><th>方法名称</th><th>解释</th></tr></thead><tbody><tr><td>fadeIn([speed,[easing],[fn]])</td><td>淡入显示方法</td></tr><tr><td>fadeOut([speed,[easing],[fn]])</td><td>淡出隐藏方法</td></tr><tr><td>fadeToggle([speed],[easing],[fn])</td><td>切换元素方法，显示的使之隐藏，隐藏的使之显示</td></tr></tbody></table><h3 id="1-3-2-示例"><a href="#1-3-2-示例" class="headerlink" title="1.3.2 示例"></a>1.3.2 示例</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">    <span class="token keyword">function</span> <span class="token function">hideFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeIn</span><span class="token punctuation">(</span><span class="token string">"slow"</span><span class="token punctuation">,</span><span class="token string">"swing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">showFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeOut</span><span class="token punctuation">(</span><span class="token string">"normal"</span><span class="token punctuation">,</span><span class="token string">"swing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">toggleFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#showDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fadeToggle</span><span class="token punctuation">(</span><span class="token number">5000</span><span class="token punctuation">,</span><span class="token string">"linear"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮隐藏div<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hideFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮显示div<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击按钮切换div显示和隐藏<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>toggleFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>showDiv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        div显示和隐藏    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-3-2-示例效果图"><a href="#1-3-2-示例效果图" class="headerlink" title="1.3.2 示例效果图"></a>1.3.2 示例效果图</h3><p><img src="3.png" alt></p><h1 id="第2章-jQuery的遍历"><a href="#第2章-jQuery的遍历" class="headerlink" title="第2章 jQuery的遍历"></a>第2章 jQuery的遍历</h1><h2 id="2-1-原始方式遍历"><a href="#2-1-原始方式遍历" class="headerlink" title="2.1 原始方式遍历"></a>2.1 原始方式遍历</h2><h3 id="2-1-1-语法"><a href="#2-1-1-语法" class="headerlink" title="2.1.1 语法"></a>2.1.1 语法</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>元素数组<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      元素数组<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="2-1-2-代码"><a href="#2-1-2-代码" class="headerlink" title="2.1.2 代码"></a>2.1.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> $lis <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//1、原始循环方式</span>                <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>$lis<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>$lis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-3-代码效果"><a href="#2-1-3-代码效果" class="headerlink" title="2.1.3 代码效果"></a>2.1.3 代码效果</h3><p><img src="4.png" alt></p><h2 id="2-2-jquery对象方法遍历"><a href="#2-2-jquery对象方法遍历" class="headerlink" title="2.2 jquery对象方法遍历"></a>2.2 jquery对象方法遍历</h2><h3 id="2-1-1-语法-1"><a href="#2-1-1-语法-1" class="headerlink" title="2.1.1 语法"></a>2.1.1 语法</h3><pre class="line-numbers language-js"><code class="language-js">jquery对象<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>其中，index<span class="token punctuation">:</span>就是元素在集合中的索引element：就是集合中的每一个元素对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-2-代码-1"><a href="#2-1-2-代码-1" class="headerlink" title="2.1.2 代码"></a>2.1.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> $lis <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                $lis<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span><span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-1-3-代码效果-1"><a href="#2-1-3-代码效果-1" class="headerlink" title="2.1.3 代码效果"></a>2.1.3 代码效果</h3><p><img src="5.png" alt></p><h2 id="2-3-jquery的全局方法遍历"><a href="#2-3-jquery的全局方法遍历" class="headerlink" title="2.3 jquery的全局方法遍历"></a>2.3 jquery的全局方法遍历</h2><h3 id="2-3-1-语法"><a href="#2-3-1-语法" class="headerlink" title="2.3.1 语法"></a>2.3.1 语法</h3><pre class="line-numbers language-js"><code class="language-js">$<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>jquery对象<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>其中，index<span class="token punctuation">:</span>就是元素在集合中的索引<span class="token function">element：就是集合中的每一个元素对象</span><span class="token punctuation">(</span>dom对象<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-2-代码"><a href="#2-3-2-代码" class="headerlink" title="2.3.2 代码"></a>2.3.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> $lis <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                $<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span>$lis<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>element<span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token string">"--"</span><span class="token operator">+</span><span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-3-代码效果"><a href="#2-3-3-代码效果" class="headerlink" title="2.3.3 代码效果"></a>2.3.3 代码效果</h3><p><img src="6.png" alt></p><h2 id="2-4-jQuery3-0新特性for-of语句遍历"><a href="#2-4-jQuery3-0新特性for-of语句遍历" class="headerlink" title="2.4 jQuery3.0新特性for  of语句遍历"></a>2.4 jQuery3.0新特性for  of语句遍历</h2><h3 id="2-4-1-语法"><a href="#2-4-1-语法" class="headerlink" title="2.4.1 语法"></a>2.4.1 语法</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">for</span><span class="token punctuation">(</span>变量 <span class="token keyword">of</span> jquery对象<span class="token punctuation">)</span><span class="token punctuation">{</span>      变量；<span class="token punctuation">}</span>其中，变量<span class="token punctuation">:</span>定义变量依次接受jquery数组中的每一个元素jquery对象：要被遍历的jquery对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-2-代码"><a href="#2-4-2-代码" class="headerlink" title="2.4.2 代码"></a>2.4.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!-- 版本是3以上 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> $lis <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city li"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">for</span><span class="token punctuation">(</span>li <span class="token keyword">of</span> $lis<span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>li<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>上海<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-3-代码效果"><a href="#2-4-3-代码效果" class="headerlink" title="2.4.3 代码效果"></a>2.4.3 代码效果</h3><p><img src="7.png" alt></p><h1 id="第3章-jQuery的事件绑定与解绑"><a href="#第3章-jQuery的事件绑定与解绑" class="headerlink" title="第3章 jQuery的事件绑定与解绑"></a>第3章 jQuery的事件绑定与解绑</h1><h2 id="3-1-on绑定事件"><a href="#3-1-on绑定事件" class="headerlink" title="3.1 on绑定事件"></a>3.1 on绑定事件</h2><h3 id="3-1-1-语法"><a href="#3-1-1-语法" class="headerlink" title="3.1.1 语法"></a>3.1.1 语法</h3><pre class="line-numbers language-js"><code class="language-js">jQuery元素对象<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span>事件名称<span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//逻辑代码</span><span class="token punctuation">}</span><span class="token punctuation">)</span>其中：事件名称是jQuery的事件方法的方法名称，例如：click、mouseover、mouseout、focus、blur等<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-2-代码"><a href="#3-1-2-代码" class="headerlink" title="3.1.2 代码"></a>3.1.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"使用on绑定点击事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>使用on绑定点击事件<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-1-3-代码效果"><a href="#3-1-3-代码效果" class="headerlink" title="3.1.3 代码效果"></a>3.1.3 代码效果</h3><p><img src="8.png" alt></p><h2 id="3-2-off解绑事件"><a href="#3-2-off解绑事件" class="headerlink" title="3.2 off解绑事件"></a>3.2 off解绑事件</h2><h3 id="3-2-1-语法"><a href="#3-2-1-语法" class="headerlink" title="3.2.1 语法"></a>3.2.1 语法</h3><pre class="line-numbers language-js"><code class="language-js">jQuery元素对象<span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span>事件名称<span class="token punctuation">)</span><span class="token punctuation">;</span>其中：参数事件名称如果省略不写，可以解绑该jQuery对象上的所有事件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-2-代码"><a href="#3-2-2-代码" class="headerlink" title="3.2.2 代码"></a>3.2.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn-on"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"使用on绑定点击事件"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn-off"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#btn-on"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">off</span><span class="token punctuation">(</span><span class="token string">"click"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-on<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>使用on绑定点击事件<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-off<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>使用off解绑点击事件<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-3-代码效果"><a href="#3-2-3-代码效果" class="headerlink" title="3.2.3 代码效果"></a>3.2.3 代码效果</h3><p><img src="9.png" alt></p><h2 id="3-3-事件切换"><a href="#3-3-事件切换" class="headerlink" title="3.3 事件切换"></a>3.3 事件切换</h2><h3 id="3-3-1-普通写法"><a href="#3-3-1-普通写法" class="headerlink" title="3.3.1 普通写法"></a>3.3.1 普通写法</h3><h4 id="3-3-1-1-代码"><a href="#3-3-1-1-代码" class="headerlink" title="3.3.1.1 代码"></a>3.3.1.1 代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myDiv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>鼠标移入变成绿色，移出回复红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-1-2-效果"><a href="#3-3-1-2-效果" class="headerlink" title="3.3.1.2 效果"></a>3.3.1.2 效果</h4><p><img src="10.png" alt></p><h3 id="3-3-2-链式写法"><a href="#3-3-2-链式写法" class="headerlink" title="3.3.2 链式写法"></a>3.3.2 链式写法</h3><h4 id="3-3-2-1-代码"><a href="#3-3-2-1-代码" class="headerlink" title="3.3.2.1 代码"></a>3.3.2.1 代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mouseout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myDiv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>鼠标移入变成绿色，移出回复红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-2-2-效果"><a href="#3-3-2-2-效果" class="headerlink" title="3.3.2.2 效果"></a>3.3.2.2 效果</h4><p><img src="10.png" alt></p><h3 id="3-3-3-切换函数写法"><a href="#3-3-3-切换函数写法" class="headerlink" title="3.3.3 切换函数写法"></a>3.3.3 切换函数写法</h3><h4 id="3-3-3-1-语法"><a href="#3-3-3-1-语法" class="headerlink" title="3.3.3.1 语法"></a>3.3.3.1 语法</h4><pre class="line-numbers language-js"><code class="language-js"><span class="token function">hover</span><span class="token punctuation">(</span><span class="token punctuation">[</span>over<span class="token punctuation">,</span><span class="token punctuation">]</span>out<span class="token punctuation">)</span>其中，over代表鼠标移入事件触发的函数，out代表鼠标移出事件触发的函数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-3-2-代码"><a href="#3-3-3-2-代码" class="headerlink" title="3.3.3.2 代码"></a>3.3.3.2 代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hover</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myDiv<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">300</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>鼠标移入变成绿色，移出回复红色<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="3-3-3-3-效果"><a href="#3-3-3-3-效果" class="headerlink" title="3.3.3.3 效果"></a>3.3.3.3 效果</h4><p><img src="10.png" alt></p><h1 id="第4章-jQuery综合案例"><a href="#第4章-jQuery综合案例" class="headerlink" title="第4章 jQuery综合案例"></a>第4章 jQuery综合案例</h1><h2 id="4-1-广告的自动显示与隐藏"><a href="#4-1-广告的自动显示与隐藏" class="headerlink" title="4.1 广告的自动显示与隐藏"></a>4.1 广告的自动显示与隐藏</h2><h3 id="4-1-1-需求描述"><a href="#4-1-1-需求描述" class="headerlink" title="4.1.1 需求描述"></a>4.1.1 需求描述</h3><p>页面打开，延迟几秒钟，广告从上向下慢慢滑下显示，停留几秒，再从下向上慢慢滑动隐藏。</p><h3 id="4-1-2-代码实现"><a href="#4-1-2-代码实现" class="headerlink" title="4.1.2 代码实现"></a>4.1.2 代码实现</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>网站的首页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token selector"><span class="token id">#content</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#999</span><span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--引入jquery--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">adFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//定时广告的方法</span>            <span class="token keyword">function</span> <span class="token function">adFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//5秒钟弹出广告</span>                <span class="token function">setTimeout</span><span class="token punctuation">(</span>                    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ad"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideDown</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                        <span class="token comment" spellcheck="true">//$("#ad").fadeIn(3000</span>                        <span class="token function">setTimeout</span><span class="token punctuation">(</span>                            <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#ad"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slideUp</span><span class="token punctuation">(</span><span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                                <span class="token comment" spellcheck="true">//$("#ad").fadeOut(3000);</span>                            <span class="token punctuation">}</span><span class="token punctuation">,</span>                            <span class="token number">8000</span>                        <span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">}</span><span class="token punctuation">,</span>                    <span class="token number">5000</span>                <span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 整体的DIV --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 广告DIV --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ad<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ad.jpg<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 下方正文部分 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                正文部分            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-1-3-代码效果"><a href="#4-1-3-代码效果" class="headerlink" title="4.1.3 代码效果"></a>4.1.3 代码效果</h3><p><img src="15.png" alt></p><h2 id="4-2-抽奖程序"><a href="#4-2-抽奖程序" class="headerlink" title="4.2 抽奖程序"></a>4.2 抽奖程序</h2><h3 id="4-2-1-需求描述"><a href="#4-2-1-需求描述" class="headerlink" title="4.2.1 需求描述"></a>4.2.1 需求描述</h3><ul><li>当用户点击开始按钮时，小像框中的像片快速切换。</li><li>当用户点击停止按钮时，小像框中的像片停止切换，延时2秒后，大像框中也会显示与小像框相同的像片。</li></ul><h3 id="4-2-2-代码实现"><a href="#4-2-2-代码实现" class="headerlink" title="4.2.2 代码实现"></a>4.2.2 代码实现</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>2017-12-29-JQuery案例之抽奖程序<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword1,keyword2,keyword3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>this is my page<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 小像框 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border-style</span><span class="token punctuation">:</span>dotted<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">50</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img1ID<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">50</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">50</span></span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 大像框 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token style-attr language-css"><span class="token attr-name">        <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">border-style</span><span class="token punctuation">:</span>double<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">;</span><span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span><span class="token property">left</span><span class="token punctuation">:</span><span class="token number">500</span>px<span class="token punctuation">;</span><span class="token property">top</span><span class="token punctuation">:</span><span class="token number">10</span>px</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img2ID<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">500</span></span><span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 开始按钮 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>         <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>startID<span class="token punctuation">"</span></span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>         <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击开始<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">         <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">150</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">150</span>px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">22</span>px</span><span class="token punctuation">"</span></span>        <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imgStart()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 停止按钮 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>         <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stopID<span class="token punctuation">"</span></span>        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span>         <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击停止<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name">         <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">150</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">150</span>px<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">22</span>px</span><span class="token punctuation">"</span></span>        <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>imgStop()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>javascript<span class="token punctuation">'</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">'</span>text/javascript<span class="token punctuation">'</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">/*        1.delay：延时          2.hide：隐藏，函数里必须放一个0，不然延时不起作用，无参的话，延时不起作用。        3.代码：JQuery对象.delay(4000).hide(0)         */</span>        <span class="token comment" spellcheck="true">//准备一个一维数组，装用户的像片路径</span>        <span class="token keyword">var</span> imgs <span class="token operator">=</span> <span class="token punctuation">[</span>            <span class="token string">"img/man00.jpg"</span><span class="token punctuation">,</span>            <span class="token string">"img/man01.jpg"</span><span class="token punctuation">,</span>            <span class="token string">"img/man02.jpg"</span><span class="token punctuation">,</span>            <span class="token string">"img/man03.jpg"</span><span class="token punctuation">,</span>            <span class="token string">"img/man04.jpg"</span><span class="token punctuation">,</span>            <span class="token string">"img/man05.jpg"</span><span class="token punctuation">,</span>            <span class="token string">"img/man06.jpg"</span>        <span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//计数器</span>        <span class="token keyword">var</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//像片总数</span>        <span class="token keyword">var</span> total <span class="token operator">=</span> imgs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//定时器</span>        <span class="token keyword">var</span> timeID <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//切换图片</span>        <span class="token keyword">function</span> <span class="token function">imgChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>             timeID <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> i <span class="token operator">=</span> num <span class="token operator">%</span> total<span class="token punctuation">;</span>                <span class="token keyword">var</span> img <span class="token operator">=</span> imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#img1ID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                num<span class="token operator">++</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//游戏开始</span>        <span class="token keyword">function</span> <span class="token function">imgStart</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">imgChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#startID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#stopID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#img2ID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//游戏停止</span>        <span class="token keyword">function</span> <span class="token function">imgStop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            window<span class="token punctuation">.</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>timeID<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#startID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#stopID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//获取选中图片的路径</span>            <span class="token keyword">var</span> selectedImg <span class="token operator">=</span> imgs<span class="token punctuation">[</span><span class="token operator">--</span>num <span class="token operator">%</span> total<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//计算数器清0</span>            num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//将选中的图片设置到大像框中</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#img2ID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"src"</span><span class="token punctuation">,</span>selectedImg<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//隐藏2秒后，再被选中像片</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#img2ID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//当浏览器加载页面时，将停止按钮失效</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#stopID"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"disabled"</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-2-3-代码效果"><a href="#4-2-3-代码效果" class="headerlink" title="4.2.3 代码效果"></a>4.2.3 代码效果</h3><p><img src="16.png" alt></p><h1 id="第5章-jQuery的插件"><a href="#第5章-jQuery的插件" class="headerlink" title="第5章 jQuery的插件"></a>第5章 jQuery的插件</h1><h2 id="5-1-jQuery的插件机制"><a href="#5-1-jQuery的插件机制" class="headerlink" title="5.1 jQuery的插件机制"></a>5.1 jQuery的插件机制</h2><h3 id="5-1-1-jQuery插件机制概述"><a href="#5-1-1-jQuery插件机制概述" class="headerlink" title="5.1.1 jQuery插件机制概述"></a>5.1.1 jQuery插件机制概述</h3><p>jQuery插件的机制很简单，就是利用jQuery提供的jQuery.fn.extend()和jQuery.extend()方法，扩展jQuery的功能。</p><h3 id="5-1-2-jQuery插件机制语法"><a href="#5-1-2-jQuery插件机制语法" class="headerlink" title="5.1.2 jQuery插件机制语法"></a>5.1.2 jQuery插件机制语法</h3><table><thead><tr><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>jQuery.fn.extend(object)</td><td>对jQuery对象进行方法扩展</td></tr><tr><td>jQuery.extend(object)</td><td>对jQuery全局进行方法扩展</td></tr></tbody></table><h3 id="5-1-3-对jQuery对象进行方法扩展"><a href="#5-1-3-对jQuery对象进行方法扩展" class="headerlink" title="5.1.3 对jQuery对象进行方法扩展"></a>5.1.3 对jQuery对象进行方法扩展</h3><h4 id="5-1-3-1-代码"><a href="#5-1-3-1-代码" class="headerlink" title="5.1.3.1 代码"></a>5.1.3.1 代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token comment" spellcheck="true">//对jQuery对象的函数进行扩展</span>            $<span class="token punctuation">.</span>fn<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                  <span class="token comment" spellcheck="true">//定义js对象的check属性，值是一个函数</span>                  check<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//当前调用check方法的元素的checked属性设置为true</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token comment" spellcheck="true">//定义js对象的uncheck属性，值是一个函数</span>                  uncheck<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//当前调用uncheck方法的元素的checked属性设置为false</span>                    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">this</span><span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">function</span> <span class="token function">checkFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//调用check方法，使被选择的元素处于选中状态</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type=checkbox]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">uncheckFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//调用uncheck方法，使被选择的元素处于不选中状态</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type=checkbox]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uncheck</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-check<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击选中复选框<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>btn-uncheck<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>点击取消复选框选中<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uncheckFn()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>football<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>足球        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>basketball<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>篮球        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>volleyball<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>排球    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-1-3-2-效果"><a href="#5-1-3-2-效果" class="headerlink" title="5.1.3.2 效果"></a>5.1.3.2 效果</h4><p><img src="11.png" alt></p><h3 id="5-1-4-对jQuery全局进行方法扩展"><a href="#5-1-4-对jQuery全局进行方法扩展" class="headerlink" title="5.1.4 对jQuery全局进行方法扩展"></a>5.1.4 对jQuery全局进行方法扩展</h3><h4 id="5-1-4-1-代码"><a href="#5-1-4-1-代码" class="headerlink" title="5.1.4.1 代码"></a>5.1.4.1 代码</h4><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            $<span class="token punctuation">.</span><span class="token function">extend</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                  <span class="token comment" spellcheck="true">//定义js对象的min属性，值是一个函数，返回a与b比较的最小值</span>                  min<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">&lt;</span> b <span class="token operator">?</span> a <span class="token punctuation">:</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>                  <span class="token comment" spellcheck="true">//定义js对象的max属性，值是一个函数，返回a与b比较的最大值</span>                  max<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token keyword">return</span> a <span class="token operator">></span> b <span class="token operator">?</span> a <span class="token punctuation">:</span> b<span class="token punctuation">;</span> <span class="token punctuation">}</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span>$<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="5-1-4-2-效果"><a href="#5-1-4-2-效果" class="headerlink" title="5.1.4.2 效果"></a>5.1.4.2 效果</h4><p><img src="12.png" alt></p><h2 id="5-2-表单校验插件validator"><a href="#5-2-表单校验插件validator" class="headerlink" title="5.2 表单校验插件validator"></a>5.2 表单校验插件validator</h2><h3 id="5-2-1-表单校验插件概述"><a href="#5-2-1-表单校验插件概述" class="headerlink" title="5.2.1 表单校验插件概述"></a>5.2.1 表单校验插件概述</h3><p>网络上有许多成熟的插件共使用者参考，插件就是将jquery实现的常用操作进行封装，封装后的“小框架“就可以叫做插件，按照插件的语法去操作可以实现很多复杂的功能，而我们需要做的是学会该插件的使用语法即可。表单校验插件是按照一定的语法编写代码，可以使用简单的代码完成复杂的表单校验工作。</p><h3 id="5-2-2-表单校验插件的基本语法"><a href="#5-2-2-表单校验插件的基本语法" class="headerlink" title="5.2.2 表单校验插件的基本语法"></a>5.2.2 表单校验插件的基本语法</h3><h4 id="5-2-2-1-开发步骤"><a href="#5-2-2-1-开发步骤" class="headerlink" title="5.2.2.1 开发步骤"></a>5.2.2.1 开发步骤</h4><ul><li><p>下载jquery-validation插件</p></li><li><p>将该插件（也就是一个js文件）导入到我们的工程中</p></li><li><p>在要使用校验插件的html中引入该js文件</p></li><li><p>编写表单校验的代码（语法）</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"form表单的选择器"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>    rules<span class="token punctuation">:</span><span class="token punctuation">{</span>      表单项name值<span class="token punctuation">:</span>校验规则，      表单项name值<span class="token punctuation">:</span>校验规则<span class="token operator">...</span> <span class="token operator">...</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    messages<span class="token punctuation">:</span><span class="token punctuation">{</span>      表单项name值<span class="token punctuation">:</span>错误提示信息，      表单项name值<span class="token punctuation">:</span>错误提示信息<span class="token operator">...</span> <span class="token operator">...</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，rules是对表单项校验的规则，messages是对应的表单项校验失败后的错误提示信息</p><p>注意，当错误提示信息不按照我们预想的位置显示时，我们可以按照如下方式进行设置自定义错误显示标签放在我们需要显示的位置，当此表单项验证不通过时会将此信息自动显示出来，jQuery验证插件会自动帮助我们控制它的显示与隐藏</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>lable</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>html元素name值<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span>none</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>错误信息<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>lable</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果设置了错误lable标签就不必在messages中设置此表单项错误提示信息了</p></li></ul><h4 id="5-2-2-2-常用的校验规则"><a href="#5-2-2-2-常用的校验规则" class="headerlink" title="5.2.2.2 常用的校验规则"></a>5.2.2.2 常用的校验规则</h4><p><img src="13.png" alt></p><h3 id="5-2-3-表单校验插件自定义校验方法"><a href="#5-2-3-表单校验插件自定义校验方法" class="headerlink" title="5.2.3 表单校验插件自定义校验方法"></a>5.2.3 表单校验插件自定义校验方法</h3><p>如果预定义的校验规则尚不能满足需求的话可以进行自定义校验规则：</p><p>自定义校验规则步骤如下：</p><ul><li><p>使用$.validator.addMethod(“校验规则名称”,function(value,element,params)){}</p></li><li><p>在rules中通过校验规则名称使用校验规则</p></li><li><p>在messages中定义该规则对应的错误提示信息</p><p>其中，    value是校验组件的value值</p><p>​        element是校验组件的节点对象</p><p>​        params是校验规则的参数</p></li></ul><h3 id="5-2-4-代码实现"><a href="#5-2-4-代码实现" class="headerlink" title="5.2.4 代码实现"></a>5.2.4 代码实现</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>我的jquery表单校验页面<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">            <span class="token selector">p</span><span class="token punctuation">{</span><span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span><span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">24</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>            <span class="token selector">table</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>            <span class="token selector">table tr</span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span><span class="token number">40</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>            <span class="token selector">table tr td</span><span class="token punctuation">{</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">14</span>px<span class="token punctuation">;</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#999</span><span class="token punctuation">}</span>            <span class="token selector"><span class="token class">.error</span></span><span class="token punctuation">{</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery.validate.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>           <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">               <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                   <span class="token comment" spellcheck="true">//自定义校验规则</span>                   <span class="token comment" spellcheck="true">/*                    * 参数：                    *     第一个 规则名称                    *     第二个 规则的实现逻辑 匿名函数                    */</span>                   $<span class="token punctuation">.</span>validator<span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span><span class="token string">"cardlength"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>element<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>                       <span class="token comment" spellcheck="true">//校验输入的长度是否满足15或18</span>                       <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">!=</span>param<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&amp;&amp;</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">!=</span>param<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                           <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//代表该校验器不通过  显示该校验规则对应的错误信息</span>                       <span class="token punctuation">}</span>                       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   $<span class="token punctuation">.</span>validator<span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span><span class="token string">"card15"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>element<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>                       <span class="token comment" spellcheck="true">//校验15位的规则是否正确  --- 都是数字</span>                       <span class="token keyword">var</span> regExp15 <span class="token operator">=</span> <span class="token regex">/^[0-9]{15}$/</span><span class="token punctuation">;</span>                       <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                           <span class="token comment" spellcheck="true">//校验格式</span>                           <span class="token keyword">return</span> regExp15<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                       <span class="token punctuation">}</span>                       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//放行 不归该校验器校验 </span>                   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   $<span class="token punctuation">.</span>validator<span class="token punctuation">.</span><span class="token function">addMethod</span><span class="token punctuation">(</span><span class="token string">"card18"</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>element<span class="token punctuation">,</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>                       <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>                           <span class="token comment" spellcheck="true">//校验15位的规则是否正确  --- 都是数字</span>                           <span class="token keyword">var</span> regExp18 <span class="token operator">=</span> <span class="token regex">/^[0-9]{18}|[0-9]{17}X$/</span><span class="token punctuation">;</span>                           <span class="token keyword">if</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                               <span class="token comment" spellcheck="true">//校验格式</span>                               <span class="token keyword">return</span> regExp18<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                           <span class="token punctuation">}</span>                       <span class="token punctuation">}</span>                       <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//放行 不归该校验器校验 </span>                   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                   <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#empForm"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">validate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>                       rules<span class="token punctuation">:</span><span class="token punctuation">{</span>                           realname<span class="token punctuation">:</span><span class="token string">"required"</span><span class="token punctuation">,</span>                           username<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               rangelength<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           psw<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               minlength<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">,</span>                               maxlength<span class="token punctuation">:</span><span class="token number">12</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           psw2<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               minlength<span class="token punctuation">:</span><span class="token number">6</span><span class="token punctuation">,</span>                               maxlength<span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">,</span>                               equalTo<span class="token punctuation">:</span><span class="token string">"#psw"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           gender<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           age<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               range<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           edu<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           birthday<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               dateISO<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               date<span class="token punctuation">:</span><span class="token boolean">true</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           checkbox1<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           email<span class="token punctuation">:</span><span class="token punctuation">{</span>                               email<span class="token punctuation">:</span><span class="token boolean">true</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           card<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               cardlength<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                               card15<span class="token punctuation">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>                               card18<span class="token punctuation">:</span><span class="token boolean">true</span>                           <span class="token punctuation">}</span>                       <span class="token punctuation">}</span><span class="token punctuation">,</span>                       messages<span class="token punctuation">:</span><span class="token punctuation">{</span>                           realname<span class="token punctuation">:</span><span class="token string">"真实姓名必须写"</span><span class="token punctuation">,</span>                           username<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"用户名必须写"</span><span class="token punctuation">,</span>                               rangelength<span class="token punctuation">:</span><span class="token string">"长度在5-8之间"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           psw<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"密码必须写"</span><span class="token punctuation">,</span>                               minlength<span class="token punctuation">:</span><span class="token string">"最小是6位"</span><span class="token punctuation">,</span>                               maxlength<span class="token punctuation">:</span><span class="token string">"最大是12位"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           psw2<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"密码必须写"</span><span class="token punctuation">,</span>                               minlength<span class="token punctuation">:</span><span class="token string">"最小是6位"</span><span class="token punctuation">,</span>                               maxlength<span class="token punctuation">:</span><span class="token string">"最大是12位"</span><span class="token punctuation">,</span>                               equalTo<span class="token punctuation">:</span><span class="token string">"密码输入不一致"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           age<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"年龄必须写"</span><span class="token punctuation">,</span>                               range<span class="token punctuation">:</span><span class="token string">"年龄必须在26-50之间"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           edu<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"必须选择一个"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           birthday<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"生日必须填写"</span><span class="token punctuation">,</span>                               dateISO<span class="token punctuation">:</span><span class="token string">"日期格式不正确"</span><span class="token punctuation">,</span>                               date<span class="token punctuation">:</span><span class="token string">"日期非法"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           email<span class="token punctuation">:</span><span class="token punctuation">{</span>                               email<span class="token punctuation">:</span><span class="token string">"邮箱格式不正确"</span>                           <span class="token punctuation">}</span><span class="token punctuation">,</span>                           card<span class="token punctuation">:</span><span class="token punctuation">{</span>                               required<span class="token punctuation">:</span><span class="token string">"身份证必须填写"</span><span class="token punctuation">,</span>                               cardlength<span class="token punctuation">:</span><span class="token string">"身份证长度是15或18位"</span><span class="token punctuation">,</span>                               card15<span class="token punctuation">:</span><span class="token string">"15位的身份证必须都是数字"</span><span class="token punctuation">,</span>                               card18<span class="token punctuation">:</span><span class="token string">"18位的身份证必须都是数字或末尾是X"</span>                           <span class="token punctuation">}</span>                       <span class="token punctuation">}</span>                   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>               <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>员工信息录入<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>empForm<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>empForm<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>test.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span>1</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>真实姓名(不能为空 ,没有其他要求)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>realname<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>realname<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>登录名(登录名不能为空,长度应该在5-8之间,可以包含中文字符(一个汉字算一个字符)):<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码(不能为空,长度6-12字符或数字,不能包含中文字符):<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>psw<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>psw<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>重复密码密码(不能为空,长度6-12字符或数字,不能包含中文字符):<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>psw2<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>psw2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>性别(必选其一)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender_male<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>m<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>男                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>radio<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender_female<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>f<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>女                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gender<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>必须选择一个性别                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>年龄(必填26-50):<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>你的学历:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>edu<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>edu<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>－请选择你的学历－<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>a<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>专科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>b<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>本科<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>c<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>研究生<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>e<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>硕士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>d<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>博士<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>出生日期(1982/09/21):<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>birthday<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>birthday<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>兴趣爱好:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>qq1<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>乒乓球 <span class="token entity" title="&nbsp;">&amp;nbsp;</span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>qq2<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>羽毛球                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>qq3<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>上网                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>qq4<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>3<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>旅游                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox1<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>qq5<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token entity" title="&nbsp;">&amp;nbsp;</span>购物                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>error<span class="token punctuation">"</span></span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox1<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>必须选一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>电子邮箱:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>email<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>身份证(15-18):<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>card<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span>  <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>firstname<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>保存<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-2-5-代码效果"><a href="#5-2-5-代码效果" class="headerlink" title="5.2.5 代码效果"></a>5.2.5 代码效果</h3><p><img src="14.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery高级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jquery基础</title>
      <link href="/2019/04/15/2019-04-15-jquery-ji-chu/"/>
      <url>/2019/04/15/2019-04-15-jquery-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="jQuery基础"><a href="#jQuery基础" class="headerlink" title="jQuery基础"></a>jQuery基础</h1><h1 id="第1章-自定义js框架"><a href="#第1章-自定义js框架" class="headerlink" title="第1章 自定义js框架"></a>第1章 自定义js框架</h1><h2 id="1-1-js框架概述"><a href="#1-1-js框架概述" class="headerlink" title="1.1 js框架概述"></a>1.1 js框架概述</h2><p>框架（Framework）是整个或部分系统的可重用设计，表现为一组抽象构件及构件实例间交互的方法。框架是完成某种功能的半成品，框架是将我们日常的繁琐的代码进行抽取，并提供出更加简洁，功能更加强大的语法实现，我们可以对底层的API进行封装，对外提供更加简单的语法来实现最终的功能，从而提高开发效率。</p><h2 id="1-2-代码实现"><a href="#1-2-代码实现" class="headerlink" title="1.2 代码实现"></a>1.2 代码实现</h2><p><strong>html代码：</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jquery-my.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myDiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>jquery-my.js文件：</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">function</span> <span class="token function">jQuery</span><span class="token punctuation">(</span>selector<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> id <span class="token operator">=</span> selector<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> element<span class="token punctuation">;</span><span class="token punctuation">}</span>$ <span class="token operator">=</span> jQuery<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第2章-jQuery框架介绍"><a href="#第2章-jQuery框架介绍" class="headerlink" title="第2章 jQuery框架介绍"></a>第2章 jQuery框架介绍</h1><h2 id="2-1-jQuery框架概述"><a href="#2-1-jQuery框架概述" class="headerlink" title="2.1 jQuery框架概述"></a>2.1 jQuery框架概述</h2><h3 id="2-1-1-jQuery的概述"><a href="#2-1-1-jQuery的概述" class="headerlink" title="2.1.1 jQuery的概述"></a>2.1.1 jQuery的概述</h3><p>jQuery是一个优秀的javascript的轻量级框架之一，兼容css3和各大浏览器，提供了dom、events、animate、ajax等简易的操作。并且jquery的插件非常丰富，大多数功能都有相应的插件解决方案。jquery的宗旨是write less do more。</p><h3 id="2-1-2-jQuery的作用"><a href="#2-1-2-jQuery的作用" class="headerlink" title="2.1.2 jQuery的作用"></a>2.1.2 jQuery的作用</h3><p>jQuery最主要的作用是简化js的Dom树的操作</p><h2 id="2-2-jQuery框架的下载与引入"><a href="#2-2-jQuery框架的下载与引入" class="headerlink" title="2.2 jQuery框架的下载与引入"></a>2.2 jQuery框架的下载与引入</h2><h3 id="2-2-1-jQuery下载位置"><a href="#2-2-1-jQuery下载位置" class="headerlink" title="2.2.1 jQuery下载位置"></a>2.2.1 jQuery下载位置</h3><ul><li>jQuery的官方下载地址：<a href="http://www.jquery.com" target="_blank" rel="noopener">http://www.jquery.com</a></li></ul><h3 id="2-2-2-jQuery的版本"><a href="#2-2-2-jQuery的版本" class="headerlink" title="2.2.2 jQuery的版本"></a>2.2.2 jQuery的版本</h3><ul><li>1.x：兼容IE678，使用最为广泛的，官方只做BUG维护，功能不再新增。因此一般项目来说，使用1.x版本就可以了，最终版本：1.12.4 (2016年5月20日)</li><li>2.x：不兼容IE678，很少有人使用，官方只做BUG维护，功能不再新增。如果不考虑兼容低版本的浏览器可以使用2.x，最终版本：2.2.4 (2016年5月20日)</li><li>3.x：不兼容IE678，只支持最新的浏览器。除非特殊要求，一般不会使用3.x版本的，很多老的jQuery插件不支持这个版本。目前该版本是官方主要更新维护的版本</li><li>开发版本与生产版本，命名为jQuery-x.x.x.js为开发版本，命名为jQuery-x.x.x.min.js为生产版本，开发版本源码格式良好，有代码缩进和代码注释，方便开发人员查看源码，但体积稍大。而生产版本没有代码缩进和注释，且去掉了换行和空行，不方便发人员查看源码，但体积很小。</li></ul><h3 id="2-2-3-jQuery的引入"><a href="#2-2-3-jQuery的引入" class="headerlink" title="2.2.3 jQuery的引入"></a>2.2.3 jQuery的引入</h3><p>在需要使用jQuery的html中使用js的引入方式进行引入，如下：</p><script type="text/javascript" src="jquery-x.x.x.js></script><h3 id=" 2-2-4-jquery引入成功的测试"><a href="#2-2-4-jQuery引入成功的测试" class="headerlink" title="2.2.4 jQuery引入成功的测试"></a>2.2.4 jQuery引入成功的测试</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 引入jQuery --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 测试jQuery --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token comment" spellcheck="true">//页面加载成功</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"jQuery引入成功...."</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第3章-jQuery对象与js对象之间的转换"><a href="#第3章-jQuery对象与js对象之间的转换" class="headerlink" title="第3章 jQuery对象与js对象之间的转换"></a>第3章 jQuery对象与js对象之间的转换</h1><p>jQuery本质上虽然也是js，但如果使用jQuery的属性和方法那么必须保证对象是jQuery对象而不是js方式获得的DOM对象。使用js方式获取的对象是js的DOM对象，使用jQuery方式获取的对象是jQuery对象。两者的转换关系如下：</p><ul><li>js的DOM对象转换成jQuery对象，语法：$(js对象)</li></ul><ul><li>jQuery对象转换成js对象，语法：jquery对象[索引] 或 jquery对象.get(索引)</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myDiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>通过不同方式获得文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>  <span class="token comment" spellcheck="true">&lt;!-- 引入jQuery --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 测试jQuery --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//通过js方式打印div内部的内容</span>        <span class="token keyword">var</span> divEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//js的DOM对象</span>        <span class="token function">alert</span><span class="token punctuation">(</span>divEle<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//js对象的innerHTML属性</span>        <span class="token comment" spellcheck="true">//通过jQuery方式打印div内部的内容</span>        <span class="token keyword">var</span> $divEle <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//jQuery对象</span>        <span class="token function">alert</span><span class="token punctuation">(</span>$divEle<span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//jQuery对象的html方法</span>        <span class="token comment" spellcheck="true">//使用js的DOM对象调用jQuery对象的方法</span>        <span class="token comment" spellcheck="true">//alert(divEle.html());//错误写法，不能正常执行</span>        <span class="token comment" spellcheck="true">//使用jQuery对象调用js的DOM对象的属性</span>        <span class="token comment" spellcheck="true">//alert($divEle.innerHTML);//错误写法，不能正常执行</span>        <span class="token comment" spellcheck="true">//js转换成jQuery对象后在调用jQuery对象的html方法</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>divEle<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//转换后正常执行</span>        <span class="token comment" spellcheck="true">//jQuery转换成js的DOM对象后在调用js的innerHTML属性</span>        <span class="token function">alert</span><span class="token punctuation">(</span>$divEle<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第4章-jQuery页面加载事件"><a href="#第4章-jQuery页面加载事件" class="headerlink" title="第4章 jQuery页面加载事件"></a>第4章 jQuery页面加载事件</h1><p>​    在上面的案例中,我们看到所有的js代码都放到了body标签之后,如果把js代码放到head标签中,js代码就会报错,这个问题我们已经在js中学过,就是需要让页面加载完成之后再执行.</p><p>​    接下来回顾下js中的页面加载事件</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">  onload<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//通过js方式打印div内部的内容</span>    <span class="token keyword">var</span> divEle <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"myDiv"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">alert</span><span class="token punctuation">(</span>divEle<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myDiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>通过不同方式获得文本内容<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>jquery对页面加载事件也进行了封装,让我们使用起来更加的简单,接下来我们来学习下</p><ul><li>方式1:(理解)</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//编写代码</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>方式2:(掌握)</li></ul><pre class="line-numbers language-js"><code class="language-js"><span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//编写代码</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>代码演示:</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Insert title here<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- 引入jQuery --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 测试jQuery --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token comment" spellcheck="true">//js</span>            onload<span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"js页面加载"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//jquery方式</span>            <span class="token function">$</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ready</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"jquery方式1"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">"jquery方式2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意:</p><p>​    js的onload方式在页面中只能使用一次,多次使用的话后面的操作将会覆盖前面的操作</p><p>​    jquery的页面加载事件在页面上可以使用多次.且依次执行</p></blockquote><h1 id="第5章-jQuery选择器"><a href="#第5章-jQuery选择器" class="headerlink" title="第5章 jQuery选择器"></a>第5章 jQuery选择器</h1><h2 id="5-1-基本选择器"><a href="#5-1-基本选择器" class="headerlink" title="5.1 基本选择器"></a>5.1 基本选择器</h2><h3 id="5-1-1-语法"><a href="#5-1-1-语法" class="headerlink" title="5.1.1 语法"></a>5.1.1 语法</h3><table><thead><tr><th>选择器名称</th><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>标签选择器（元素选择器）</td><td>$(“html标签名”)</td><td>获得所有匹配标签名称的于元素</td></tr><tr><td>id选择器</td><td>$(“#id的属性值”)</td><td>获得与指定id属性值匹配的元素</td></tr><tr><td>类选择器</td><td>$(“.class的属性值”)</td><td>获得与指定的class属性值匹配的元素</td></tr></tbody></table><h3 id="5-1-2-代码"><a href="#5-1-2-代码" class="headerlink" title="5.1.2 代码"></a>5.1.2 代码</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//&lt;input type="button" value="改变 id 为 one 的元素的背景色为 红色"  id="b1"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"backgroundColor"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变元素名为 &lt;div> 的所有元素的背景色为 红色"  id="b2"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"backgroundColor"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变 class 为 mini 的所有元素的背景色为 红色"  id="b3"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".mini"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"backgroundColor"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变所有的&lt;span>元素和 id 为 two 的元素的背景色为红色"  id="b4"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"span,#two"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"backgroundColor"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-2-层级选择器"><a href="#5-2-层级选择器" class="headerlink" title="5.2 层级选择器"></a>5.2 层级选择器</h2><h3 id="5-2-1-语法"><a href="#5-2-1-语法" class="headerlink" title="5.2.1 语法"></a>5.2.1 语法</h3><table><thead><tr><th>选择器名称</th><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>后代选择器</td><td>$(“A  B “)</td><td>选择A元素内部的所有B元素</td></tr><tr><td>子选择器</td><td>$(“A &gt; B”)</td><td>选择A元素内部的所有B子元素</td></tr></tbody></table><h3 id="5-2-2-代码"><a href="#5-2-2-代码" class="headerlink" title="5.2.2 代码"></a>5.2.2 代码</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变 &lt;body> 内所有 &lt;div> 的背景色为红色"  id="b1"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变 &lt;body> 内 子 &lt;div> 的背景色为 红色"  id="b2"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"body>div"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-3-属性选择器"><a href="#5-3-属性选择器" class="headerlink" title="5.3 属性选择器"></a>5.3 属性选择器</h2><h3 id="5-3-1-语法"><a href="#5-3-1-语法" class="headerlink" title="5.3.1 语法"></a>5.3.1 语法</h3><table><thead><tr><th>选择器名称</th><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>属性选择器</td><td>$(“A[属性名]”)</td><td>包含指定属性的选择器</td></tr><tr><td>属性选择器</td><td>$(“A[属性名=值]”)</td><td>包含指定属性等于指定值的选择器</td></tr><tr><td>复合属性选择器</td><td>$(“A[属性名=值]… …”)</td><td>包含多个属性条件的选择器</td></tr></tbody></table><h3 id="5-3-2-代码"><a href="#5-3-2-代码" class="headerlink" title="5.3.2 代码"></a>5.3.2 代码</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 含有属性title 的div元素背景色为红色"  id="b1"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div[title]"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 属性title值等于test的div元素背景色为红色"  id="b2"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div[title='test']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value="选取有属性id的div元素，然后在结果中选取属性title等于“test”的 div 元素背景色为红色"  id="b3"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div[id][title='test']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-4-基本过滤选择器"><a href="#5-4-基本过滤选择器" class="headerlink" title="5.4 基本过滤选择器"></a>5.4 基本过滤选择器</h2><h3 id="5-4-1-语法"><a href="#5-4-1-语法" class="headerlink" title="5.4.1 语法"></a>5.4.1 语法</h3><table><thead><tr><th>选择器名称</th><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>首元素选择器</td><td>:first</td><td>获得选择的元素中的第一个元素</td></tr><tr><td>尾元素选择器</td><td>:last</td><td>获得选择的元素中的最后一个元素</td></tr><tr><td>非元素选择器</td><td>:not(selecter)</td><td>不包括指定内容的元素</td></tr><tr><td>偶数选择器</td><td>:even</td><td>偶数，从 0 开始计数</td></tr><tr><td>奇数选择器</td><td>:odd</td><td>奇数，从 0 开始计数</td></tr><tr><td>等于索引选择器</td><td>:eq(index)</td><td>指定索引元素</td></tr><tr><td>大于索引选择器</td><td>:gt(index)</td><td>大于指定索引元素</td></tr><tr><td>小于索引选择器</td><td>:lt(index)</td><td>小于指定索引元素</td></tr><tr><td>标题选择器</td><td>:header</td><td>获得标题元素，固定写法</td></tr></tbody></table><h3 id="5-4-2-代码"><a href="#5-4-2-代码" class="headerlink" title="5.4.2 代码"></a>5.4.2 代码</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变第一个 div 元素的背景色为 红色"  id="b1"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:first"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变最后一个 div 元素的背景色为 红色"  id="b2"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:last"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变class不为 one 的所有 div 元素的背景色为 红色"  id="b3"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:not(.one)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变索引值为偶数的 div 元素的背景色为 红色"  id="b4"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:even"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变索引值为奇数的 div 元素的背景色为 红色"  id="b5"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b5"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:odd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变索引值为大于 3 的 div 元素的背景色为 红色"  id="b6"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b6"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:gt(3)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变索引值为等于 3 的 div 元素的背景色为 红色"  id="b7"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b7"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:eq(3)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变索引值为小于 3 的 div 元素的背景色为 红色"  id="b8"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b8"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"div:lt(3)"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 改变所有的标题元素的背景色为 红色"  id="b9"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b9"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">":header"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"red"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="5-5-表单属性选择器"><a href="#5-5-表单属性选择器" class="headerlink" title="5.5 表单属性选择器"></a>5.5 表单属性选择器</h2><h3 id="5-5-1-语法"><a href="#5-5-1-语法" class="headerlink" title="5.5.1 语法"></a>5.5.1 语法</h3><table><thead><tr><th>选择器名称</th><th>语法</th><th>解释</th></tr></thead><tbody><tr><td>可用元素选择器</td><td>:enabled</td><td>获得可用元素</td></tr><tr><td>不可用元素选择器</td><td>:disabled</td><td>获得不可用元素</td></tr><tr><td>选中选择器</td><td>:checked</td><td>获得单选/复选框选中的元素</td></tr><tr><td>选中选择器</td><td>:selected</td><td>获得下拉框选中的元素</td></tr></tbody></table><h3 id="5-5-2-代码"><a href="#5-5-2-代码" class="headerlink" title="5.5.2 代码"></a>5.5.2 代码</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 利用 jQuery 对象的 val() 方法改变表单内可用 &lt;input> 元素的值"  id="b1"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> $inputs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type='text']:enabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//$inputs内部有两个input的js的dom对象</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>$inputs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span>$inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// &lt;input type="button" value=" 利用 jQuery 对象的 val() 方法改变表单内不可用 &lt;input> 元素的值"  id="b2"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> $inputs <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type='text']:disabled"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//$inputs内部有两个input的js的dom对象</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>$inputs<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span>$inputs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 利用 jQuery 对象的 length 属性获取多选框选中的个数"  id="b3"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> $checkedInput <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[type='checkbox']:checked"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">alert</span><span class="token punctuation">(</span>$checkedInput<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// &lt;input type="button" value=" 利用 jQuery 对象的 text() 方法获取下拉框选中的内容"  id="b4"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> $options <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"option:selected"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>$options<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>$options<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第6章-jQuery的DOM操作"><a href="#第6章-jQuery的DOM操作" class="headerlink" title="第6章 jQuery的DOM操作"></a>第6章 jQuery的DOM操作</h1><h2 id="6-1-jQuery对DOM树中的文本和值进行操作"><a href="#6-1-jQuery对DOM树中的文本和值进行操作" class="headerlink" title="6.1 jQuery对DOM树中的文本和值进行操作"></a>6.1 jQuery对DOM树中的文本和值进行操作</h2><h3 id="6-1-1-语法"><a href="#6-1-1-语法" class="headerlink" title="6.1.1 语法"></a>6.1.1 语法</h3><table><thead><tr><th>API方法</th><th>解释</th></tr></thead><tbody><tr><td>val([value])</td><td>获得/设置元素value属性相应的值</td></tr><tr><td>text([value])</td><td>获得/设置元素的文本内容</td></tr><tr><td>html([value])</td><td>获得/设置元素的标签体内容</td></tr></tbody></table><h3 id="6-1-2-代码"><a href="#6-1-2-代码" class="headerlink" title="6.1.2 代码"></a>6.1.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token comment" spellcheck="true">//页面加载完毕事件</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//获取张三</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#myinput"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">val</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//获得mydiv的文本内容</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#mydiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//获得mydiv的标签体内容</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#mydiv"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myinput<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>张三<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mydiv<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>标题标签<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-2-jQuery对DOM树中的属性进行操作"><a href="#6-2-jQuery对DOM树中的属性进行操作" class="headerlink" title="6.2 jQuery对DOM树中的属性进行操作"></a>6.2 jQuery对DOM树中的属性进行操作</h2><h3 id="6-2-1-语法"><a href="#6-2-1-语法" class="headerlink" title="6.2.1 语法"></a>6.2.1 语法</h3><table><thead><tr><th>API方法</th><th>解释</th></tr></thead><tbody><tr><td>attr(name[,value])</td><td>获得/设置属性的值</td></tr><tr><td>prop(name[,value])</td><td>获得/设置属性的值(checked，selected)</td></tr></tbody></table><h3 id="6-2-1-代码"><a href="#6-2-1-代码" class="headerlink" title="6.2.1 代码"></a>6.2.1 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>获取属性<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>                 <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beijing<span class="token punctuation">"</span></span> <span class="token attr-name">xxx</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>yyy<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tianjin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hobby<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">//获取北京节点的name属性值</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#bj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置北京节点的name属性的值为dabeijing</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#bj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"dabeijing"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//新增北京节点的discription属性 属性值是didu</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#bj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"discription"</span><span class="token punctuation">,</span><span class="token string">"wudu"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//删除北京节点的name属性并检验name属性是否存在</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#bj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeAttr</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获得hobby的的选中状态</span>        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#hobby"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-2-2-attr与prop的注意问题"><a href="#6-2-2-attr与prop的注意问题" class="headerlink" title="6.2.2 attr与prop的注意问题"></a>6.2.2 attr与prop的注意问题</h3><ul><li>attr与prop是以1.6为界限</li><li>checked 和 selected 使用prop获取</li><li>其他使用attr获取 获取不到换成prop</li></ul><h2 id="6-3-jQuery对class进行操作"><a href="#6-3-jQuery对class进行操作" class="headerlink" title="6.3 jQuery对class进行操作"></a>6.3 jQuery对class进行操作</h2><h3 id="6-3-1-语法"><a href="#6-3-1-语法" class="headerlink" title="6.3.1 语法"></a>6.3.1 语法</h3><table><thead><tr><th>API方法</th><th>解释</th></tr></thead><tbody><tr><td>css(name[,value])</td><td>获取/设置指定的CSS样式</td></tr><tr><td>addClass(value)</td><td>addClass(类样式名) 给指定的对象添加新的类样式，指定类样式名字即可</td></tr><tr><td>removeClass(value)</td><td>removeClass(类样式名) 删除指定的类样式</td></tr><tr><td>toggleClass(value)</td><td>toggleClass(类样式名) 切换样式，如果没有类样式，则添加，如果有类样式，则删除</td></tr></tbody></table><h3 id="6-3-2-代码"><a href="#6-3-2-代码" class="headerlink" title="6.3.2 代码"></a>6.3.2 代码</h3><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//&lt;input type="button" value="采用属性增加样式(改变id=one的样式)"  id="b1"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">"class"</span><span class="token punctuation">,</span><span class="token string">"second"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" addClass"  id="b2"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b2"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addClass</span><span class="token punctuation">(</span><span class="token string">"second"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value="removeClass"  id="b3"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b3"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">removeClass</span><span class="token punctuation">(</span><span class="token string">"second"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 切换样式"  id="b5"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b4"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toggleClass</span><span class="token punctuation">(</span><span class="token string">"second"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;input type="button" value=" 通过css()获得id为one背景颜色"  id="b5"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b5"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">alert</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// &lt;input type="button" value=" 通过css()设置id为one背景颜色为绿色"  id="b6"/></span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#b6"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#one"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"green"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-4-jQuery创建插入对象"><a href="#6-4-jQuery创建插入对象" class="headerlink" title="6.4 jQuery创建插入对象"></a>6.4 jQuery创建插入对象</h2><h3 id="6-4-1-语法"><a href="#6-4-1-语法" class="headerlink" title="6.4.1 语法"></a>6.4.1 语法</h3><table><thead><tr><th>API方法</th><th>解释</th></tr></thead><tbody><tr><td>$(“<A></A>“)</td><td>创建A元素对象</td></tr><tr><td>append(element)</td><td>添加成最后一个子元素，两者之间是父子关系</td></tr><tr><td>prepend(element)</td><td>添加成第一个子元素，两者之间是父子关系</td></tr><tr><td>before(element)</td><td>添加到当前元素的前面，两者之间是兄弟关系</td></tr><tr><td>after(element)</td><td>添加到当前元素的后面，两者之间是兄弟关系</td></tr></tbody></table><h3 id="6-4-2-代码"><a href="#6-4-2-代码" class="headerlink" title="6.4.2 代码"></a>6.4.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>内部插入脚本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beijing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tianjin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cq<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>chongqing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>love<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fk<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>fankong<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>反恐<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xingji<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>星际<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>foo1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>       <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token comment" spellcheck="true">/**将反恐放置到city的后面*/</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**将反恐放置到city的最前面*/</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prepend</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将反恐插入到天津后面</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#tj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">after</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将反恐插入到天津前面</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#tj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">before</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fk"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将反恐插入到天津后面</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertAfter</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#tj"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将反恐插入到天津前面</span>        <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#fk"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insertBefore</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#tj"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-5-jQuery删除对象"><a href="#6-5-jQuery删除对象" class="headerlink" title="6.5 jQuery删除对象"></a>6.5 jQuery删除对象</h2><h3 id="6-5-1-语法"><a href="#6-5-1-语法" class="headerlink" title="6.5.1 语法"></a>6.5.1 语法</h3><table><thead><tr><th>API方法</th><th>解释</th></tr></thead><tbody><tr><td>remove()</td><td>删除指定元素</td></tr><tr><td>empty()</td><td>清空指定元素的所有子元素</td></tr></tbody></table><h3 id="6-5-2-代码"><a href="#6-5-2-代码" class="headerlink" title="6.5.2 代码"></a>6.5.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>删除节点<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content-type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>city<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beijing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>北京<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tj<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tianjin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>天津<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>cq<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>chongqing<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>重庆<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> how are <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>you?<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">       <span class="token comment" spellcheck="true">//删除&lt;li id="bj" name="beijing">北京&lt;/li></span>       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#bj"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//删除所有的子节点   清空元素中的所有后代节点(不包含属性节点).</span>       <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#city"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第7章-综合案例"><a href="#第7章-综合案例" class="headerlink" title="第7章 综合案例"></a>第7章 综合案例</h1><h2 id="7-1-案例-表格隔行换色"><a href="#7-1-案例-表格隔行换色" class="headerlink" title="7.1 案例-表格隔行换色"></a>7.1 案例-表格隔行换色</h2><h3 id="7-1-1-效果"><a href="#7-1-1-效果" class="headerlink" title="7.1.1 效果"></a>7.1.1 效果</h3><p><img src="1.png" alt=""></p><h3 id="7-1-2-代码"><a href="#7-1-2-代码" class="headerlink" title="7.1.2 代码"></a>7.1.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"tr:gt(1):even"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"pink"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"tr:gt(1):odd"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">"background-color"</span><span class="token punctuation">,</span><span class="token string">"yellow"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab1<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>删除<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#999999</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>分类ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>分类名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>分类描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>手机数码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>手机数码类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>电脑办公<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>电脑办公类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>鞋靴箱包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>鞋靴箱包类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>家居饰品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>家居饰品类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-2-案例-复选框全选全不选"><a href="#7-2-案例-复选框全选全不选" class="headerlink" title="7.2 案例-复选框全选全不选"></a>7.2 案例-复选框全选全不选</h2><h3 id="7-2-1-效果"><a href="#7-2-1-效果" class="headerlink" title="7.2.1 效果"></a>7.2.1 效果</h3><p><img src="2.png" alt=""></p><h3 id="7-2-2-代码"><a href="#7-2-2-代码" class="headerlink" title="7.2.2 代码"></a>7.2.2 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">                </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">            <span class="token keyword">function</span> <span class="token function">selectAll</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//this是js对象</span>                <span class="token comment" spellcheck="true">//将下面的所有的复选框的状态编程总选框一致</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[class='itemSelect']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">,</span><span class="token function">$</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>                                                <span class="token punctuation">.</span><span class="token function">prop</span><span class="token punctuation">(</span><span class="token string">"checked"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">function</span> <span class="token function">revSelect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                  <span class="token comment" spellcheck="true">//将jquery(数组)对象内部的每个元素都执行一次操作</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"input[class='itemSelect']"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tab1<span class="token punctuation">"</span></span> <span class="token attr-name">border</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>1<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>center<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>5<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>反选<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>revSelect()<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectAll(this)<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>分类ID<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>分类名称<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>分类描述<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>操作<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>itemSelect<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>手机数码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>手机数码类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>itemSelect<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>电脑办公<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>电脑办公类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>itemSelect<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>鞋靴箱包<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>鞋靴箱包类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkbox<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>itemSelect<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>家居饰品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>家居饰品类商品<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>修改<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>|<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>删除<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="7-3-案例-QQ表情案例"><a href="#7-3-案例-QQ表情案例" class="headerlink" title="7.3 案例 QQ表情案例"></a>7.3 案例 QQ表情案例</h2><h3 id="7-3-1-需求"><a href="#7-3-1-需求" class="headerlink" title="7.3.1 需求:"></a>7.3.1 需求:</h3><pre><code> 点击某一个表情 , 就会将此表情追加到请发言后面.</code></pre><h3 id="7-3-2-效果"><a href="#7-3-2-效果" class="headerlink" title="7.3.2 效果"></a>7.3.2 效果</h3><p><img src="3.png" alt=""></p><h3 id="7-3-3-代码"><a href="#7-3-3-代码" class="headerlink" title="7.3.3 代码"></a>7.3.3 代码</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>QQ表情选择<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">list-style</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.emoji</span></span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">50</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector">ul</span><span class="token punctuation">{</span><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector">li</span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">48</span>px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">48</span>px<span class="token punctuation">;</span><span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.emoji</span> img</span><span class="token punctuation">{</span> <span class="token property">cursor</span><span class="token punctuation">:</span> pointer<span class="token punctuation">;</span> <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../js/jquery-3.3.1.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">".emoji li img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//把当前的小表情克隆，再追加到p元素中</span>                <span class="token function">$</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">clone</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">appendTo</span><span class="token punctuation">(</span><span class="token string">".word"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>emoji<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/01.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/02.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/03.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/04.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/05.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/06.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/07.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/08.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/09.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/10.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/11.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/12.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>word<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>strong</span><span class="token punctuation">></span></span>请发言：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>strong</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img/12.gif<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>22<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></script>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jQuery基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>filter_listener</title>
      <link href="/2019/04/09/2019-04-09-filter-listener/"/>
      <url>/2019/04/09/2019-04-09-filter-listener/</url>
      
        <content type="html"><![CDATA[<h1 id="过滤器-amp-监听器"><a href="#过滤器-amp-监听器" class="headerlink" title="过滤器&amp;监听器"></a>过滤器&amp;监听器</h1><h1 id="第1章-过滤器简介"><a href="#第1章-过滤器简介" class="headerlink" title="第1章 过滤器简介"></a>第1章 过滤器简介</h1><h2 id="1-1-为什么要使用过滤器"><a href="#1-1-为什么要使用过滤器" class="headerlink" title="1.1 为什么要使用过滤器"></a>1.1 为什么要使用过滤器</h2><p>在我们实际项目中，我们对访问某些资源的请求需要进条件的筛选、过滤。当这个请求满足特定的情况，才能让这个请求访问目标资源，如果不满足条件，就不让访问目标资源。比如说：对于访问管理员功能的请求，我们应该对这样的请求进行管理员权限的判断。如果当前用户拥有管理员权限，可以访问。反之不可以。我们java开发中需要很多这样过滤功能的操作，所以需要学习过滤器。</p><h2 id="1-2-什么是过滤器"><a href="#1-2-什么是过滤器" class="headerlink" title="1.2 什么是过滤器"></a>1.2 什么是过滤器</h2><p>Filter：是Java中预先定义好了的接口，可以过滤不同的内容，具体怎么过滤，需要使用者定义一个实现类，然后实现接口中的过滤方法，在方法中书写过滤的条件。filter是对客户端访问资源的过滤，符合条件放行，不符合条件不放行</p><h1 id="第2章-过滤器的应用场景"><a href="#第2章-过滤器的应用场景" class="headerlink" title="第2章 过滤器的应用场景"></a>第2章 过滤器的应用场景</h1><h2 id="2-1-过滤论坛中用户发表内容中的非法字符"><a href="#2-1-过滤论坛中用户发表内容中的非法字符" class="headerlink" title="2.1 过滤论坛中用户发表内容中的非法字符"></a>2.1 过滤论坛中用户发表内容中的非法字符</h2><p>当我们上论坛或者贴吧这类的网站浏览信息时，我们发现，很多评论有时候是携带脏词的。而这些脏词不能显示出来，使用**代替了。类似这类的脏词过滤，我们可以通过java中的过滤器，对请求参数中的脏词进行过滤。</p><h2 id="2-2-登录权限检查"><a href="#2-2-登录权限检查" class="headerlink" title="2.2 登录权限检查"></a>2.2 登录权限检查</h2><p>当客户端浏览器发出一个请求，这个请求在访问到正真的目标资源之前，我们需要进行登录权限的检查。如果已经登录，我们就让这个请求通过，访问资源；如果没有登录，我们不能让请求访问目标资源。这样的操作需要在访问具体资源进行条件的过滤，我们可以使用过滤器来完成。</p><h1 id="第3章-我的第一个过滤器开发步骤"><a href="#第3章-我的第一个过滤器开发步骤" class="headerlink" title="第3章 我的第一个过滤器开发步骤"></a>第3章 我的第一个过滤器开发步骤</h1><h2 id="3-1-Filter的API介绍"><a href="#3-1-Filter的API介绍" class="headerlink" title="3.1 Filter的API介绍"></a>3.1 Filter的API介绍</h2><p><img src="02.png" alt></p><p>总结：</p><p>​    1.我们创建一个过滤器的话需要实现Filter这个接口</p><p>​    2.doFilter方法执行过滤器的功能</p><h2 id="3-2-使用步骤"><a href="#3-2-使用步骤" class="headerlink" title="3.2 使用步骤"></a>3.2 使用步骤</h2><ol><li>编写一个Servlet,路径为/demo1</li><li>创建一个类实现过滤器接口</li><li>xml方式或者注解方式配置过滤器拦截的请求路径（urlPatterns = “/demo1”）</li><li>在doFilter方法中书写过滤任务</li><li>FilterChain.doFilter方法放行</li></ol><h2 id="3-3-注意事项"><a href="#3-3-注意事项" class="headerlink" title="3.3 注意事项"></a>3.3 注意事项</h2><p>​    过滤器doFilter方法默认拦截请求，如果需要经过过滤器之后，可以继续访问资源，要使用filterChain对象的doFilter方法放行。</p><h2 id="3-4-XML方式代码演示"><a href="#3-4-XML方式代码演示" class="headerlink" title="3.4 XML方式代码演示"></a>3.4 XML方式代码演示</h2><ul><li>servlet代码省略</li><li>Filter代码</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>myfilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FilterDemo1</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"FilterDemo执行。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//放行当前请求</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>web.xml配置filter</li></ul><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>FilterDemo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.FilterDemo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>FilterDemo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/demo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>ServletDemo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.ServletDemo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>servlet-name</span><span class="token punctuation">></span></span>ServletDemo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/demo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>servlet-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-5-注解方式代码演示"><a href="#3-5-注解方式代码演示" class="headerlink" title="3.5 注解方式代码演示"></a>3.5 注解方式代码演示</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>myfilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebFilter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"FilterDemo2"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/demo1"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">FilterDemo2</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span><span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"FilterDemo执行。。。"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//放行当前请求</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第4章-过滤器的执行流程"><a href="#第4章-过滤器的执行流程" class="headerlink" title="第4章 过滤器的执行流程"></a>第4章 过滤器的执行流程</h1><h2 id="4-1-生活案例类比过滤器流程"><a href="#4-1-生活案例类比过滤器流程" class="headerlink" title="4.1 生活案例类比过滤器流程"></a>4.1 生活案例类比过滤器流程</h2><p>​    平常生活中我们坐地铁或者火车，登车的时候需要先经过安检，安检通过了才能检票，检票通过了才能登车。安检和检票都相当于我们今天学习的过滤器。</p><h2 id="4-2-图解过滤器的执行流程"><a href="#4-2-图解过滤器的执行流程" class="headerlink" title="4.2 图解过滤器的执行流程"></a>4.2 图解过滤器的执行流程</h2><p><img src="024.png" alt></p><h1 id="第5章-过滤器的生命周期"><a href="#第5章-过滤器的生命周期" class="headerlink" title="第5章 过滤器的生命周期"></a>第5章 过滤器的生命周期</h1><p>​    过滤器我们已经看到了他的执行流程，但是，过滤器只有被创建出来才能执行，因此，我们还要了解过滤器生命周期。它包括了init、doFilter、destroy三个方法。</p><h2 id="5-1-init方法"><a href="#5-1-init方法" class="headerlink" title="5.1 init方法"></a>5.1 init方法</h2><p><img src="05.png" alt></p><p>init方法是初始化方法。当过滤器被部署到web服务器时，服务器启动的时候执行一次。</p><h2 id="5-2-doFilter方法"><a href="#5-2-doFilter方法" class="headerlink" title="5.2 doFilter方法"></a>5.2 doFilter方法</h2><p><img src="07.png" alt></p><p>只要一个请求符合Filter拦截路径，都会执行doFilter。需要注意的是:如果需要让这个请求通过过滤器，继续访问目标资源，一定得调用FilterChain对象的doFilter方法，要不然请求就被过滤器拦截了。FilterChain对象的doFilter方法表示对于请求放行。</p><h2 id="5-3-destory方法"><a href="#5-3-destory方法" class="headerlink" title="5.3 destory方法"></a>5.3 destory方法</h2><p><img src="C:/Users/Administrator/Desktop/HTML/day33_filter/01_%E8%AE%B2%E4%B9%89/img/09.png" alt></p><p>过滤器的销毁方法。服务器停止或者将项目从服务器中移除的时候，过滤器销毁，执行一次destory方法。</p><h2 id="5-4-过滤器生命周期总结-了解"><a href="#5-4-过滤器生命周期总结-了解" class="headerlink" title="5.4 过滤器生命周期总结(了解)"></a>5.4 过滤器生命周期总结(了解)</h2><ol><li>当服务器启动的时候，过滤器就被初始化了，执行过滤器的init方法</li><li>每当一个请求的路径是满足过滤器的配置路径，那么就会执行一次过滤器的doFilter方法</li><li>当服务器停止的时候，销毁过滤器，执行过滤器的destory方法</li></ol><h1 id="第6章-映射路径"><a href="#第6章-映射路径" class="headerlink" title="第6章 映射路径"></a>第6章 映射路径</h1><p>刚才我们编写的Filter的例子 , 都是对某一个Servlet进行的过滤 , 其实我们是可以通过配置Filter的映射路径 , 从而可以使用一个过滤器拦截不同的请求路径 , 接下来我们来学习下Filter中映射路径的配置。</p><h2 id="6-1-精确匹配模式"><a href="#6-1-精确匹配模式" class="headerlink" title="6.1 精确匹配模式"></a>6.1 精确匹配模式</h2><p>发出的路径需要与过滤器配置的路径完全一致，才能被这个过滤器过滤。例如需要对index.jsp进行过滤</p><p>我们只需要创建一个过滤器UrlFilter，配置过滤器的过滤路径为/index.jsp,过滤器代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>myfilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebFilter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/index.jsp"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UrlFillter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest req<span class="token punctuation">,</span> ServletResponse resp<span class="token punctuation">,</span> FilterChain chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"*********urlFilter拦截了请求***********"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig config<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    只有访问<a href="http://localhost:9090/index.jsp" target="_blank" rel="noopener">http://localhost:9090/index.jsp</a> 的时候，才会经过当前过滤器。除了当前请求之外的请求都不会经过这个过滤器。因为过滤器配置的过滤路径/index.jsp只会对index.jsp这个首页的请求进行拦截过滤，其他请求不会拦截过滤。</p><p>​    同理,假如需要对项目index.html进行过滤,只需要配置过滤器的路径为 /index.html;加入需要对项目下的img/a.jpg进行过滤,只需要配置过滤器的路径为 /img/a.jpg;</p><p>​    <strong>总之,精确匹配只对某一个指定的资源进行过滤.</strong></p><h2 id="6-2-模糊匹配模式"><a href="#6-2-模糊匹配模式" class="headerlink" title="6.2 模糊匹配模式"></a>6.2 模糊匹配模式</h2><h3 id="6-2-1-整个应用的配置"><a href="#6-2-1-整个应用的配置" class="headerlink" title="6.2.1 整个应用的配置"></a>6.2.1 整个应用的配置</h3><p>1.修改UrlFilter过滤器的配置的过滤路径为/*,代码如下:</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.浏览器发出当前项目的任何请求都会经过当前过滤器</p><h3 id="6-2-2-指定目录下的路径配置"><a href="#6-2-2-指定目录下的路径配置" class="headerlink" title="6.2.2 指定目录下的路径配置"></a>6.2.2 指定目录下的路径配置</h3><p>1.修改UrlFilter过滤器的注解配置的过滤路径为/admin/*,代码如下:</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/admin/*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.浏览器发出当前项目下admin下的任何请求，都会经过过滤器。例如：</p><p><a href="http://localhost:9090/admin/ss" target="_blank" rel="noopener">http://localhost:9090/admin/ss</a></p><p><a href="http://localhost:9090/admin/bb/aa" target="_blank" rel="noopener">http://localhost:9090/admin/bb/aa</a></p><h3 id="6-2-3-指定后缀名的路径配置"><a href="#6-2-3-指定后缀名的路径配置" class="headerlink" title="6.2.3 指定后缀名的路径配置"></a>6.2.3 指定后缀名的路径配置</h3><p>1.修改UrlFilter过滤器的注解配置的过滤路径为*.jsp,代码如下:</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>UrlFillter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>*.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.浏览器访问当前项目下的任何jsp页面，都会经过过滤器。例如：</p><p><a href="http://localhost:9090/admin/1.jsp" target="_blank" rel="noopener">http://localhost:9090/admin/1.jsp</a></p><p><a href="http://localhost:9090/aa/2.jsp" target="_blank" rel="noopener">http://localhost:9090/aa/2.jsp</a></p><h1 id="第7章-拦截方式"><a href="#第7章-拦截方式" class="headerlink" title="第7章 拦截方式"></a>第7章 拦截方式</h1><p>有了上面学习的映射路径，我们可以控制过滤器过滤指定的内容，但是我们在访问资源的时候，有时是直接访问到指定资源的，有时是以转发的方式访问到的，这就需要我们要让过滤器可以区分不同的访问资源的方式，有不同的拦截方式。</p><h2 id="7-1-request"><a href="#7-1-request" class="headerlink" title="7.1 request"></a>7.1 request</h2><p>request是默认的拦截方式：浏览器发出的请求都会进行拦截。<br>1.直接从地址栏访问index.jsp，Filter拦截<br>2.重定向到index.jsp，Filter拦截</p><h3 id="7-1-1-代码演示"><a href="#7-1-1-代码演示" class="headerlink" title="7.1.1 代码演示"></a>7.1.1 代码演示</h3><p>1.创建过滤器MethodFilter,配置过滤路径为/index.jsp，过滤器代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>myfilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebFilter<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MethodFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest req<span class="token punctuation">,</span> ServletResponse resp<span class="token punctuation">,</span> FilterChain chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"+++++++++MethodFilter过滤器执行了++++++++++"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig config<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.创建RedirectServlet,重定向到index.jsp去，代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/RedirectServlet"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedirectServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"RedirectServlet执行了，下面开始重定向到index.jsp去"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"/index.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.浏览器发出请求<a href="http://localhost:9090/index.jsp，查看控制台：" target="_blank" rel="noopener">http://localhost:9090/index.jsp，查看控制台：</a></p><p><img src="13.png" alt></p><p>4.浏览器地址栏输入地址<a href="http://localhost:9090/RedirectServlet，控制台结果如下" target="_blank" rel="noopener">http://localhost:9090/RedirectServlet，控制台结果如下</a></p><p><img src="14.png" alt></p><p>可以发现，无论是直接访问还是重定向访问index.jsp，都会执行过滤器</p><h2 id="7-2-forward"><a href="#7-2-forward" class="headerlink" title="7.2 forward"></a>7.2 forward</h2><p>按照过滤器默认的拦截方式，我们只能拦截浏览器对服务器的之间访问，但是，如果是服务器资源之间使用转发的方式，就无法访问了，因此，我们还有一种forward拦截方式：当前拦截方式表示只有在进行请求转发时，才会拦截请求进行过滤。</p><h3 id="7-2-1-转发到index-jsp代码演示"><a href="#7-2-1-转发到index-jsp代码演示" class="headerlink" title="7.2.1 转发到index.jsp代码演示"></a>7.2.1 转发到index.jsp代码演示</h3><p>1.创建ForwardServlet，转发到index.jsp去，代码如下</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/ForwardServlet"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ForwardServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"ForwardServlet执行了，下面开始转发请求到index.jsp去"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/index.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.浏览器地址栏输入地址：<a href="http://localhost:9090/ForwardServlet，查看控制台，发现请求转发到index.jsp,访问了index.jsp资源，但是并没有被MethodFilter过滤器拦截。这是因为默认的request拦截方式对于转发的请求不会进行拦截。" target="_blank" rel="noopener">http://localhost:9090/ForwardServlet，查看控制台，发现请求转发到index.jsp,访问了index.jsp资源，但是并没有被MethodFilter过滤器拦截。这是因为默认的request拦截方式对于转发的请求不会进行拦截。</a></p><p><img src="15.png" alt></p><p>3.修改MethodFilter的拦截方式为forward。以下给大家演示xml方式配置和注解方式配置</p><ul><li><p>xml方式配置</p><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>MethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.MethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>MethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dispatcher</span><span class="token punctuation">></span></span>FORWARD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dispatcher</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><ul><li><p>注解方式配置</p><p>在注解上添加代码dispatcherTypes = DispatcherType.FORWARD     </p></li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"MethodFilter"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/index.jsp"</span><span class="token punctuation">,</span>dispatcherTypes <span class="token operator">=</span> DispatcherType<span class="token punctuation">.</span>FORWARD<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>4.重新启动服务器，浏览器再次访问请求：<a href="http://localhost:9090/ForwardServlet，查看控制台，发现当请求转发到index.jsp的时候，会经过过滤器的过滤。" target="_blank" rel="noopener">http://localhost:9090/ForwardServlet，查看控制台，发现当请求转发到index.jsp的时候，会经过过滤器的过滤。</a></p><p><img src="16.png" alt></p><h2 id="7-3-两种拦截方式能否共存"><a href="#7-3-两种拦截方式能否共存" class="headerlink" title="7.3 两种拦截方式能否共存"></a>7.3 两种拦截方式能否共存</h2><p>那么有了两种拦截方式，两种拦截方式能否共存呢？答案是：可以的。</p><ol><li><p>在配置文件中添加两个dispatcher标签或者在MethodFilter注解的dispatcherTypes中以数组的形式添加两个拦截方式</p><ul><li>xml方式</li></ul><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>MethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.MethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>MethodFilter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dispatcher</span><span class="token punctuation">></span></span>FORWARD<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dispatcher</span><span class="token punctuation">></span></span>          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dispatcher</span><span class="token punctuation">></span></span>REQUEST<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dispatcher</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>注解方式</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"MethodFilter"</span><span class="token punctuation">,</span>dispatcherTypes <span class="token operator">=</span> <span class="token punctuation">{</span>DispatcherType<span class="token punctuation">.</span>FORWARD<span class="token punctuation">,</span>DispatcherType<span class="token punctuation">.</span>REQUEST<span class="token punctuation">}</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/*"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>浏览器再次访问请求：<a href="http://localhost:9090/ForwardServlet" target="_blank" rel="noopener">http://localhost:9090/ForwardServlet</a></p><p><img src="26.png" alt></p><p>在转发前后都执行了过滤。</p></li></ol><h1 id="第8章-过滤器链"><a href="#第8章-过滤器链" class="headerlink" title="第8章 过滤器链"></a>第8章 过滤器链</h1><h2 id="8-1-什么是过滤器链"><a href="#8-1-什么是过滤器链" class="headerlink" title="8.1 什么是过滤器链"></a>8.1 什么是过滤器链</h2><p>再次回到我们生活中坐地铁或者火车的例子 , 登车的时候需要先经过安检，安检通过了才能检票，检票通过了才能登车 , 其中任意一个没有通过都是登不了车的 , 并且这两个过滤是有顺序。</p><p>同样，我们java代码中，有时需要对同一个请求，进行多次不同业务的过滤，所以我们java代码中需要多个过滤器。只有所有的过滤器都对请求进行了放行，请求才能访问到目标资源，只要多个过滤器中只有一个过滤器不放行请求，那么这个请求都不能够访问到目标资源。多个过滤器组成的一个整体我们称为过滤器链。而且，过滤器链中的过滤器是一个一个的执行的，一个过滤器执行完毕之后，会执行下一个过滤器，后面没有过滤器了，才会访问到目标资源。只要其中一个过滤器没有放行，那么这个过滤器后面的过滤器也都不会执行了。</p><h2 id="8-2-过滤器链中多个过滤器的执行顺序"><a href="#8-2-过滤器链中多个过滤器的执行顺序" class="headerlink" title="8.2 过滤器链中多个过滤器的执行顺序"></a>8.2 过滤器链中多个过滤器的执行顺序</h2><ul><li>在xml配置方式中,过滤器的执行顺序是通过各自的<filter-mapping>标签在web.xml的顺序执行的,谁在上面谁先执行.</filter-mapping></li></ul><ul><li>在注解配置方式中,过滤器的执行顺序是通过过滤器的类名的字符顺 序决定的.</li></ul><h3 id="8-2-1-xml方式代码演示"><a href="#8-2-1-xml方式代码演示" class="headerlink" title="8.2.1 xml方式代码演示"></a>8.2.1 xml方式代码演示</h3><ol><li>新建FilterDemo3过滤器,对路径/demo1进行过滤</li><li>新建FilterDemo4过滤器,对路径/demo1进行过滤</li><li>xml配置</li></ol><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>FilterDemo3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.FilterDemo3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>FilterDemo4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-class</span><span class="token punctuation">></span></span>com.itheima.myfilter.FilterDemo4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>FilterDemo3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/demo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-mapping</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>filter-name</span><span class="token punctuation">></span></span>FilterDemo4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url-pattern</span><span class="token punctuation">></span></span>/demo1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url-pattern</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>filter-mapping</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面这种方式配置的时候 FilterDemo3先执行,然后FilterDemo4执行;将两个filter的<filter-mapping>顺序调整一下,执行的顺序就会相应的做出改变</filter-mapping></p><h3 id="8-2-2-注解方式代码演示"><a href="#8-2-2-注解方式代码演示" class="headerlink" title="8.2.2 注解方式代码演示"></a>8.2.2 注解方式代码演示</h3><ol><li><p>新建BFilterDemo,过滤器,对路径/demo1进行过滤</p></li><li><p>新建CFilterDemo,过滤器,对路径/demo1进行过滤</p><p>执行的时候BFilter先执行,然后才是CFilterDemo;</p><p>将CFilterDemo的类名换成AFilterDemo,就会发现AFilterDemo先执行了,然后才是BFilterDemo执行</p></li></ol><blockquote><p>注意 : 在我们以后开发中 , 过滤器一般都是别人写好的 , 我们只需要配置下即可 , 因为过滤器是别人写好的 , 我们一般不会去修改人家的源代码 , 在类上添加注解 ,所以以后过滤器的配置一般采用xml方式.</p></blockquote><h2 id="8-2-过滤器链的执行流程"><a href="#8-2-过滤器链的执行流程" class="headerlink" title="8.2 过滤器链的执行流程"></a>8.2 过滤器链的执行流程</h2><p><img src="25.png" alt></p><h1 id="第9章-案例：非法字符"><a href="#第9章-案例：非法字符" class="headerlink" title="第9章 案例：非法字符"></a>第9章 案例：非法字符</h1><h2 id="9-1-案例需求"><a href="#9-1-案例需求" class="headerlink" title="9.1 案例需求"></a>9.1 案例需求</h2><p>当用户发出非法言论的时候，提示用户言论非法。</p><h2 id="9-2-案例效果"><a href="#9-2-案例效果" class="headerlink" title="9.2 案例效果"></a>9.2 案例效果</h2><p>1.在表单中输入含有非法字符的言论，点击提交按钮</p><p><img src="21.png" alt></p><p>2.控制台显示如下：</p><p><img src="22.png" alt></p><h2 id="9-3-案例分析"><a href="#9-3-案例分析" class="headerlink" title="9.3 案例分析"></a>9.3 案例分析</h2><p>1.创建一个表单用于发表言论。</p><p>2.创建一个txt文件，其中存入非法字符。</p><p>3.创建一个Filter，拦截请求。在init方法中将txt文件中的非法字符读取到内存中。</p><p>4.获取请求中的参数，对请求的参数进行非法字符的校验。</p><p>5.如果言论中不含有非法字符，就放行。</p><p>6.如果言论中含有非法字符，就拦截，并且提示用户非法言论。</p><h2 id="9-4-实现步骤"><a href="#9-4-实现步骤" class="headerlink" title="9.4 实现步骤"></a>9.4 实现步骤</h2><p>1.创建一个表单，用于发表言论</p><p>form2.jsp代码如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%@</span> <span class="token attr-name">page</span> <span class="token attr-name">contentType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html;charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java<span class="token punctuation">"</span></span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath }/IllegalServlet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        请发表你的言论：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>message<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.创建一个txt文件，存入非法字符</p><p>例如：</p><p><img src="23.png" alt></p><p>3.创建一个servlet用于接受表单提交的内容</p><p>IllegalServlet代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"/IllegalServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/IllegalServlet"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IllegalServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"你的言论发表成功"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.创建一个过滤器，用来拦截请求，过滤请求中发表的言论的非法字符</p><p>IllegalFilter代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>myfilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebFilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//filterName = "IllegalFilter"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IllegalFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//声明一个集合用来保存非法字符库</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>String<span class="token operator">></span> illegalWordsList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig filterConfig<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取非法字符文件的绝对路径</span>        String path <span class="token operator">=</span> filterConfig<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/WEB-INF/classes/IllegalWords.txt"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            InputStreamReader isr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            BufferedReader br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>isr<span class="token punctuation">)</span><span class="token punctuation">;</span>            String line <span class="token operator">=</span> null<span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//将文件中的非法字符读取到内存中</span>            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>line <span class="token operator">=</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span>null <span class="token punctuation">)</span><span class="token punctuation">{</span>                illegalWordsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest servletRequest<span class="token punctuation">,</span> ServletResponse servletResponse<span class="token punctuation">,</span> FilterChain filterChain<span class="token punctuation">)</span> <span class="token keyword">throws</span> IOException<span class="token punctuation">,</span> ServletException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//将ServletRequest和ServletResponse强转成http协议的请求和响应对象</span>        HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span>servletRequest<span class="token punctuation">;</span>        HttpServletResponse response <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletResponse<span class="token punctuation">)</span>servletResponse<span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取请求中的参数</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String message <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"message"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//遍历所有的非法字符，对用户发表的言论进行校验</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>String word<span class="token operator">:</span>illegalWordsList<span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>message<span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>word<span class="token operator">+</span><span class="token string">"====索引："</span><span class="token operator">+</span>message<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>message<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">!=</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"含有非法字符，请重新发表言论"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>        filterChain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>servletRequest<span class="token punctuation">,</span>servletResponse<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第10章-综合案例：解决全站乱码"><a href="#第10章-综合案例：解决全站乱码" class="headerlink" title="第10章 综合案例：解决全站乱码"></a>第10章 综合案例：解决全站乱码</h1><h2 id="10-1-案例需求"><a href="#10-1-案例需求" class="headerlink" title="10.1 案例需求"></a>10.1 案例需求</h2><p>浏览器发出的任何请求，通过过滤器统一处理中文乱码。</p><h2 id="10-2-案例效果"><a href="#10-2-案例效果" class="headerlink" title="10.2 案例效果"></a>10.2 案例效果</h2><p>分别以get方式和post方式提交中文，servlet中不做中文乱码处理，直接获取参数，得到的参数不存在中文乱码问题。</p><h2 id="10-3-案例分析"><a href="#10-3-案例分析" class="headerlink" title="10.3 案例分析"></a>10.3 案例分析</h2><p>1.创建一个过滤器。</p><p>2.因为对所有的请求进行乱码的过滤，所以过滤器的过滤路径配置为/*</p><p>3.针对post请求处理乱码</p><h2 id="10-4-实现步骤"><a href="#10-4-实现步骤" class="headerlink" title="10.4 实现步骤"></a>10.4 实现步骤</h2><p>1.创建一个form.jsp表单，用于测试过滤器解决乱码的功能</p><p><img src="17.png" alt></p><p>2.form.html代码：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>%@</span> <span class="token attr-name">page</span> <span class="token attr-name">contentType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html;charset<span class="token punctuation">=</span>UTF-8<span class="token punctuation">"</span></span> <span class="token attr-name">language</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>java<span class="token punctuation">"</span></span> <span class="token attr-name">%</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${pageContext.request.contextPath }/encoding<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>3.创建一个用于接收表单请求的EncodingServlet.</p><p>EncodingServlet代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EncodingServlet"</span> <span class="token punctuation">,</span> urlPatterns <span class="token operator">=</span> <span class="token string">"/encoding"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EncodingServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取表单提交的参数</span>        String name <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4.创建EncodingFilter用于乱码处理的过滤器</p><p>EncodingFilter代码如下：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>myfilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>*<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebFilter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebFilter</span><span class="token punctuation">(</span>filterName <span class="token operator">=</span> <span class="token string">"EncodingFilter"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/*"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EncodingFilter</span> <span class="token keyword">implements</span> <span class="token class-name">Filter</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doFilter</span><span class="token punctuation">(</span>ServletRequest req<span class="token punctuation">,</span> ServletResponse resp<span class="token punctuation">,</span> FilterChain chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>       <span class="token comment" spellcheck="true">//首先</span>        HttpServletRequest request <span class="token operator">=</span> <span class="token punctuation">(</span>HttpServletRequest<span class="token punctuation">)</span>req<span class="token punctuation">;</span>        resp<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取请求的方式</span>        String method <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"post"</span><span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>method<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//如果是post请求</span>            request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//结束当前方法</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        chain<span class="token punctuation">.</span><span class="token function">doFilter</span><span class="token punctuation">(</span>req<span class="token punctuation">,</span> resp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">init</span><span class="token punctuation">(</span>FilterConfig config<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException <span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>5.浏览器访问form.jsp页面，表单提交方式为post，表单输入中文</p><p><img src="18.png" alt></p><p>6.点击提交按钮，查看控制台，post乱码问题得到解决</p><p><img src="19.png" alt></p><p>7.将表单的提交方式换成get，提交表单，查看控制台没有乱码问题。</p><h1 id="第11章-监听器入门"><a href="#第11章-监听器入门" class="headerlink" title="第11章 监听器入门"></a>第11章 监听器入门</h1><h2 id="11-1-什么是监听器"><a href="#11-1-什么是监听器" class="headerlink" title="11.1 什么是监听器"></a>11.1 什么是监听器</h2><p>在实际生活着，我们很多商场有摄像头，监视着客户的一举一动。如果客户有违法行为，商场可以采取相应的措施。同样，在我们的java程序中，有时也需要监视某些事情，一旦被监视的对象发生相应的变化，我们应该采取相应的操作。这就需要用到java中的监听器。</p><p>web监听器是一种Servlet中的特殊的类，它们能帮助开发者监听web中的特定事件，比如ServletContext,HttpSession,ServletRequest的创建和销毁等。可以在某些动作前后增加处理，实现监控。</p><h2 id="11-2-监听器的使用场景"><a href="#11-2-监听器的使用场景" class="headerlink" title="11.2 监听器的使用场景"></a>11.2 监听器的使用场景</h2><h3 id="11-2-1-系统启动时初始化信息"><a href="#11-2-1-系统启动时初始化信息" class="headerlink" title="11.2.1 系统启动时初始化信息"></a>11.2.1 系统启动时初始化信息</h3><p>ServletContextListenner用来监听ServletContext对象的创建和销毁的。当项目启动的时候，servletContext对象被创建，会调用ServletContextListenner的contextInitialized方法。所以我们可以在此方法中初始化项目需要的信息。</p><blockquote><p>扩展 : 后面学习spring框架的时候,我们会使用到它.</p></blockquote><h3 id="11-2-2-统计在线人数"><a href="#11-2-2-统计在线人数" class="headerlink" title="11.2.2 统计在线人数"></a>11.2.2 统计在线人数</h3><p>我们知道，每当一个用户访问项目的时候，都会创建一个session会话。所以当前session会话被创建，当前在线用户+1，每当session会话被销毁，当前在线用户-1。HttpSessionListener可以用来监听session对象的创建和销毁的。所以可以在HttpSessionListener中的监听session对象创建和销毁的方法中控制在线人数的加减。</p><h2 id="11-3-我的第一个监听器开发步骤"><a href="#11-3-我的第一个监听器开发步骤" class="headerlink" title="11.3 我的第一个监听器开发步骤"></a>11.3 我的第一个监听器开发步骤</h2><p>​    监听器在web开发中使用的比较少,见的机会就更少了,今天我们使用<strong>ServletContextListenner</strong>来带领大家学习下监听器,因为这个监听器是监听器中使用率最高的一个,且监听器的使用方式都差不多.</p><p>​    我们使用这个监听器可以在项目启动和销毁的时候做一些事情,例如,在项目启动的时候加载配置文件.</p><h3 id="11-3-1-ServletContextListener接口的API介绍"><a href="#11-3-1-ServletContextListener接口的API介绍" class="headerlink" title="11.3.1 ServletContextListener接口的API介绍"></a>11.3.1 ServletContextListener接口的API介绍</h3><ol><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span>ServletContextEvent sce<span class="token punctuation">)</span>  监听servletcontext销毁<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span>ServletContextEvent sce<span class="token punctuation">)</span>  监听servletcontext创建<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="11-3-2-使用步骤"><a href="#11-3-2-使用步骤" class="headerlink" title="11.3.2 使用步骤"></a>11.3.2 使用步骤</h3><p>1.创建一个类实现ServletContextListenner接口</p><p>2.给这个类在xml中配置或者添加注解@WebListener</p><p>3.实现ServletContextListenner的contextInitialized和contextDestroyed方法。</p><h3 id="11-3-3-xml配置方式演示"><a href="#11-3-3-xml配置方式演示" class="headerlink" title="11.3.3 xml配置方式演示"></a>11.3.3 xml配置方式演示</h3><ul><li>listener代码如下:</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>listenner<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextEvent<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextListener<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServletContextListenner1</span> <span class="token keyword">implements</span> <span class="token class-name">ServletContextListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span>ServletContextEvent servletContextEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>       System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器启动，servletContext被创建了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span>ServletContextEvent servletContextEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器停止，servletContext被销毁了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>web.xml配置如下</li></ul><pre class="line-numbers language-xml"><code class="language-xml">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>listener-class</span><span class="token punctuation">></span></span>com.itheima.listenner.MyServletContextListenner1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener-class</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>listener</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="11-3-4-注解方式演示"><a href="#11-3-4-注解方式演示" class="headerlink" title="11.3.4 注解方式演示"></a>11.3.4 注解方式演示</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>listenner<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextEvent<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextListener<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebListener<span class="token punctuation">;</span><span class="token annotation punctuation">@WebListener</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServletContextListenner2</span> <span class="token keyword">implements</span> <span class="token class-name">ServletContextListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextInitialized</span><span class="token punctuation">(</span>ServletContextEvent servletContextEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>          System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器启动，servletContext被创建了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//ServletContextEvent 被监听对象的事件源,可以通过它获取被监听对象ServletContext</span>        ServletContext servletContext <span class="token operator">=</span> servletContextEvent<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextDestroyed</span><span class="token punctuation">(</span>ServletContextEvent servletContextEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"服务器停止，servletContext被销毁了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="11-4-自学-ServletContextAttributeListener"><a href="#11-4-自学-ServletContextAttributeListener" class="headerlink" title="11.4 (自学) ServletContextAttributeListener"></a>11.4 (自学) ServletContextAttributeListener</h2><p>作用 : 可以检测ServletContext域中属性的变化. </p><p>具体为:</p><ul><li>将某个属性添加到ServletContext域中<ul><li>ServletContext域中某个属性值被替换</li><li>将某个属性从ServletContext域中移除</li></ul></li></ul><h3 id="11-4-1-API介绍"><a href="#11-4-1-API介绍" class="headerlink" title="11.4.1 API介绍"></a>11.4.1 API介绍</h3><ol><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">attributeAdded</span><span class="token punctuation">(</span>ServletContextAttributeEvent scab<span class="token punctuation">)</span> 监听属性添加到servletcontext中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">attributeRemoved</span><span class="token punctuation">(</span>ServletContextAttributeEvent scab<span class="token punctuation">)</span> 监听属性从servletcontext中移除<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">attributeReplaced</span><span class="token punctuation">(</span>ServletContextAttributeEvent scab<span class="token punctuation">)</span> 监听属性从servletcontext中被替换<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="11-4-2-使用步骤"><a href="#11-4-2-使用步骤" class="headerlink" title="11.4.2 使用步骤"></a>11.4.2 使用步骤</h3><p>1.创建一个类实现ServletContextAttributeListenner接口</p><p>2.给这个类添加注解@WebListener,(也可以使用配置文件的方式,只需要在web.xml中使用listener标签配置一下)</p><p>3.实现ServletContextAttributeListenner接口的方法</p><p>4.创建一个servlet，doGet方法中分别向servletContext对象中添加、替换、删除属性</p><h3 id="11-4-3-案例代码"><a href="#11-4-3-案例代码" class="headerlink" title="11.4.3 案例代码"></a>11.4.3 案例代码</h3><p>MyServletContextAttributeListenner代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>listenner<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextAttributeEvent<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContextAttributeListener<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebListener<span class="token punctuation">;</span><span class="token annotation punctuation">@WebListener</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MyServletContextAttributeListenner</span> <span class="token keyword">implements</span> <span class="token class-name">ServletContextAttributeListener</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attributeAdded</span><span class="token punctuation">(</span>ServletContextAttributeEvent servletContextAttributeEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//获取被监听的对象</span>            ServletContext servletContext <span class="token operator">=</span> servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取被添加到servletContext对象中的属性名</span>            String name <span class="token operator">=</span> servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment" spellcheck="true">//获取被添加到servletContext对象中的属性值</span>            String value <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"被添加到servletContext对象中的属性是："</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attributeRemoved</span><span class="token punctuation">(</span>ServletContextAttributeEvent servletContextAttributeEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取被监听的对象</span>        ServletContext servletContext <span class="token operator">=</span> servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取被移出servletContext对象中的属性名</span>        String name <span class="token operator">=</span> servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取被移出servletContext对象中的属性值</span>        String value <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"被移出servletContext对象中的属性是："</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">attributeReplaced</span><span class="token punctuation">(</span>ServletContextAttributeEvent servletContextAttributeEvent<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取被监听的对象</span>        ServletContext servletContext <span class="token operator">=</span> servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取servletContext对象中被替换的属性名</span>        String name <span class="token operator">=</span> servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取servletContext对象中被替换的属性值</span>        String value <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>servletContextAttributeEvent<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"servletContext对象中的被替换前属性是："</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"="</span><span class="token operator">+</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>创建一个servlet,测试往ServletContext中添加属性,替换属性和删除属性：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>itheima<span class="token punctuation">.</span>servlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ServletDemo"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/servletDemo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletDemo</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        ServletContext servletContext <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//向servletContext对象中添加属性username:zhangsan</span>        servletContext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//替换servletContext对象中的属性username:lisi</span>        servletContext<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"lisi"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//移除servletContext对象中的属性username</span>        servletContext<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 过滤器 </tag>
            
            <tag> 监听器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http综合练习</title>
      <link href="/2019/04/05/2019-04-05-http-zong-he-lian-xi/"/>
      <url>/2019/04/05/2019-04-05-http-zong-he-lian-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="删除选中-amp-条件查询-amp-分页查询"><a href="#删除选中-amp-条件查询-amp-分页查询" class="headerlink" title="删除选中&amp;条件查询&amp;分页查询"></a>删除选中&amp;条件查询&amp;分页查询</h1><h1 id="案例1：删除所选联系人"><a href="#案例1：删除所选联系人" class="headerlink" title="案例1：删除所选联系人"></a>案例1：删除所选联系人</h1><h2 id="1-1-案例需求"><a href="#1-1-案例需求" class="headerlink" title="1.1 案例需求"></a>1.1 案例需求</h2><p> 在展示页面上为每一个联系人添加一个复选框,在页面上添加一个”删除选中”按钮</p><p> 然后勾选需要删除的人员,点击按钮,删除选中人员</p><h2 id="1-2-案例效果"><a href="#1-2-案例效果" class="headerlink" title="1.2 案例效果"></a>1.2 案例效果</h2><p><img src="1.png" alt></p><h2 id="1-3-案例分析"><a href="#1-3-案例分析" class="headerlink" title="1.3 案例分析"></a>1.3 案例分析</h2><p><img src="2.png" alt></p><p>在service中要用到事务,在此我们使用jdbcTemplate提供的一组api,这组api大家知道他们的作用即可.不用记住.</p><h2 id="1-4-案例实现"><a href="#1-4-案例实现" class="headerlink" title="1.4 案例实现"></a>1.4 案例实现</h2><h3 id="1-4-1-实现表头中复选框的全选和全不选效果和表单提交功能"><a href="#1-4-1-实现表头中复选框的全选和全不选效果和表单提交功能" class="headerlink" title="1.4.1 实现表头中复选框的全选和全不选效果和表单提交功能"></a>1.4.1 实现表头中复选框的全选和全不选效果和表单提交功能</h3><blockquote><p>注意 : 做案例之前先复制一份list.jsp,命名为page_list.jsp,为分页案例页面.</p></blockquote><ol><li><p>在表头添加一列,添加复选框添加点击事件</p><pre class="line-numbers language-jsp"><code class="language-jsp">        <tr class="success">            <th><input type="checkbox" id="ckbox" onclick="checkAll()" ></th>            <th>编号</th>            <th>姓名</th>            <th>性别</th>            <th>年龄</th>            <th>籍贯</th>            <th>QQ</th>            <th>邮箱</th>            <th>操作</th>        </tr><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>在所有行外面添加一个表单,给每行添加一个复选框,在最后一行添加删除选中按钮</p><pre class="line-numbers language-jsp"><code class="language-jsp">        <%--添加一个表单,用来提交选中的联系人的id--%>        <form id="formId" action="/day05/deleteChecked" method="post">            <c:forEach var="con" items="${list}">                <tr>                    <td><input type="checkbox" name="cid" value="${con.id}"></td>                    <td>${con.id}</td>                    <td>${con.name}</td>                    <td>${con.sex}</td>                    <td>${con.age}</td>                    <td>${con.address}</td>                    <td>${con.qq}</td>                    <td>${con.email}</td>                    <td><a class="btn btn-default btn-sm" href="/day05/queryById?id=${con.id}">修改</a>&nbsp;<a class="btn btn-default btn-sm" href="/day05/delete?id=${con.id}">删除</a></td>                </tr>            </c:forEach>        </form>        <tr>            <td colspan="9" align="center">                <a class="btn btn-primary" href="添加联系人.html">添加联系人</a>                <%--javascript:void(0)的作用是a标签href属性的跳转--%>                <a class="btn btn-primary" href="javascript:void(0)" onclick="deleteChecked()">删除选中</a>            </td>        </tr><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="3"><li><p>编写事件:</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">function</span> <span class="token function">checkAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取最上面的复选框标签元素(表头的复选框)</span>        <span class="token keyword">var</span> ckbox<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"ckbox"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取下面所有的复选框标签元素</span>        <span class="token keyword">var</span> cids<span class="token operator">=</span>document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">"cid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//遍历获取每个复选框,让其选中状态和表头的复选框状态保持一致 </span>        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>cids<span class="token punctuation">.</span>length<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            cids<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>checked<span class="token operator">=</span>ckbox<span class="token punctuation">.</span>checked<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">function</span> <span class="token function">deleteChecked</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取表单,提交表单</span>       document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"formId"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">submit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="1-4-2-编写servlet"><a href="#1-4-2-编写servlet" class="headerlink" title="1.4.2 编写servlet"></a>1.4.2 编写servlet</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//urlPatterns = "/deleteChecked"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DeleteCheckedServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 1.获取要删除的联系人id</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> cids <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span><span class="token string">"cid"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2.调用service完成删除操作</span>            ContactService contactService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            contactService<span class="token punctuation">.</span><span class="token function">deleteChecked</span><span class="token punctuation">(</span>cids<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 3.成功之后重定向到查询所有的servlet上</span>            response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"/queryAll"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doPost</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4-3-编写service"><a href="#1-4-3-编写service" class="headerlink" title="1.4.3  编写service"></a>1.4.3  编写service</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteChecked</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> cids<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 1.获取连接,开启事务</span>        <span class="token comment" spellcheck="true">//获取数据源</span>        DataSource dataSource <span class="token operator">=</span> JDBCUtils<span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//实例jdbcTemplate</span>        JdbcTemplate jdbcTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//启动事务管理器（获取datasource操作数据库连接对象并绑定到当前线程中）</span>        TransactionSynchronizationManager<span class="token punctuation">.</span><span class="token function">initSynchronization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//从数据源中获取jdbcTemplate操作的当前连接对象</span>        Connection connection <span class="token operator">=</span> DataSourceUtils<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//设置连接不自动提交事务</span>            connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 2.遍历ids,调用dao完成这个删除操作</span>            ContactDao contactDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>String cid <span class="token operator">:</span> cids<span class="token punctuation">)</span> <span class="token punctuation">{</span>               contactDao<span class="token punctuation">.</span><span class="token function">deleteChecked</span><span class="token punctuation">(</span>jdbcTemplate<span class="token punctuation">,</span>cid<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">// 3.若成功,提交事务</span>            connection<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 3.若失败,回滚事务,且通知servlet</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                connection<span class="token punctuation">.</span><span class="token function">rollback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e1<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e1<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">//将异常抛给servlet 通知servlet回滚了</span>            <span class="token keyword">throw</span> e<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">finally</span> <span class="token punctuation">{</span>            <span class="token keyword">try</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//释放当前线程与连接对象的绑定</span>                TransactionSynchronizationManager<span class="token punctuation">.</span><span class="token function">clearSynchronization</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//重置当前连接为自动提交事务</span>                connection<span class="token punctuation">.</span><span class="token function">setAutoCommit</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">SQLException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意: JdbcTemplate提供的这组事务管理的api大家只需要知道他们的作用即可,我们以后在学习spring框架的时候用更好的方式替代.</p></blockquote><h3 id="1-4-4-编写dao"><a href="#1-4-4-编写dao" class="headerlink" title="1.4.4 编写dao"></a>1.4.4 编写dao</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">deleteChecked</span><span class="token punctuation">(</span>JdbcTemplate jdbcTemplate<span class="token punctuation">,</span> String cid<span class="token punctuation">)</span> <span class="token keyword">throws</span>  Exception<span class="token punctuation">{</span>      jdbcTemplate<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string">"delete from contact where id = ?"</span><span class="token punctuation">,</span>cid<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="案例2：条件查询"><a href="#案例2：条件查询" class="headerlink" title="案例2：条件查询"></a>案例2：条件查询</h1><p>分析SQL过程</p><p>SELECT <em> FROM contact<br>SELECT </em> FROM contact WHERE NAME LIKE ‘%三%’<br>SELECT <em> FROM contact WHERE qq LIKE ‘%7%’<br>SELECT </em> FROM contact WHERE NAME LIKE ‘%三%’ AND  qq LIKE ‘%7%’ </p><p>String sql=”SELECT * FROM contact where 1=1”;</p><p>//定义集合,保存参数<br>List<string> list=new ArrayList<string>();</string></string></p><p>if(客户端向服务端传递过来name){</p><p>  sql=sql+”  and name like ? “;<br>  list.add(“%”+name+”%”);</p><p>}</p><p>if(客户端向服务端传递过来qq){</p><p>  sql=sql+”  and qq like ? “;<br>  list.add(“%”+qq+”%”);</p><p>}</p><p>list转换数组<br>templdate.query(sql,new XXX(),list转换数组);</p><h2 id="2-1-案例需求"><a href="#2-1-案例需求" class="headerlink" title="2.1 案例需求"></a>2.1 案例需求</h2><p>在页面上添加两个文本框,人员名称和人员QQ,再添加一个查询按钮,</p><p>点击搜索,去数据库中查询满足条件的人员信息,然后将查询的数据显示在展示页面上</p><h2 id="2-2-案例效果"><a href="#2-2-案例效果" class="headerlink" title="2.2 案例效果"></a>2.2 案例效果</h2><p><img src="4.png" alt></p><h2 id="2-3-案例分析"><a href="#2-3-案例分析" class="headerlink" title="2.3 案例分析"></a>2.3 案例分析</h2><p><img src="5.png" alt></p><h2 id="2-4-案例实现"><a href="#2-4-案例实现" class="headerlink" title="2.4 案例实现"></a>2.4 案例实现</h2><h3 id="2-4-1-修改list-jsp-添加查询表单"><a href="#2-4-1-修改list-jsp-添加查询表单" class="headerlink" title="2.4.1 修改list.jsp,添加查询表单"></a>2.4.1 修改list.jsp,添加查询表单</h3><p>在table中添加一行,放入一个表单,添加一个文本框(名称和QQ)和一个查询按钮</p><pre class="line-numbers language-jsp"><code class="language-jsp"> <table border="1" class="table table-bordered table-hover">        <tr class="success">            <td colspan="9">                <form action="/day05/queryByConditions" method="post">                      <%--value属性用来回显数据--%>                    姓名:<input name="name" value="${name}"> &nbsp;&nbsp;&nbsp;&nbsp;                    QQ:<input name="qq" value="${qq}"> &nbsp;&nbsp;&nbsp;&nbsp;                    <input type="submit" value="查询" class="btn-success">                </form>            </td>        </tr>   <%-- 下面的代码不在粘贴 --%><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-2-编写Servlet代码"><a href="#2-4-2-编写Servlet代码" class="headerlink" title="2.4.2 编写Servlet代码"></a>2.4.2 编写Servlet代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//urlPatterns = "/queryByConditions"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryByConditionsServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//0.处理中文乱码</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//1.获取名称和QQ</span>        String name <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String qq <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"qq"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.调用service完成条件查询操作,返回值为满足条件的联系人list</span>        ContactService contactService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> list <span class="token operator">=</span> contactService<span class="token punctuation">.</span><span class="token function">queryByConditions</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>qq<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3.将list放入request域中,转发到list.jsp</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// 将name和qq放入request域中,用来回显参数</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"qq"</span><span class="token punctuation">,</span>qq<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/list.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doPost</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-3-编写service"><a href="#2-4-3-编写service" class="headerlink" title="2.4.3 编写service"></a>2.4.3 编写service</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> <span class="token function">queryByConditions</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String qq<span class="token punctuation">)</span> <span class="token punctuation">{</span>        ContactDao contactDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> list <span class="token operator">=</span> contactDao<span class="token punctuation">.</span><span class="token function">queryByConditions</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span>qq<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span> <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-4-编写dao"><a href="#2-4-4-编写dao" class="headerlink" title="2.4.4 编写dao"></a>2.4.4 编写dao</h3><pre class="line-numbers language-java"><code class="language-java">     <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> <span class="token function">queryByConditions</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String qq<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1.基础sql:</span>        <span class="token comment" spellcheck="true">//也可以使用StringBuilder</span>        String sql <span class="token operator">=</span> <span class="token string">"select * from contact where 1=1"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2.判断条件是否为空 若不为空拼接sql 添加参数</span>        <span class="token comment" spellcheck="true">// 创建一个list用来存放参数</span>        List<span class="token operator">&lt;</span>String<span class="token operator">></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 判断用户人员</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>name <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> name<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            sql  <span class="token operator">+=</span> <span class="token string">" and name like ?"</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"%"</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 判断用户QQ</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>qq <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> qq<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            sql <span class="token operator">+=</span> <span class="token string">" and qq like ?"</span><span class="token punctuation">;</span>            params<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"%"</span><span class="token operator">+</span>qq<span class="token operator">+</span><span class="token string">"%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">// 3.执行sql查询,返回list</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> list <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Contact<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>params<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-5-查询效果-参数回显"><a href="#2-4-5-查询效果-参数回显" class="headerlink" title="2.4.5 查询效果,参数回显"></a>2.4.5 查询效果,参数回显</h3><p><img src="7.png" alt></p><p>需要在servlet中把参数name和qq放入request域中,然后在list.jsp上获取参数值(数据回显)</p><h1 id="案例3：分页查询"><a href="#案例3：分页查询" class="headerlink" title="案例3：分页查询"></a>案例3：分页查询</h1><h2 id="3-1-案例需求"><a href="#3-1-案例需求" class="headerlink" title="3.1 案例需求"></a>3.1 案例需求</h2><p>若联系人比较多的时候,在首页上显示的数据特别多,导致页面特别长.</p><p>为了给用户更好的体验我们需要进行分页显示联系人信息.</p><h2 id="3-2-案例效果"><a href="#3-2-案例效果" class="headerlink" title="3.2 案例效果"></a>3.2 案例效果</h2><p><img src="9.png" alt></p><p><img src="10.png" alt></p><h2 id="3-2-相关知识"><a href="#3-2-相关知识" class="headerlink" title="3.2 相关知识"></a>3.2 相关知识</h2><h3 id="3-2-1-mysql中的分页"><a href="#3-2-1-mysql中的分页" class="headerlink" title="3.2.1 mysql中的分页"></a>3.2.1 mysql中的分页</h3><pre class="line-numbers language-sql"><code class="language-sql">mysql中通过<span class="token keyword">limit</span>关键字实现分页格式：    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> 表 <span class="token keyword">limit</span> ?<span class="token punctuation">,</span>?<span class="token punctuation">;</span>    参数<span class="token number">1</span>：开始索引 startIndex ，默认值：<span class="token number">0</span>。必须是正数。    参数<span class="token number">2</span>：每页显示的条数 pageSize例如：    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products <span class="token keyword">limit</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#第1页，每页显示5条。</span>    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products <span class="token keyword">limit</span> <span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#第2页，每页显示5条。</span>    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products <span class="token keyword">limit</span> <span class="token number">10</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#第3页，每页显示5条。</span>    <span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> products <span class="token keyword">limit</span> <span class="token punctuation">(</span>n<span class="token number">-1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">#第n页，每页显示5条。</span>规律 :    开始索引 <span class="token operator">=</span> <span class="token punctuation">(</span>页码 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> 每页显示的条数<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-1-PageBean的编写"><a href="#3-2-1-PageBean的编写" class="headerlink" title="3.2.1 PageBean的编写"></a>3.2.1 PageBean的编写</h3><p>做一个简单的分页展示 , 最终页面上需要有:</p><ol><li>当前页数据</li><li>当前页</li><li>总页数</li><li>每页显示的条数</li><li>总记录数</li></ol><p>为了方便各层之间传递数据以及方便把数据转发给jsp页面,我们一般会将这5个参数封装成一个对象(PageBean)</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 分页bean * @param &lt;T> */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PageBean</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> List<span class="token operator">&lt;</span>T<span class="token operator">></span> data<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//当前页数据列表,需要通过limit查询</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> curPage<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//当前页,已知数据,从页面上传递过来</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> totalPage<span class="token punctuation">;</span>     <span class="token comment" spellcheck="true">//总页数,通过总记录数和每页显示的条数计算出来</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> count<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//总记录数,需要通过count(*)查询</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//每页显示多少条数据,已知数据</span>    <span class="token comment" spellcheck="true">/**     * curPage和pageSize是已知的数据,通过一个带参构造器方便创建pageBean对象     * @param curPage 当前页     * @param pageSize 每页显示多少条数据     */</span>    <span class="token keyword">public</span> <span class="token function">PageBean</span><span class="token punctuation">(</span><span class="token keyword">int</span> curPage<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>curPage <span class="token operator">=</span> curPage<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize <span class="token operator">=</span> pageSize<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取limit中开始的索引     * @return 分页开始索引     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getStartIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>curPage <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token keyword">this</span><span class="token punctuation">.</span>pageSize<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 获取总页数     *     通过总记录数和每页显示的条数相除计算出来,     *          若两者可以整除,总页数就是商     *          若两者不可以整除,总页数就是商+1     * @return 总页数     */</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getTotalPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span>count<span class="token operator">*</span><span class="token number">1.0</span><span class="token operator">/</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">//getter和setter方法不再粘贴</span>      <span class="token comment" spellcheck="true">//...</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-3-案例分析"><a href="#3-3-案例分析" class="headerlink" title="3.3 案例分析"></a>3.3 案例分析</h2><p><img src="8.png" alt></p><h2 id="3-4-案例实现"><a href="#3-4-案例实现" class="headerlink" title="3.4 案例实现"></a>3.4 案例实现</h2><h3 id="3-4-1-访问链接"><a href="#3-4-1-访问链接" class="headerlink" title="3.4.1 访问链接"></a>3.4.1 访问链接</h3><pre class="line-numbers language-java"><code class="language-java">http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">9090</span><span class="token operator">/</span>day05<span class="token operator">/</span>queryByPage<span class="token operator">?</span>curPage<span class="token operator">=</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="3-4-2-编写Servlet代码"><a href="#3-4-2-编写Servlet代码" class="headerlink" title="3.4.2 编写Servlet代码"></a>3.4.2 编写Servlet代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//urlPatterns = "/queryByPage"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryByPageServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1.获取curPage,设置pageSize</span>        <span class="token keyword">int</span> curPage <span class="token operator">=</span> Integer<span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"curPage"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> pageSize <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.调用service完成分页查询,参数为curPage和pageSize,返回值为PageBean对象</span>        ContactService contactService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PageBean<span class="token operator">&lt;</span>Contact<span class="token operator">></span> pageBean <span class="token operator">=</span> contactService<span class="token punctuation">.</span><span class="token function">queryByPage</span><span class="token punctuation">(</span>curPage<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3.将pageBean放入request域中,转发到page_list.jsp</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"pb"</span><span class="token punctuation">,</span>pageBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/page_list.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doPost</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4-3-编写service"><a href="#3-4-3-编写service" class="headerlink" title="3.4.3 编写service"></a>3.4.3 编写service</h3><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">public</span> PageBean<span class="token operator">&lt;</span>Contact<span class="token operator">></span> <span class="token function">queryByPage</span><span class="token punctuation">(</span><span class="token keyword">int</span> curPage<span class="token punctuation">,</span> <span class="token keyword">int</span> pageSize<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//1.创建pageBean对象</span>        PageBean<span class="token operator">&lt;</span>Contact<span class="token operator">></span> pageBean <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageBean</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>curPage<span class="token punctuation">,</span>pageSize<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//2.调用dao,查询当前页数据,设置给pageBean</span>        ContactDao contactDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> data <span class="token operator">=</span> contactDao<span class="token punctuation">.</span><span class="token function">queryByPage</span><span class="token punctuation">(</span>pageBean<span class="token punctuation">)</span><span class="token punctuation">;</span>        pageBean<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//3.调用dao,查询总记录数,设置给pageBean</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> contactDao<span class="token punctuation">.</span><span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pageBean<span class="token punctuation">.</span><span class="token function">setCount</span><span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//4.返回pageBean</span>        <span class="token keyword">return</span> pageBean<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4-4-编写dao"><a href="#3-4-4-编写dao" class="headerlink" title="3.4.4 编写dao"></a>3.4.4 编写dao</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//查询总记录数</span><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token string">"select count(*) from contact"</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> count <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForObject</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token comment" spellcheck="true">// 分页查询</span><span class="token keyword">public</span> List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> <span class="token function">queryByPage</span><span class="token punctuation">(</span>PageBean pageBean<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token string">"select * from contact limit ?,?"</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> list <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>Contact<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pageBean<span class="token punctuation">.</span><span class="token function">getStartIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>pageBean<span class="token punctuation">.</span><span class="token function">getPageSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> list<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4-5-修改page-list-jsp页面"><a href="#3-4-5-修改page-list-jsp页面" class="headerlink" title="3.4.5 修改page_list.jsp页面"></a>3.4.5 修改page_list.jsp页面</h3><p>在做删除案例之前复制的list.jsp,重命名为page_list.jsp</p><h4 id="导入分页组件"><a href="#导入分页组件" class="headerlink" title="导入分页组件"></a>导入分页组件</h4><pre class="line-numbers language-jsp"><code class="language-jsp">//复制bootstrap的分页组件,粘贴到table的结束标签的下面<nav>    <ul class="pagination">        <%-- 上一页 --%>        <li class="disabled">            <a href="#" >                <span>&laquo;</span>            </a>        </li>           <%-- 页码显示区 --%>        <li class="active"><a href="#">1</a></li>        <li><a href="#">2</a></li>        <li><a href="#">3</a></li>        <li><a href="#">4</a></li>          <%-- 上一页 --%>        <li>            <a href="#">                <span>&raquo;</span>            </a>        </li>    </ul></nav><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="完善分页组件"><a href="#完善分页组件" class="headerlink" title="完善分页组件"></a>完善分页组件</h4><p>步骤如下:</p><ol><li>通过\&lt;c:forEach&gt;先展示所有页码,遍历的时候判断是否是当前页<ul><li>若是当前页,不加超链接</li><li>若不是当前页,添加超链接</li></ul></li><li>完成上一页功能,通过\&lt;c:if&gt;判断是否是首页<ul><li>若是首页,不加超链接</li><li>若不是首页,添加超链接,跳转到当前页-1</li></ul></li><li>完成下一页功能,通过\&lt;c:if&gt;判断是否是尾页<ul><li>若是尾页,不加超链接</li><li>若不是尾页,添加超链接,跳转到当前页+1</li></ul></li></ol><p>代码如下:</p><pre class="line-numbers language-jsp"><code class="language-jsp"><nav class="text-center">    <ul class="pagination">        <%--上一页--%>        <%--判断当前页是否是首页--%>        <c:if test="${pb.curPage == 1}">            <%--若是首页,不可点--%>            <li class="disabled">               <a href="javascript:void(0)" >                    <span>&laquo;</span>               </a>            </li>        </c:if>        <c:if test="${pb.curPage != 1}">            <%--若不是首页,添加超链接--%>            <li>                <a href="/day05/queryByPage?curPage=${pb.curPage-1}" >                    <span>&laquo;</span>                </a>            </li>        </c:if>        <%--展示所有页码--%>        <c:forEach begin="1" end="${pb.totalPage}" var="n">            <%--判断是否是当前页--%>            <c:if test="${pb.curPage == n}">                <%--是当前页,当前页码不可点--%>                <li class="active"><span>${n}</span></li>            </c:if>            <c:if test="${pb.curPage != n}">                <%--不是当前页,点击跳转--%>                <li><a href="/day05/queryByPage?curPage=${n}">${n}</a></li>            </c:if>        </c:forEach>        <%--下一页--%>        <%--判断当前页是否是尾页--%>        <c:if test="${pb.curPage == pb.totalPage}">            <%--若是尾页,不可点--%>            <li class="disabled">                <a href="javascript:void(0)" >                    <span>&raquo;</span>                </a>            </li>        </c:if>        <c:if test="${pb.curPage != pb.totalPage}">            <%--若不是尾页,添加超链接--%>            <li>                <a href="/day05/queryByPage?curPage=${pb.curPage+1}" >                    <span>&raquo;</span>                </a>            </li>        </c:if>    </ul></navspan aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML基础 </tag>
            
            <tag> 综合练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http中jsp&amp;el&amp;jstl</title>
      <link href="/2019/03/27/2019-03-27-http-zhong-jsp-el-jstl/"/>
      <url>/2019/03/27/2019-03-27-http-zhong-jsp-el-jstl/</url>
      
        <content type="html"><![CDATA[<h1 id="jsp-amp-el-amp-jstl"><a href="#jsp-amp-el-amp-jstl" class="headerlink" title="jsp&amp;el&amp;jstl"></a>jsp&amp;el&amp;jstl</h1><h1 id="第1章-jsp入门"><a href="#第1章-jsp入门" class="headerlink" title="第1章 jsp入门"></a>第1章 jsp入门</h1><h2 id="1-1-jsp简介"><a href="#1-1-jsp简介" class="headerlink" title="1.1 jsp简介"></a>1.1 jsp简介</h2><h3 id="1-1-1-jsp的概念"><a href="#1-1-1-jsp的概念" class="headerlink" title="1.1.1 jsp的概念"></a>1.1.1 jsp的概念</h3><p>​    HTML代码与Java代码共同存在，其中，HTML代码用来实现网页中静态内容的显示，Java代码用来实现网页中动态内容的显示。为了与传统HTML有所区别，JSP文件的扩展名为.jsp。</p><p>​    JSP技术所开发的Web应用程序是基于Java的，本质上就是一个Servlet , 它可以用一种简捷而快速的方法从Java程序生成Web页面，其使用上具有如下几点特征：</p><ul><li><strong>跨平台：</strong>由于JSP是基于Java语言的，它可以使用Java API，所以它也是跨平台的，可以应用于不同的系统中，如Windows、Linux等。当从一个平台移植到另一个平台时，JSP和JavaBean的代码并不需要重新编译，这是因为Java的字节码是与平台无关的，这也应验了Java语言“一次编译，到处运行”的特点</li><li><strong>业务代码相分离：</strong>在使用JSP技术开发Web应用时，可以将界面的开发与应用程序的开发分离开。开发人员使用HTML来设计界面，使用JSP标签和脚本来动态生成页面上的内容。在服务器端，JSP引擎（或容器，本书中指Tomcat）负责解析JSP标签和脚本程序，生成所请求的内容，并将执行结果以HTML页面的形式返回到浏览器。</li><li><strong>组件重用：</strong>JSP中可以使用JavaBean编写业务组件，也就是使用一个JavaBean类封装业务处理代码或者作为一个数据存储模型，在JSP页面中，甚至在整个项目中，都可以重复使用这个JavaBean，同时，JavaBean也可以应用到其他Java应用程序中。</li><li><strong>预编译：</strong>预编译就是在用户第一次通过浏览器访问JSP页面时，服务器将对JSP页面代码进行编译，并且仅执行一次编译。编译好的代码将被保存，在用户下一次访问时，会直接执行编译好的代码。这样不仅节约了服务器的CPU资源，还大大的提升了客户端的访问速度。</li></ul><h3 id="1-1-2-为什么要诞生JSP"><a href="#1-1-2-为什么要诞生JSP" class="headerlink" title="1.1.2 为什么要诞生JSP"></a>1.1.2 为什么要诞生JSP</h3><p>​    我们先来设计一个场景，完成一个需求：往页面输出一个表格.</p><p>​    要实现此需求,我们就需要在servlet中使用response对象，向页面输出内容，需要拼接html标签，这个操作十分麻烦。</p><p>​    因此我们需要一个解决方案，那么这个解决方案应该满足什么条件呢？</p><p>​        <strong>应该有以下两点：</strong></p><p>​            <strong>1 必须不再拼接html，使用字符串向页面输出代码</strong></p><p>​            <strong>2 需要保留servlet可以通过代码，动态生成网页的功能</strong></p><p>​    <strong>满足这两点的正式我们要学习的JSP技术：它可以简化html书写，同时动态生成页面。</strong></p><h3 id="1-1-3-jsp初体验"><a href="#1-1-3-jsp初体验" class="headerlink" title="1.1.3 jsp初体验"></a>1.1.3 jsp初体验</h3><h4 id="1-1-3-1-创建jsp文件"><a href="#1-1-3-1-创建jsp文件" class="headerlink" title="1.1.3.1 创建jsp文件"></a>1.1.3.1 创建jsp文件</h4><p><img src="C:/Users/Administrator/Desktop/HTML/day31_jsp_el_jstl/day31_jsp_el_jstl/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/005.png" alt></p><h4 id="1-1-3-2-编写jsp代码"><a href="#1-1-3-2-编写jsp代码" class="headerlink" title="1.1.3.2 编写jsp代码"></a>1.1.3.2 编写jsp代码</h4><pre class="line-numbers language-jsp"><code class="language-jsp"><html><head>  <title>测试jsp</title></head><body>   <%     Date date = new Date();     SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:dd");     String curTime = dateFormat.format(date);     request.setAttribute("curTime",curTime);    %>    当前系统时间：<span style="color: red"><%=request.getAttribute("curTime") %></span></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="1-1-3-3-访问jsp"><a href="#1-1-3-3-访问jsp" class="headerlink" title="1.1.3.3 访问jsp"></a>1.1.3.3 访问jsp</h4><p>在地址栏输入jsp文件名称访问即可。</p><p>效果：</p><p><img src="C:/Users/Administrator/Desktop/HTML/day31_jsp_el_jstl/day31_jsp_el_jstl/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/temp6.png" alt></p><h2 id="1-2-jsp的执行流程"><a href="#1-2-jsp的执行流程" class="headerlink" title="1.2 jsp的执行流程"></a>1.2 jsp的执行流程</h2><p>​    通过上面的jsp初体验, 我们看到jsp中既可以编写java代码也可以直接编写html代码，相对servlet更加方便，为啥jsp中可以直接使用request对象呢 ? 接下来我们来看下它的执行流程</p><p><img src="006.png" alt></p><p>依据上图的流程，在本地找到了生成的java文件，其中一部分内容如下图：</p><p><img src="017.png" alt></p><p>​    我们可以看到当前的jsp文件被翻译成了一个类，这个类继承HttpJspBase类，那么这个HttpJspBase类又是什么？</p><p>​    注意jsp的翻译有服务器完成，HttpJspBase类一定也是tomcat服务器的内容，顺着org.apache.jasper.runtime.HttpJspBase这个类全名，我们找到这个类的源码：</p><p><img src="018.png" alt></p><p>​    通过观察源码，<strong>我们发现JSP其实底层就是一个servlet</strong>。通过观察源码，我们发现我们刚刚编写的所有代码都在该Servlet里面的service方法内部。</p><p><img src="temp7.png" alt></p><p><strong>总结：</strong></p><p>​    <strong>1.</strong> jsp之所以可以编写html代码，其实本质上也是类似我们使用Servlet直接输出的。</p><p>​    <strong>2.</strong> jsp之所以能够直接使用request对象，是因为我们自己编写的代码全部都落入到了service方法内部，在service方法内部一开始就已经声明了request,response,session,application(ServletContext)等对象了,这些对象成为之jsp内置对象。</p><h2 id="1-3-jsp的基本语法"><a href="#1-3-jsp的基本语法" class="headerlink" title="1.3 jsp的基本语法"></a>1.3 jsp的基本语法</h2><h3 id="1-3-1-jsp注释"><a href="#1-3-1-jsp注释" class="headerlink" title="1.3.1 jsp注释"></a>1.3.1 jsp注释</h3><h4 id="1-3-1-1-JSP注释格式"><a href="#1-3-1-1-JSP注释格式" class="headerlink" title="1.3.1.1 JSP注释格式"></a>1.3.1.1 JSP注释格式</h4><p>​        &lt;%– jsp注释  –%&gt;</p><h4 id="1-3-1-2-JSP注释的使用"><a href="#1-3-1-2-JSP注释的使用" class="headerlink" title="1.3.1.2 JSP注释的使用"></a>1.3.1.2 JSP注释的使用</h4><p><strong>jsp文件</strong>：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">%</span>@ page contentType<span class="token operator">=</span><span class="token string">"text/html;charset=UTF-8"</span> language<span class="token operator">=</span><span class="token string">"java"</span> <span class="token operator">%</span><span class="token operator">></span><span class="token operator">&lt;</span>html<span class="token operator">></span>  <span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>注释<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>  <span class="token operator">&lt;</span>body<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span><span class="token operator">-</span>这个是html注释<span class="token operator">--</span><span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">%</span><span class="token operator">--</span> 这个是jsp的注释<span class="token operator">--</span><span class="token operator">%</span><span class="token operator">></span>  <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>访问页面测试：没有任何内容显示，那么也就说html与jsp注释都生效, 但是点击查看源码的时候我们发现我们只能查看到html的注释，jsp的注释根本就看不到。 </p><p><img src="temp5.png" alt></p><p><strong>总结</strong></p><p>​    jsp的注释不会显示在源码上，更加安全 , 所以在jsp页面中推荐使用jsp的注释。</p><h3 id="1-3-2-jsp书写java代码的三种方式"><a href="#1-3-2-jsp书写java代码的三种方式" class="headerlink" title="1.3.2 jsp书写java代码的三种方式"></a>1.3.2 jsp书写java代码的三种方式</h3><p>​    在之前的演示中，我的jsp已经可以向页面输出一个html内容，但是这个还不够，jsp应该还要有像servlet一样可以通过代码，动态生成网页的功能。servlet是使用java代码生成动态网页的，因此，接下来，我们要学习如何在jsp页面使用java代码。</p><h4 id="1-3-2-1-脚本片段"><a href="#1-3-2-1-脚本片段" class="headerlink" title="1.3.2.1 脚本片段"></a>1.3.2.1 脚本片段</h4><h5 id="1-3-2-1-1-脚本片段格式"><a href="#1-3-2-1-1-脚本片段格式" class="headerlink" title="1.3.2.1.1  脚本片段格式"></a>1.3.2.1.1  脚本片段格式</h5><p>​    格式：&lt;%  Java代码片段  %&gt;</p><p>​    jsp文件内容：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>书写java代码的三种方式</title></head><body>    <%-- 脚本片段 --%>    <% int x = 10; %></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    翻译成java文件：    <img src="011.png" alt></p><h5 id="1-3-2-1-2-脚本片段作用"><a href="#1-3-2-1-2-脚本片段作用" class="headerlink" title="1.3.2.1.2 脚本片段作用"></a>1.3.2.1.2 脚本片段作用</h5><pre><code>    在jsp翻译后的_jspService方法中，嵌入java代码</code></pre><h5 id="1-3-2-1-3-脚本片段使用注意事项"><a href="#1-3-2-1-3-脚本片段使用注意事项" class="headerlink" title="1.3.2.1.3 脚本片段使用注意事项"></a>1.3.2.1.3 脚本片段使用注意事项</h5><p>​    脚本片段可以分开书写，最终是组合在一起的，示例：</p><p>​    脚本片段内容：</p><pre class="line-numbers language-jsp"><code class="language-jsp">  <% for(int j = 0 ; j < 5 ;j++){%>        Hello World!!!<br>  <%}%>< code></%}%><><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>​    效果：</p><pre class="line-numbers language-java"><code class="language-java">Hello World<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>Hello World<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>Hello World<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>Hello World<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span>Hello World<span class="token operator">!</span><span class="token operator">!</span><span class="token operator">!</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    java源码:</p><p><img src="019.png" alt></p><h4 id="1-3-2-2-脚本声明"><a href="#1-3-2-2-脚本声明" class="headerlink" title="1.3.2.2 脚本声明"></a>1.3.2.2 脚本声明</h4><h5 id="1-3-2-2-1-脚本声明格式"><a href="#1-3-2-2-1-脚本声明格式" class="headerlink" title="1.3.2.2.1 脚本声明格式"></a>1.3.2.2.1 脚本声明格式</h5><p>​    格式：&lt;%!  书写Java代码  %&gt;</p><p>​    jsp文件内容：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>书写java代码的三种方式</title></head><body>    <%! int i = 0 ;%></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    翻译成java文件：    <img src="008.png" alt></p><pre><code>总结：脚本声明书写的java代码会翻译在类的成员位置上。</code></pre><h5 id="1-3-2-2-2-脚本声明作用"><a href="#1-3-2-2-2-脚本声明作用" class="headerlink" title="1.3.2.2.2 脚本声明作用"></a>1.3.2.2.2 脚本声明作用</h5><pre><code>在类的成员位置上声明方法和变量</code></pre><h4 id="1-3-2-3-脚本表达式"><a href="#1-3-2-3-脚本表达式" class="headerlink" title="1.3.2.3 脚本表达式"></a>1.3.2.3 脚本表达式</h4><h5 id="1-3-2-3-1-脚本表达式格式"><a href="#1-3-2-3-1-脚本表达式格式" class="headerlink" title="1.3.2.3.1 脚本表达式格式"></a>1.3.2.3.1 脚本表达式格式</h5><p>​    格式：&lt;%= 表达式 %&gt;</p><p>​    jsp文件内容：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>书写java代码的三种方式</title></head><body>    <%-- 脚本表达式 --%>    <%= "传智播客" %></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    翻译成java文件：在_jspService方法中，找到了我们书写的内容</p><p><img src="009.png" alt></p><p>​    上图的中的out对象是什么？</p><p>​    答：out对象的类型是JspWriter，通过查阅JAVAEE文档发现其父类是java.io.Writer，是一个Writer 字符流。</p><p>​    页面输出：</p><p>​    <img src="010.png" alt></p><pre><code>    总结：脚本表达式书写的java代码，会翻译到java文件中的_jspService方法内，被out.print输出到页面。</code></pre><h5 id="1-3-2-3-2-脚本表达式作用"><a href="#1-3-2-3-2-脚本表达式作用" class="headerlink" title="1.3.2.3.2 脚本表达式作用"></a>1.3.2.3.2 脚本表达式作用</h5><pre><code>    代替response向页面输出内容</code></pre><h1 id="第2章-EL表达式"><a href="#第2章-EL表达式" class="headerlink" title="第2章 EL表达式"></a>第2章 EL表达式</h1><h2 id="2-1-EL表达式的基本概述"><a href="#2-1-EL表达式的基本概述" class="headerlink" title="2.1 EL表达式的基本概述"></a>2.1 EL表达式的基本概述</h2><p>​    想要知道什么是EL表达式，它为了解决什么问题而诞生，我们先通过一个场景来了解一下：</p><p>​    现在有一个需求：在jsp使用java代码在request中设置四个数据（10 20 30 40 ）的向页面输出（10+20+（30-40））计算结果，以我们现在的技术去实现会是这样实现：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%-- 在jsp设置(request)四个数据（10 20 30 40 ）的向页面输出（10+20+（30-40））计算结果 --%><%    request.setAttribute("num1", 10);    request.setAttribute("num2", 20);    request.setAttribute("num3", 30);    request.setAttribute("num4", 40);%>java代码输出：<%= (Integer)request.getAttribute("num1") +        (Integer)request.getAttribute("num2") +        ( (Integer)request.getAttribute("num3") - (Integer)request.getAttribute("num4"))%></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    从上面的代码中我们发现，使用之前的脚本片段来完成实在太过复杂和繁琐，一个简单的算术计算不应该如此艰难的完成。</p><p>​    因此我们需要一个新的技术，来简化java代码的一些操作，这个就是我们需要学习的EL表达式技术。</p><p>​    <strong>EL全称：Expression Language</strong></p><p>​    <strong>作用：代替jsp中脚本表达式的功能，简化对java代码的操作。</strong></p><h2 id="2-2-EL表达式的格式和作用"><a href="#2-2-EL表达式的格式和作用" class="headerlink" title="2.2 EL表达式的格式和作用"></a>2.2 EL表达式的格式和作用</h2><ol><li><strong>EL表达式的格式</strong>：${表达式内容}</li><li><strong>EL表达式的作用</strong>： 主要是从域对象中查找指定的数据。</li></ol><h2 id="2-3-EL表达式的基本使用"><a href="#2-3-EL表达式的基本使用" class="headerlink" title="2.3 EL表达式的基本使用"></a>2.3 EL表达式的基本使用</h2><h3 id="2-3-1-EL获得容器（域对象）的数据"><a href="#2-3-1-EL获得容器（域对象）的数据" class="headerlink" title="2.3.1 EL获得容器（域对象）的数据"></a>2.3.1 EL获得容器（域对象）的数据</h3><p>​    再上面的案例中，我们使用原来的方式获取数据十分麻烦，接下来我们使用EL表达式的方式完成上面的需求：</p><p>jsp演示代码：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%-- 在jsp设置(request)四个数据（10 20 30 40 ）的向页面输出（10+20+（30-40））计算结果 --%><%    request.setAttribute("num1", 10);    request.setAttribute("num2", 20);    request.setAttribute("num3", 30);    request.setAttribute("num4", 40);%>使用EL表达式输出：${num1 + num2 + (num3 - num4)}</body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    显而易见的使用EL表达式我们获取数字，并执行运算都方便了许多。在上面这个案例中我们是从request中获取数据，那么我们可以获取其他域对象(容器)中的数据吗？我们来测试一下：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body>    <%--        在三个域对象中存入同名的数据（request、session、servletcontext）        然后再使用EL表达式获取。    --%>    <%        request.setAttribute("addr","上海");        request.getSession().setAttribute("addr","北京");          //session.setAttribute("addr","北京");          request.getSession().getServletContext().setAttribute("addr","广州");          //application.setAttribute("addr","广州");    %>    ${addr}</body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    测试的结果出来后，我们会发现，获取出来的是——上海。设置三个容器的数据都是同名数据，这造成了我们获取数据的时候，单单使用名称已经无法区分所以数据，那么怎么解决这个问题呢？如何才能从指定的容器中获取数据呢？</p><p>​    我们需要在获取数据的时候指定相关的容器：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%--    在三个容器中存入数据（request、session、servletcontext）    然后再使用EL表达式获取。--%><%    request.setAttribute("addr","上海");    request.getSession().setAttribute("addr","北京");      //session.setAttribute("addr","北京");    request.getSession().getServletContext().setAttribute("addr","广州");    //application.setAttribute("addr","广州");%>指定从request容器获取数据：${requestScope.addr}<br>指定从session容器获取数据：${sessionScope.addr}<br>指定从servletcontext容器获取数据：${applicationScope.addr}<br></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    那么我们之前没有指定容器是如何获取数据的呢？其实${addr}在获取容器的时候，默认按request、session、servletcontext顺序从获取数据，只要获取到就不再往下找了，所以上一个案例一直获取到是上海。</p><h3 id="2-3-2-EL获取和解析复杂数据"><a href="#2-3-2-EL获取和解析复杂数据" class="headerlink" title="2.3.2 EL获取和解析复杂数据"></a>2.3.2 EL获取和解析复杂数据</h3><p>​    上面的案例我们在获取数据的时候，都是简单的字符串，接下来我们来获取一些复杂数据，复杂数据特指：数组，集合（List   Map）和JavaBean。</p><h4 id="2-3-2-1-获取数组"><a href="#2-3-2-1-获取数组" class="headerlink" title="2.3.2.1 获取数组"></a>2.3.2.1 获取数组</h4><p>servlet代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Person<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/el1"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ELServlet1</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//准备需要解析的数据</span>        <span class="token comment" spellcheck="true">//数组</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> arr <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">}</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"arr"</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/4.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>jsp代码：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%--获取数组数据--%>${arr[4]}<br></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-2-2-获取数组注意事项"><a href="#2-3-2-2-获取数组注意事项" class="headerlink" title="2.3.2.2 获取数组注意事项"></a>2.3.2.2 获取数组注意事项</h4><p>​    <strong>获取数组中某一数据，使用中括号添加角标即可</strong></p><h4 id="2-3-2-3-获取集合（list-map）"><a href="#2-3-2-3-获取集合（list-map）" class="headerlink" title="2.3.2.3 获取集合（list map）"></a>2.3.2.3 获取集合（list map）</h4><p>servlet准备数据：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Person<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/el2"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ELServlet2</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//准备需要解析的数据</span>        <span class="token comment" spellcheck="true">//list集合</span>        List list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"北京传智播客"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"上海传智播客"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"广州传智播客"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//map集合</span>        Map map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"language1"</span><span class="token punctuation">,</span> <span class="token string">"java"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"language2"</span><span class="token punctuation">,</span> <span class="token string">"go"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"language3"</span><span class="token punctuation">,</span> <span class="token string">"c#"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"aa.bb.cc"</span><span class="token punctuation">,</span> <span class="token string">"python"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"map"</span><span class="token punctuation">,</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/5.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>jsp代码：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%--获取list集合数据--%>获取list集合：${list}<br>获取list集合某一个数据：${list[0]}<br>获取map集合：${map}<br>获取map集合某一数据：${map.language1}<br>获取map集合特殊key数据：${map["aa.bb.cc"]}<br></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-2-4-获取集合注意事项"><a href="#2-3-2-4-获取集合注意事项" class="headerlink" title="2.3.2.4 获取集合注意事项"></a>2.3.2.4 获取集合注意事项</h4><ol><li>设置map集合数据的key，尽量不要出现”.“</li><li>凡是在EL表达式中使用”.“可以获取的数据，使用”[]”也可以获取</li></ol><h4 id="2-3-2-5-获取JavaBean数据"><a href="#2-3-2-5-获取JavaBean数据" class="headerlink" title="2.3.2.5 获取JavaBean数据"></a>2.3.2.5 获取JavaBean数据</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Person<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>HashMap<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ELServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/el3"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ELServlet3</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//准备需要解析的数据</span>        <span class="token comment" spellcheck="true">//JavaBean</span>        Person p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"p"</span><span class="token punctuation">,</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/6.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>jsp:</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body>获取JavaBean数据：${p}<br>获取JavaBean指定属性的数据：${p.name} ${p.age}<br>使用中括号，获取JavaBean指定属性的数据：${p["name"]} ${p["age"]}<br></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-2-6-获取JavaBean数据注意事项"><a href="#2-3-2-6-获取JavaBean数据注意事项" class="headerlink" title="2.3.2.6 获取JavaBean数据注意事项"></a>2.3.2.6 获取JavaBean数据注意事项</h4><ol><li>JavaBean数据获取类似获取map集合的方式，可以使用”.“获取数据的地方，都可以使用”[]”获取数据。</li><li>如果el表达式获取不到数据，页面没有显示内容，不是显示”null“</li><li>el在获取JavaBean的数据时候，底层调用的是getXXX方法。</li></ol><h3 id="2-3-3-EL执行运算"><a href="#2-3-3-EL执行运算" class="headerlink" title="2.3.3 EL执行运算"></a>2.3.3 EL执行运算</h3><p>​    EL不仅可以用来获取数据，之前的案例我们还看到了可以执行运算，因此，接下来我们要学习EL执行运算相关的知识点，它包括了算术运算、逻辑运算、比较运算、empty运算符、三元运算</p><h4 id="2-3-3-1-支持算术运算符："><a href="#2-3-3-1-支持算术运算符：" class="headerlink" title="2.3.3.1 支持算术运算符：+  -  *  /  %"></a>2.3.3.1 支持算术运算符：+  -  *  /  %</h4><p>jsp演示：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%    request.setAttribute("x",3);    request.setAttribute("y",4);    request.setAttribute("z","5");%>${x + y}<br>${x - y}<br>${x * y}<br>${x / y}<br>${x % y}<br><%--注意事项:    1 在EL中，只要是数字就能执行运算，EL在执行计算的时候，默认，将所有数据转换成Long类型    2 在EL中，如果在一个算式中有数据不存在，那么这个数据不参与运算，不报错继续执行。--%>${x+y+z}<br>${x+y+z+a}<br></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-3-2-算术运算注意事项"><a href="#2-3-3-2-算术运算注意事项" class="headerlink" title="2.3.3.2 算术运算注意事项"></a>2.3.3.2 算术运算注意事项</h4><ol><li>在EL中，只要是数字就能执行运算，EL在执行计算的时候，默认，将所有数据转换成Long类型</li><li>在EL中，如果在一个算式中有数据不存在，那么这个数据不参与运算，不报错继续执行。</li></ol><h4 id="2-3-3-3-逻辑运算符"><a href="#2-3-3-3-逻辑运算符" class="headerlink" title="2.3.3.3 逻辑运算符"></a>2.3.3.3 逻辑运算符</h4><p>下图展示了EL可以支持的逻辑运算，注意：英文和符号效果一致，推荐使用符号</p><p><img src="01.png" alt></p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%    request.setAttribute("flag", true);    request.setAttribute("info", false);%>${flag && info }${flag || info }${!info }</body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-3-4-逻辑运算符注意事项"><a href="#2-3-3-4-逻辑运算符注意事项" class="headerlink" title="2.3.3.4 逻辑运算符注意事项"></a>2.3.3.4 逻辑运算符注意事项</h4><p>​    注意：逻辑运算中的异或”^”EL不支持。</p><h4 id="2-3-3-5-比较运算"><a href="#2-3-3-5-比较运算" class="headerlink" title="2.3.3.5 比较运算"></a>2.3.3.5 比较运算</h4><p>下图展示了EL支持的比较运算符，注意：英文和符号效果一致，推荐使用符号</p><p><img src="02.png" alt></p><p>jsp代码演示：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%    request.setAttribute("x",3);    request.setAttribute("y",4);%>${x < y }${x <= y }${x > y }${x >= y }${x == y }${x != y }</body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-3-6-比较运算注意事项"><a href="#2-3-3-6-比较运算注意事项" class="headerlink" title="2.3.3.6 比较运算注意事项"></a>2.3.3.6 比较运算注意事项</h4><p>​    注意：使用比较运算符要保证数据是存在的并且是可比较的。</p><h4 id="2-3-3-7-empty运算符和三元运算符"><a href="#2-3-3-7-empty运算符和三元运算符" class="headerlink" title="2.3.3.7 empty运算符和三元运算符"></a>2.3.3.7 empty运算符和三元运算符</h4><p>​    empty运算符是用来判断当前获取的数据是否为空或者当前获取的集合是否没有任何数据，三元运算符和java的三元运算符功能一致。</p><p>jsp：</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%--再当前jsp导入ArrayList--%><%@ page import="java.util.ArrayList" %><%@ page contentType="text/html;charset=UTF-8" language="java" %><html><head>    <title>Title</title></head><body><%    request.setAttribute("str",null);    request.setAttribute("list",new ArrayList<>());%>${empty str}<br>${empty list}<br>${str == null? "数据为空":str}<br></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="2-3-3-8-empty运算符注意事项"><a href="#2-3-3-8-empty运算符注意事项" class="headerlink" title="2.3.3.8 empty运算符注意事项"></a>2.3.3.8 empty运算符注意事项</h4><p>​    注意：以上的empty运算符案例中，empty运算符可以和逻辑运算符组合使用。</p><p>​    例如：${not empty str}表示str不为空，返回true。</p><h1 id="第3章-JSTL的核心标签库使用"><a href="#第3章-JSTL的核心标签库使用" class="headerlink" title="第3章 JSTL的核心标签库使用"></a>第3章 JSTL的核心标签库使用</h1><h2 id="3-1-jstl标签的基本概述"><a href="#3-1-jstl标签的基本概述" class="headerlink" title="3.1 jstl标签的基本概述"></a>3.1 jstl标签的基本概述</h2><h3 id="3-1-1-jstl的由来"><a href="#3-1-1-jstl的由来" class="headerlink" title="3.1.1 jstl的由来"></a>3.1.1 jstl的由来</h3><p>​    接下来我们要学习一个新的知识点，那么首先，我们要知道他的由来：</p><p><img src="03.png" alt></p><h3 id="3-1-2-jstl的概述"><a href="#3-1-2-jstl的概述" class="headerlink" title="3.1.2 jstl的概述"></a>3.1.2 jstl的概述</h3><p>​    从JSP 1.1规范开始JSP就支持使用自定义标签，使用自定义标签大大降低了JSP页面的复杂度，同时增强了代码的重用性，因此自定义标签在WEB应用中被广泛使用。许多WEB应用厂商都开发出了自己的一套标签库提供给用户使用，这导致出现了许多功能相同的标签，令网页制作者无所适从，不知道选择哪一家的好。为了解决这个问题，Apache Jakarta小组归纳汇总了那些网页设计人员经常遇到的问题，开发了一套用于解决这些常用问题的自定义标签库，这套标签库被SUN公司定义为标准标签库（The JavaServer Pages Standard Tag Library），简称JSTL。使用JSTL可以解决用户选用不同WEB厂商的自定义标签时的困惑，JSP规范同时也允许WEB容器厂商按JSTL标签库的标准提供自己的实现，以获取最佳性能。</p><p><img src="04.png" alt></p><p>JSTL标签库提供5大功能（了解）：</p><ol><li>core：jstl的核心标签库。（目前还在使用）</li><li>fmt：格式化（国际化）的标签（使用较少，对页面显示数据，格式化，现在都交给前端去做）</li><li>functions：jstl中提供对字符串操作的函数库(不再使用，建议在数据显示在页面之前，在后台程序中，先格式化好字符串，然后直接显示，不再页面做处理，如果有前端，交给前端处理（javascript  解析json格式数据）</li><li>sql：jstl提供的在jsp页面上书写sql，操作数据库，目前已经不再（不允许）使用（jsp开发模式二，这个开发模式不允许，在页面操作数据库）</li><li>xml：jstl操作xml文件的。目前已经不再使用（页面传递数据，页面解析数据，使用json格式字符串代替xml）</li></ol><p>因此我们需要知道的只有jstl的核心标签库。</p><h3 id="3-1-2-jstl核心标签库列表"><a href="#3-1-2-jstl核心标签库列表" class="headerlink" title="3.1.2 jstl核心标签库列表"></a>3.1.2 jstl核心标签库列表</h3><table><thead><tr><th>标签名称</th><th>作用</th></tr></thead><tbody><tr><td><strong>\&lt;c:if&gt;</strong></td><td><em><em>用户java代码if(){}语句功能 </em></em> 重点掌握</td></tr><tr><td><strong>\&lt;c:forEach&gt;</strong></td><td><strong>用户代替java代码for循环语句</strong> 重点掌握</td></tr><tr><td>\&lt;c:choose&gt;</td><td>用于指定多个条件选择的组合边界，它必须与&lt;c:when&gt;和&lt;c:otherwise&gt;标签一起使用</td></tr><tr><td>\&lt;c:out&gt;</td><td>通常用于输出一段文本内容到客户端浏览器</td></tr><tr><td>\&lt;c:set&gt;</td><td>用于设置各种Web域中的属性</td></tr><tr><td>\&lt;c:remove&gt;</td><td>用于删除各种Web域中的属性</td></tr><tr><td>\&lt;c:catch&gt;</td><td>用于捕获嵌套在标签体中的内容抛出的异常</td></tr><tr><td>\&lt;c:forTokens&gt;</td><td>用户迭代操作String字符</td></tr><tr><td>\&lt;c:param&gt;</td><td>给请求路径添加参数</td></tr><tr><td>\&lt;c:url&gt;</td><td>重写url，在请求路径添加sessionid</td></tr><tr><td>\&lt;c:import&gt;</td><td>用于在JSP页面中导入一个URL地址指向的资源内容</td></tr><tr><td>\&lt;c:redirect&gt;</td><td>用于将当前的访问请求转发或重定向到其他资源</td></tr></tbody></table><blockquote><p>注意 : jsp本质上也是servlet,以前也会在jsp中处理业务逻辑,现在jsp的主要作用就是数据的展示,所以我们需要掌握在页面上遍历和判断的操作.</p></blockquote><h2 id="3-2-jstl标签的安装"><a href="#3-2-jstl标签的安装" class="headerlink" title="3.2 jstl标签的安装"></a>3.2 jstl标签的安装</h2><p>​    我们知道了jstl可以帮助我们解决jsp页面出现java和提高java在页面的重用性问题，那么接下来，我们需要的是学习使用jstl。</p><h3 id="3-2-1-导入jar包"><a href="#3-2-1-导入jar包" class="headerlink" title="3.2.1 导入jar包"></a>3.2.1 导入jar包</h3><pre class="line-numbers language-java"><code class="language-java">javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>jsp<span class="token punctuation">.</span>jstl<span class="token punctuation">.</span>jarjstl<span class="token operator">-</span>impl<span class="token punctuation">.</span>jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="3-2-2-使用taglib指令在jsp页面导入要使用的jstl标签库"><a href="#3-2-2-使用taglib指令在jsp页面导入要使用的jstl标签库" class="headerlink" title="3.2.2 使用taglib指令在jsp页面导入要使用的jstl标签库"></a>3.2.2 使用taglib指令在jsp页面导入要使用的jstl标签库</h3><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在jsp书写”&lt;c:”，看到如下提示，说明安装成功：</p><p><img src="005.png" alt></p><h2 id="3-3-常用的jstl标签"><a href="#3-3-常用的jstl标签" class="headerlink" title="3.3 常用的jstl标签"></a>3.3 常用的jstl标签</h2><p>​    jstl的核心标签内容有很多，现在目前还常用的标签只有if、foreach标签，接下来我们学习下。</p><h3 id="3-3-1-if标签"><a href="#3-3-1-if标签" class="headerlink" title="3.3.1 if标签"></a>3.3.1 if标签</h3><h4 id="3-3-1-1-if标签作用"><a href="#3-3-1-1-if标签作用" class="headerlink" title="3.3.1.1 if标签作用"></a>3.3.1.1 if标签作用</h4><p>​    <strong>起到java代码的判断的作用</strong></p><h4 id="3-3-1-2-if标签属性介绍"><a href="#3-3-1-2-if标签属性介绍" class="headerlink" title="3.3.1.2 if标签属性介绍"></a>3.3.1.2 if标签属性介绍</h4><p><img src="06.png" alt></p><p>​    <strong>test：判断是否执行标签内的内容（true:执行标签中的内容，false:不执行）。</strong></p><p>​    <strong>var：用来保存test属性的结果（使用var属性给他取个名字），这个结果可以保存到指定的容器中。</strong></p><p>​    <strong>scope：指定保存数据的容器。</strong></p><p>​    <strong>注：是否支持EL表达式指的是 是否可以在属性中书写EL表达式。</strong></p><h4 id="3-3-1-3-if标签注意事项"><a href="#3-3-1-3-if标签注意事项" class="headerlink" title="3.3.1.3 if标签注意事项"></a>3.3.1.3 if标签注意事项</h4><p>​    <strong>if标签，相当于java中的if(){}语句，而不是if(){}else{}语句</strong></p><p>​    <strong>按照属性的数据类型传入数据，否则报错</strong></p><h4 id="3-3-1-4-if标签演示"><a href="#3-3-1-4-if标签演示" class="headerlink" title="3.3.1.4 if标签演示"></a>3.3.1.4 if标签演示</h4><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %><html><head>    <title>Title</title></head><body>    <%-- 获取test属性的值,将其以flag为属性名,test中计算的值为属性,放入session中 --%>    <c:if test="${ 3>4 }" scope="session" var="flag">        测试test标签    </c:if>      <br/>      在页面上判断:3是否大于4,若页面上能显示"测试test标签",证明test的返回值为true;test中表达式的运算结果为:${session.flag}</body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-3-2-foreach标签"><a href="#3-3-2-foreach标签" class="headerlink" title="3.3.2 foreach标签"></a>3.3.2 foreach标签</h3><h4 id="3-3-2-1-foreach标签作用"><a href="#3-3-2-1-foreach标签作用" class="headerlink" title="3.3.2.1 foreach标签作用"></a>3.3.2.1 foreach标签作用</h4><p>​    <strong>起到java代码的for循环作用</strong></p><h4 id="3-3-2-2-foreach标签属性介绍"><a href="#3-3-2-2-foreach标签属性介绍" class="headerlink" title="3.3.2.2 foreach标签属性介绍"></a>3.3.2.2 foreach标签属性介绍</h4><p><img src="07.png" alt></p><p><strong>var：在不循环对象的时候，保存的是控制循环的变量；在循环对象的时候，保存的是被循环对象中的元素</strong></p><p><strong>items：指定要循环的对象</strong></p><p><strong>varStatus：保存了当前循环过程中的信息（循环的开始、结束、步长、次数等）</strong></p><p><strong>begin：设置循环的开始</strong></p><p><strong>end：设置循环的结束</strong></p><p><strong>step：设置步长——间隔几次循环，执行一次循环体中的内容</strong></p><h4 id="3-3-2-3-foreach标签演示"><a href="#3-3-2-3-foreach标签演示" class="headerlink" title="3.3.2.3 foreach标签演示"></a>3.3.2.3 foreach标签演示</h4><p>​    演示foreach循环标签的时候我们分开两种情况：不循环对象和循环对象。</p><p>​    我们先来看不循环对象的时候：</p><h5 id="3-3-2-3-1-foreach不循环对象"><a href="#3-3-2-3-1-foreach不循环对象" class="headerlink" title="3.3.2.3.1 foreach不循环对象"></a>3.3.2.3.1 foreach不循环对象</h5><p>begin、end、step 三属性的演示：设置循环开始、结束和步长。</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %><html><head>    <title>Title</title></head><body><%-- 演示foreach标签 --%><%    for (int i = 1; i <= 5; i++) {    }%><%--begin="1" int i = 1;end="5"   i<=5;step="6" 步长，控制循环，间隔几次循环，执行一次循环体中的内容step="1" 1 2 3 4 5  M M M M Mstep="2" 12 34 5    M M Mstep="3" 123 45     M Mstep="4" 1234 5     M Mstep="5" 12345      M--%><c:forEach begin="1" end="5" step="1" >    M</c:forEach></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>var属性演示：在不循环对象的时候，相当于将for循环中的循环变量i，每次都记录下来</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %><html><head>    <title>Title</title></head><body><%-- 演示foreach标签 --%><%    for (int i = 1; i <= 5; i++) {    }%><%--var 属性在不循环对象的时候，相当于将for循环中的循环变量i，每次都记录下来。--%><c:forEach begin="11" end="15" step="1" var="info">    ${info}</c:forEach></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>varStatus属性演示：保存了当前循环过程中的信息</p><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %><html><head>    <title>Title</title></head><body><%-- 演示foreach标签 --%><%--varStatus :保存了当前循环过程中的信息，信息包括以下内容：  1          public java.lang.Integer getBegin()           返回为标签设置的begin属性的值，如果没有设置begin属性则返回null  2        public int getCount()          返回当前已循环迭代的次数  3        public java.lang.Object getCurrent()          返回当前迭代到的元素对象  4        public java.lang.Integer getEnd()          返回为标签设置的end属性的值，如果没有设置end属性则返回null  5        public int getIndex()          返回当前迭代的索引号  6        public java.lang.Integer getStep()          返回为标签设置的step属性的值，如果没有设置step属性则返回null  7        public boolean isFirst()          返回当前是否是第一次迭代操作  8        public boolean isLast()          返回当前是否是最后一次迭代操作--%><c:forEach begin="11" end="15" step="1" var="info" varStatus="sta">    <td>${sta.index}</td>    <td>${sta.count}</td>    <td>${sta.first}</td>    <td>${sta.last}</td><br></c:forEach></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>接下来我们在来看foreach如何循环对象</p><h5 id="3-3-2-3-2-foreach循环对象（数组、list、map）"><a href="#3-3-2-3-2-foreach循环对象（数组、list、map）" class="headerlink" title="3.3.2.3.2 foreach循环对象（数组、list、map）"></a>3.3.2.3.2 foreach循环对象（数组、list、map）</h5><pre class="line-numbers language-jsp"><code class="language-jsp"><%--import="java.util.*"导入java.util下的内容，给当前jsp使用--%><%@ page contentType="text/html;charset=UTF-8" import="java.util.*" language="java" %><%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %><html><head>    <title>Title</title></head><body><%--演示循环数组--%><%    int[] arr = {666,888,999,1024};    request.setAttribute("arr", arr);%><%-- var在循环对象的时候，临时保存被循环到元素 --%><c:forEach items="${arr }" var="num">${num }</c:forEach><hr><%    List list = new ArrayList();    list.add("卡奴");    list.add("兰恩");    list.add("云娜");    request.setAttribute("list", list);%><c:forEach items="${list }" var="wind">    ${wind }</c:forEach><hr><%    Map map = new HashMap();    map.put("ms1", "简历");    map.put("ms2", "身份证");    map.put("ms3", "学历证明");    map.put("ms4", "体检报告");    request.setAttribute("map", map);%><c:forEach items="${map }" var="entry">    ${entry.key }    ${entry.value }</c:forEach></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第4章-MVC模式和三层架构"><a href="#第4章-MVC模式和三层架构" class="headerlink" title="第4章  MVC模式和三层架构"></a>第4章  MVC模式和三层架构</h1><h2 id="4-1-MVC设计模式"><a href="#4-1-MVC设计模式" class="headerlink" title="4.1 MVC设计模式"></a>4.1 MVC设计模式</h2><p>MVC设计模式： Model-View-Controller简写。</p><p>MVC是软件工程中的一种软件架构模式，它是一种<strong>分离业务逻辑</strong>与<strong>显示界面</strong>的设计方法。它把软件系统分为三个基本部分：模型（Model）、视图（View）和控制器（Controller）。</p><ul><li>控制器Controller：对请求进行处理，负责请求转发；</li><li>视图View：界面设计人员进行图形界面设计；</li><li>模型Model：编写程序应用的功能（实现算法等等）、数据库管理；</li></ul><p>​    MVC可对程序的后期维护和扩展提供了方便，并且使程序某些部分的重用提供了方便。而且MVC也使程序简化，更加直观。</p><p>​    注意，MVC不是Java的特有的，几乎现在所有B/S结构的软件都采用了MVC设计模式。</p><h2 id="4-2-JSP开发模式"><a href="#4-2-JSP开发模式" class="headerlink" title="4.2 JSP开发模式"></a>4.2 JSP开发模式</h2><p>​    当SUN公司推出JSP后，同时也提供相应的开发模式，JavaWeb经历了JSP Model1 第一代，JSPModel2第二代，JSP Model 3 三个时期。</p><p>###4.2.1.JSP Model1 第一代</p><p>​    JSP Model1是JavaWeb早期的模型，它适合小型Web项目，开发成本低！Model1第一代时期，服务器端只有JSP页面，所有的操作都在JSP页面中，连访问数据库的API也在JSP页面中完成。也就是说，所有的东西都在一起，对后期的维护和扩展极为不利。</p><p><img src="temp1.png" alt></p><h3 id="4-2-2-JSP-Model1-第二代"><a href="#4-2-2-JSP-Model1-第二代" class="headerlink" title="4.2.2 JSP Model1 第二代"></a>4.2.2 JSP Model1 第二代</h3><p>​    JSP Model1第二代有所改进，把业务逻辑的内容放到了JavaBean中，而JSP页面负责显示以及请求调度的工作。虽然第二代比第一代好了些，但还让JSP做了过多的工作，JSP中把视图工作和请求调度（控制器）的工作耦合在一起了。</p><p><img src="temp2.png" alt>     </p><h3 id="4-2-3-JSP-Model-2"><a href="#4-2-3-JSP-Model-2" class="headerlink" title="4.2.3 JSP Model 2"></a>4.2.3 JSP Model 2</h3><p>Model2使用到的技术有：Servlet、JSP、JavaBean。Model2 是MVC设计模式在Java语言的具体体现。</p><ul><li><p>JSP：视图层，用来与用户打交道。负责接收用来的数据，以及显示数据给用户；</p></li><li><p>Servlet：控制层，负责找到合适的模型对象来处理业务逻辑，转发到合适的视图；</p></li><li><p>JavaBean：模型层，完成具体的业务工作，例如：转账等。</p></li></ul><p><img src="temp3.png" alt></p><h2 id="4-3-三层架构"><a href="#4-3-三层架构" class="headerlink" title="4.3 三层架构"></a>4.3 三层架构</h2><p>​    JSP模式是理论基础，但实际开发中，我们常将服务器端程序，根据逻辑进行分层。一般比较常见的是分三层，我们称为：经典三层体系架构。三层分别是：表示层、业务逻辑层、数据访问层。</p><ul><li>表示层：又称为 web层，与浏览器进行数据交互的。</li><li>业务逻辑层：又称为service层，专门用于处理业务数据的。</li><li>数据访问层：又称为dao层，与数据库进行数据交换的。将数据库的一条记录与JavaBean进行对应。</li></ul><p><img src="temp4.png" alt></p><p>在我们开发的时候一般是通过包结果来体现三层架构的,三层架构包命名一般如下：</p><ul><li><p>简单版</p><p>cn.itcast             公司域名倒写</p><p>cn.itcast.dao         dao层</p><p>cn.itcast.service        service层</p><p>cn.itcast.web.servlet     web层</p><p>cn.itcast.domain         JavaBean</p><p>cn.itcast.utils         工具</p></li></ul><hr><ul><li><p>完整版</p><p>cn.itcast                     公司域名倒写</p><p>cn.itcast.xxx                     项目名称</p><p>cn.itcast.xxx.yyy                 子模块</p><p>cn.itcast.xxx.yyy.dao             子模块dao层接口</p><p>cn.itcast.xxx.yyy.dao.impl        子模块dao层实现类</p><p>cn.itcast.xxx.yyy.service        子模块service层接口</p><p>cn.itcast.xxx.yyy.service.impl    子模块service层实现类</p><p>cn.itcast.xxx.yyy.domain        子模块JavaBean (子模块yyy可省略)</p><p>cn.itcast.xxx.yyy.web.servlet    子模块web层，servlet</p><p>cn.itcast.xxx.yyy.web.filter        子模块web层，filter</p><p>cn.itcast.xxx.utils                 工具</p><p>cn.itcast.xxx.exception         自定义异常</p><p>cn.itcast.xxx.constant             常量</p></li></ul><h1 id="第5章-使用三层架构和MCV模式完成用户显示列表案例"><a href="#第5章-使用三层架构和MCV模式完成用户显示列表案例" class="headerlink" title="第5章 使用三层架构和MCV模式完成用户显示列表案例"></a>第5章 使用三层架构和MCV模式完成用户显示列表案例</h1><h2 id="5-1-案例需求"><a href="#5-1-案例需求" class="headerlink" title="5.1 案例需求"></a>5.1 案例需求</h2><p>​    使用三层架构和MVC模式开发代码，完成用户显示列表功能。</p><h2 id="5-2-案例效果"><a href="#5-2-案例效果" class="headerlink" title="5.2 案例效果"></a>5.2 案例效果</h2><p><img src="09.png" alt></p><h2 id="5-3-案例分析"><a href="#5-3-案例分析" class="headerlink" title="5.3 案例分析"></a>5.3 案例分析</h2><p><img src="10.png" alt></p><h2 id="5-4-实现步骤"><a href="#5-4-实现步骤" class="headerlink" title="5.4 实现步骤"></a>5.4 实现步骤</h2><h3 id="5-4-1-导入页面"><a href="#5-4-1-导入页面" class="headerlink" title="5.4.1 导入页面"></a>5.4.1 导入页面</h3><pre class="line-numbers language-jsp"><code class="language-jsp"><%@ page contentType="text/html;charset=UTF-8" language="java" %><!DOCTYPE html><!-- 网页使用的语言 --><html lang="zh-CN"><head>    <!-- 指定字符集 -->    <meta charset="utf-8">    <!-- 使用Edge最新的浏览器的渲染方式 -->    <meta http-equiv="X-UA-Compatible" content="IE=edge">    <!-- viewport视口：网页可以根据设置的宽度自动进行适配，在浏览器的内部虚拟一个容器，容器的宽度与设备的宽度相同。    width: 默认宽度与设备的宽度相同    initial-scale: 初始的缩放比，为1:1 -->    <meta name="viewport" content="width=device-width, initial-scale=1">    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->    <title>Bootstrap模板</title>    <!-- 1. 导入CSS的全局样式 -->    <link href="css/bootstrap.min.css" rel="stylesheet">    <!-- 2. jQuery导入，建议使用1.9以上的版本 -->    <script src="js/jquery-2.1.0.min.js"></script>    <!-- 3. 导入bootstrap的js文件 -->    <script src="js/bootstrap.min.js"></script>    <style type="text/css">        td, th {            text-align: center;        }    </style></head><body><div class="container">    <h3 style="text-align: center">显示所有联系人</h3>    <table border="1" class="table table-bordered table-hover">        <tr class="success">            <th>编号</th>            <th>姓名</th>            <th>性别</th>            <th>年龄</th>            <th>籍贯</th>            <th>QQ</th>            <th>邮箱</th>            <th>操作</th>        </tr>        <tr>            <td>1</td>            <td>张三</td>            <td>男</td>            <td>20</td>            <td>广东</td>            <td>44444222</td>            <td>zs@qq.com</td>            <td><a class="btn btn-default btn-sm" href="修改联系人.html">修改</a>&nbsp;<a class="btn btn-default btn-sm" href="修改联系人.html">删除</a></td>        </tr>        <tr>            <td>2</td>            <td>张三</td>            <td>男</td>            <td>20</td>            <td>广东</td>            <td>44444222</td>            <td>zs@qq.com</td>            <td><a class="btn btn-default btn-sm" href="修改联系人.html">修改</a>&nbsp;<a class="btn btn-default btn-sm" href="修改联系人.html">删除</a></td>        </tr>        <tr>            <td>3</td>            <td>张三</td>            <td>男</td>            <td>20</td>            <td>广东</td>            <td>44444222</td>            <td>zs@qq.com</td>            <td><a class="btn btn-default btn-sm" href="修改联系人.html">修改</a>&nbsp;<a class="btn btn-default btn-sm" href="修改联系人.html">删除</a></td>        </tr>        <tr>            <td>4</td>            <td>张三</td>            <td>男</td>            <td>20</td>            <td>广东</td>            <td>44444222</td>            <td>zs@qq.com</td>            <td><a class="btn btn-default btn-sm" href="修改联系人.html">修改</a>&nbsp;<a class="btn btn-default btn-sm" href="修改联系人.html">删除</a></td>        </tr>        <tr>            <td>5</td>            <td>张三</td>            <td>男</td>            <td>20</td>            <td>广东</td>            <td>44444222</td>            <td>zs@qq.com</td>            <td><a class="btn btn-default btn-sm" href="修改联系人.html">修改</a>&nbsp;<a class="btn btn-default btn-sm" href="修改联系人.html">删除</a></td>        </tr>        <tr>            <td colspan="8" align="center"><a class="btn btn-primary" href="添加联系人.html">添加联系人</a></td>        </tr>    </table></div></body></html><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-4-2-导入页面相关的资源文件"><a href="#5-4-2-导入页面相关的资源文件" class="headerlink" title="5.4.2 导入页面相关的资源文件"></a>5.4.2 导入页面相关的资源文件</h3><p>复制今天资料文件夹/案例原型下的三个文件夹到web根路径：</p><pre><code>cssfontsjs</code></pre><h3 id="5-4-3-导入jar包、配置文件、实体类和工具类"><a href="#5-4-3-导入jar包、配置文件、实体类和工具类" class="headerlink" title="5.4.3 导入jar包、配置文件、实体类和工具类"></a>5.4.3 导入jar包、配置文件、实体类和工具类</h3><ol><li><p>导入jar包</p></li><li><p>配置文件:druid-config.properties</p><pre><code>driverClass:com.mysql.jdbc.DriverjdbcUrl:jdbc:mysql:///day05username:rootpassword:root</code></pre></li></ol><ol start="3"><li><p>实体类</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Contact</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> String sex<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>    <span class="token keyword">private</span> String address<span class="token punctuation">;</span>    <span class="token keyword">private</span> String qq<span class="token punctuation">;</span>    <span class="token keyword">private</span> String email<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getSex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setSex</span><span class="token punctuation">(</span>String sex<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAddress</span><span class="token punctuation">(</span>String address<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>address <span class="token operator">=</span> address<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getQq</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> qq<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setQq</span><span class="token punctuation">(</span>String qq<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>qq <span class="token operator">=</span> qq<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getEmail</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> email<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setEmail</span><span class="token punctuation">(</span>String email<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>email <span class="token operator">=</span> email<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Contact{"</span> <span class="token operator">+</span>                <span class="token string">"id="</span> <span class="token operator">+</span> id <span class="token operator">+</span>                <span class="token string">", name='"</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", sex='"</span> <span class="token operator">+</span> sex <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", age="</span> <span class="token operator">+</span> age <span class="token operator">+</span>                <span class="token string">", address='"</span> <span class="token operator">+</span> address <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", qq='"</span> <span class="token operator">+</span> qq <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">", email='"</span> <span class="token operator">+</span> email <span class="token operator">+</span> <span class="token string">'\''</span> <span class="token operator">+</span>                <span class="token string">'}'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="4"><li><p>工具类</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ResourceBundle<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> DruidDataSource dc <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">DruidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">{</span>        ResourceBundle bundle <span class="token operator">=</span> ResourceBundle<span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"druid-config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String driverClass <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driverClass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String jdbcUrl <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"jdbcUrl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String username <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span>driverClass<span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>jdbcUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>        dc<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>        <span class="token keyword">return</span> dc<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> DataSource <span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> dc<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="5-4-4-编写servlet代码"><a href="#5-4-4-编写servlet代码" class="headerlink" title="5.4.4 编写servlet代码"></a>5.4.4 编写servlet代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Contact<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>service<span class="token punctuation">.</span>ContactService<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/queryAll"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">QueryAllServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取联系人数据</span>        ContactService contactService <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> list <span class="token operator">=</span> contactService<span class="token punctuation">.</span><span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将联系人数据转发到页面展示</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"list"</span> <span class="token punctuation">,</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/list.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-4-5-编写service代码"><a href="#5-4-5-编写service代码" class="headerlink" title="5.4.5 编写service代码"></a>5.4.5 编写service代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>ContactDao<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Contact<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ContactService</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> ContactDao contactDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ContactDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> <span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> contactDao<span class="token punctuation">.</span><span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-4-6-编写dao代码"><a href="#5-4-6-编写dao代码" class="headerlink" title="5.4.6 编写dao代码"></a>5.4.6 编写dao代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>Contact<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JDBCUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>RowMapper<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>ResultSet<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ContactDao</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> JdbcTemplate template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>JDBCUtils<span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> <span class="token function">queryAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token string">"select * from contact"</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>Contact<span class="token operator">></span> query <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">RowMapper</span><span class="token operator">&lt;</span>Contact<span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token annotation punctuation">@Override</span>            <span class="token keyword">public</span> Contact <span class="token function">mapRow</span><span class="token punctuation">(</span>ResultSet rs<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>                Contact contact <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setId</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setSex</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"sex"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string">"age"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setAddress</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"address"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setQq</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"qq"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                contact<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span>rs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"email"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>contact<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> contact<span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> query<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSP </tag>
            
            <tag> EL </tag>
            
            <tag> JSTL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>cookie与session</title>
      <link href="/2019/03/25/2019-03-25-cookie-yu-session/"/>
      <url>/2019/03/25/2019-03-25-cookie-yu-session/</url>
      
        <content type="html"><![CDATA[<h1 id="Cookie和Session"><a href="#Cookie和Session" class="headerlink" title="Cookie和Session"></a>Cookie和Session</h1><h1 id="第1章-会话的基本概念"><a href="#第1章-会话的基本概念" class="headerlink" title="第1章 会话的基本概念"></a>第1章 会话的基本概念</h1><h2 id="1-1-什么是会话"><a href="#1-1-什么是会话" class="headerlink" title="1.1 什么是会话"></a>1.1 什么是会话</h2><p>​    在日常生活中，从拨通电话到挂断电话之间的一连串的你问我答的过程就是一个会话。Web应用中的会话过程类似于生活中的打电话过程，它指的是一个客户端（浏览器）与Web服务器之间连续发生的一系列请求和响应过程，例如，一个用户在某网站上的整个购物过程就是一个会话。</p><p>​    在打电话过程中，通话双方会有通话内容，同样，在客户端与服务器端交互的过程中，也会产生一些数据。例如，用户甲和乙分别登录了购物网站，甲购买了一个Nokia手机，乙购买了一个Ipad，当这两个用户结账时，Web服务器需要对用户甲和乙的信息分别进行保存。在前面章节讲解的域对象中，HttpServletRequest对象和ServletContext对象都可以对数据进行保存，但是这两个对象都不可行，具体原因如下：</p><p>（1）客户端请求Web服务器时，针对每次HTTP请求，Web服务器都会创建一个HttpServletRequest对象，该对象只能保存本次请求所传递的数据。由于购买和结账是两个不同的请求，因此，在发送结账请求时，之前购买请求中的数据将会丢失。</p><p>（2）使用ServletContext对象保存数据时，由于同一个Web应用共享的是同一个ServletContext对象，因此，当用户在发送结账请求时，由于无法区分哪些商品是哪个用户所购买的，而会将该购物网站中所有用户购买的商品进行结算，这显然也是不可行的。</p><p>（3）为了保存会话过程中产生的数据，在Servlet技术中，提供了两个用于保存会话数据的对象，分别是Cookie和Session。关于Cookie和Session的相关知识，将在下面的小节进行详细讲解。</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/temp8.png" alt></p><p>Servlet的会话技术主要有<strong>cookie</strong>与<strong>session</strong>两种  。</p><h1 id="第2章-cookie"><a href="#第2章-cookie" class="headerlink" title="第2章 cookie"></a>第2章 cookie</h1><h2 id="2-1-cookie的概念"><a href="#2-1-cookie的概念" class="headerlink" title="2.1 cookie的概念"></a>2.1 cookie的概念</h2><h3 id="2-1-1-什么是cookie"><a href="#2-1-1-什么是cookie" class="headerlink" title="2.1.1 什么是cookie"></a>2.1.1 什么是cookie</h3><p>​    <strong>浏览器端的会话技术，它通过在浏览器中记录一些服务器传递过来的数据，解决会话从什么时候开始，到什么时候结束。</strong></p><h2 id="2-2-cookie的应用场景"><a href="#2-2-cookie的应用场景" class="headerlink" title="2.2 cookie的应用场景"></a>2.2 cookie的应用场景</h2><ol><li><p>记住用户名</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/01.png" alt></p></li><li><p>自动登录（记住用户名和密码）</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/02.png" alt></p></li></ol><h2 id="2-3-cookie的基本使用"><a href="#2-3-cookie的基本使用" class="headerlink" title="2.3 cookie的基本使用"></a>2.3 cookie的基本使用</h2><h3 id="2-3-1-cookie常用的方法介绍"><a href="#2-3-1-cookie常用的方法介绍" class="headerlink" title="2.3.1 cookie常用的方法介绍"></a>2.3.1 cookie常用的方法介绍</h3><ol><li><pre class="line-numbers language-java"><code class="language-java">Cookie<span class="token operator">:</span>    <span class="token function">Cookie</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String value<span class="token punctuation">)</span>  创建cookie对象    String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span>   获取cookie的名称    String <span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取cookie的值    <span class="token keyword">void</span> <span class="token function">setPath</span><span class="token punctuation">(</span>String uri<span class="token punctuation">)</span>   设置cookie的路径——浏览器根据这个路径判断那些cookie要发送给服务器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">HttpServletResponse：      <span class="token keyword">void</span> <span class="token function">addCookie</span><span class="token punctuation">(</span>Cookie cookie<span class="token punctuation">)</span>   将cookie发送给浏览器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">HttpServletRequest：      Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取浏览器发送的cookie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意: </p><p>​    cookie主要是通过名称和路径来确定他的唯一性的 . </p><p>​    例如：以下表示的是两个cookie，虽然名字一样 , 但是路径不同 , 所以两个cookie可以同时存在。</p><p>​        /day04/a/b/cookie1</p><p>​        /day04/a/cookie1</p><p>​    如果路径和名称一样，后添加的cookie将覆盖前者</p></blockquote></li></ol><h3 id="2-3-2-使用步骤"><a href="#2-3-2-使用步骤" class="headerlink" title="2.3.2 使用步骤"></a>2.3.2 使用步骤</h3><ol><li>在CookieServlet1创建cookie</li><li>在CookieServlet1设置cookie路径为当前项目根路径：“/day04”</li><li>在CookieServlet1使用response对象将cookie发送给浏览器</li><li>在CookieServlet2通过request对象获取浏览器发送的cookie</li><li>打印在控制台上</li></ol><h3 id="2-3-3-演示代码"><a href="#2-3-3-演示代码" class="headerlink" title="2.3.3 演示代码"></a>2.3.3 演示代码</h3><p>CookieServlet1：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/cookie1"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CookieServlet1</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建cookie</span>        Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span><span class="token string">"tom"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置cookie的路径——浏览器根据这个路径判断那些cookie要发送给服务器</span>        cookie<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">"/day04"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//将cookie发送给浏览器</span>        response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>CookieServlet2：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/cookie2"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CookieServlet2</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取浏览器发送的cookie</span>        Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cookies <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Cookie coo <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>coo<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//打印cookie的名称和值</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>coo<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">":"</span><span class="token operator">+</span>coo<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-4-cookie技术原理分析"><a href="#2-3-4-cookie技术原理分析" class="headerlink" title="2.3.4 cookie技术原理分析"></a>2.3.4 cookie技术原理分析</h3><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/03.png" alt></p><h2 id="2-4-Cookie的分类"><a href="#2-4-Cookie的分类" class="headerlink" title="2.4 Cookie的分类"></a>2.4 Cookie的分类</h2><ul><li>会话级别的Cookie：默认的.关闭了浏览器Cookie就销毁了.</li><li>持久级别的Cookie：可以设置指定cookie在浏览器的存活时间 , Cookie就不会随着浏览器关闭而销毁了.</li></ul><h3 id="2-4-1-API介绍"><a href="#2-4-1-API介绍" class="headerlink" title="2.4.1 API介绍"></a>2.4.1 API介绍</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token keyword">int</span> expiry<span class="token punctuation">)</span>  设置cookie的最大生存时间（单位：秒）<span class="token punctuation">,</span>超过了该时间后Cookie会自动销毁<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注意 : 当时间为0的时候 , 意思为立即删除此Cookie(前提：path和name必须一致)。</p></blockquote><h3 id="2-4-2-使用步骤"><a href="#2-4-2-使用步骤" class="headerlink" title="2.4.2 使用步骤"></a>2.4.2 使用步骤</h3><ol><li>创建cookie对象</li><li>设置生存时间</li><li>设置cookie的路径</li><li>发送cookie给浏览器</li></ol><blockquote><p>注意事项 : 要删除已经存在的cookie，用来覆盖的cookie的名称与路径必须与原来的cookie一致</p></blockquote><h3 id="2-4-3-演示代码"><a href="#2-4-3-演示代码" class="headerlink" title="2.4.3 演示代码"></a>2.4.3 演示代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/maxage"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MaxAgeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//创建cookie</span>       <span class="token comment" spellcheck="true">/* Cookie cookie = new Cookie("name","tom");        //设置cookie的生存时间        cookie.setMaxAge(60*60*24*7);        //设置cookie的路径        cookie.setPath("/day04");        //发送cookie给浏览器        response.addCookie(cookie);*/</span>        <span class="token comment" spellcheck="true">//=====如果需要立刻删除cookie======</span>        <span class="token comment" spellcheck="true">//创建空数据的cookie，名称保持一致</span>        Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置cookie的生存时间为0立刻死亡</span>        cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//设置cookie的路径,与原来的cookie路径保持一致</span>        cookie<span class="token punctuation">.</span><span class="token function">setPath</span><span class="token punctuation">(</span><span class="token string">"/day04"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//发送cookie给浏览器</span>        response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-5-案例：记录用户上一次访问时间"><a href="#2-5-案例：记录用户上一次访问时间" class="headerlink" title="2.5 案例：记录用户上一次访问时间"></a>2.5 案例：记录用户上一次访问时间</h2><h3 id="2-5-1-案例需求"><a href="#2-5-1-案例需求" class="headerlink" title="2.5.1 案例需求"></a>2.5.1 案例需求</h3><p>​    展示用户上一次访问服务器的时间</p><h3 id="2-5-2-案例分析"><a href="#2-5-2-案例分析" class="headerlink" title="2.5.2 案例分析"></a>2.5.2 案例分析</h3><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/04.png" alt></p><h3 id="2-5-3-实现代码"><a href="#2-5-3-实现代码" class="headerlink" title="2.5.3 实现代码"></a>2.5.3 实现代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/time"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TimeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//第一次访问操作</span>        <span class="token comment" spellcheck="true">// 1 获取用户当前访问的时间</span>         Date date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//格式化时间数据(注意：在cookie值中不能使用分号（;）、逗号（,）以及空格，否则会出现异常)</span>         SimpleDateFormat format <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy-MM-dd/hh:mm:ss"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String format1 <span class="token operator">=</span> format<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>format1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2 将数据存入cookie</span>         Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"time"</span><span class="token punctuation">,</span> format1<span class="token punctuation">)</span><span class="token punctuation">;</span>         cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3 将数据发送给浏览器</span>         response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第二次访问操作</span>         <span class="token comment" spellcheck="true">//获取cookie数组</span>         Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cookies <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Cookie cookie2 <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//选择获取名称为time的cookie</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"time"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cookie2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//将数据发送页面</span>                    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>cookie2<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-4-注意事项"><a href="#2-5-4-注意事项" class="headerlink" title="2.5.4 注意事项"></a>2.5.4 注意事项</h3><p>​    在<strong>上面的案例中我们给cookie添加数据的时候需要注意数据的内容，在cookie值中不能使用分号（;）、逗号（,）、空格。</strong></p><p>如果存入的数据不合法，会出现一个错误：</p><pre class="line-numbers language-java"><code class="language-java">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>IllegalArgumentException<span class="token operator">:</span>     An invalid character <span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span> was present in the Cookie value<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    <strong>那么如果我们一定要保存非法数据在cookie中，该如何操作呢？</strong></p><p>​    <strong>答：cookie对于基本符号、数字、和字母是可以存储的，因此，我们只需要将非法数据转换成符号、数字、和字母形式存储，要使用的时候再转换成正常的数据（解码）即可。</strong></p><p>​    那么，最后的问题就是，我们如何对这些数据进行编码和解码呢？我们需要来学习一些新的对象和方法。</p><h4 id="2-5-4-1-API介绍"><a href="#2-5-4-1-API介绍" class="headerlink" title="2.5.4.1 API介绍"></a>2.5.4.1 API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java">URLEncoder类：    <span class="token keyword">static</span> String <span class="token function">encode</span><span class="token punctuation">(</span>String s<span class="token punctuation">,</span> String enc<span class="token punctuation">)</span>  将指定的字符串，按指定的编码表编码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">URLDecoder类：    <span class="token keyword">static</span> String <span class="token function">decode</span><span class="token punctuation">(</span>String s<span class="token punctuation">,</span> String enc<span class="token punctuation">)</span>  将指定的字符串，按指定的编码表解码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h4 id="2-5-4-2-使用步骤"><a href="#2-5-4-2-使用步骤" class="headerlink" title="2.5.4.2 使用步骤"></a>2.5.4.2 使用步骤</h4><ol><li>在创建cookie之前将数据编码</li><li>将编码后的数据存入cookie</li><li>获取到cookie之后，解码数据，获取正常中文内容</li></ol><h4 id="2-5-4-3-注意事项"><a href="#2-5-4-3-注意事项" class="headerlink" title="2.5.4.3 注意事项"></a>2.5.4.3 注意事项</h4><ol><li>编码解码两次操作要使用同一个编码表</li></ol><h4 id="2-5-4-4-演示代码"><a href="#2-5-4-4-演示代码" class="headerlink" title="2.5.4.4 演示代码"></a>2.5.4.4 演示代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URLDecoder<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URLEncoder<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>text<span class="token punctuation">.</span>SimpleDateFormat<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>Cookie<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/time"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TimeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//第一次访问操作</span>        <span class="token comment" spellcheck="true">// 1 获取用户当前访问的时间</span>         Date date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 2 格式化时间数据(时间转换成含有非法字符形式)</span>         SimpleDateFormat format <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleDateFormat</span><span class="token punctuation">(</span><span class="token string">"yyyy年MM月dd日 hh时mm分ss秒"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String format1 <span class="token operator">=</span> format<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>date<span class="token punctuation">)</span><span class="token punctuation">;</span>         System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>format1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 3 将数据进行编码</span>        String encode <span class="token operator">=</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>format1<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 4 将数据存入cookie</span>         Cookie cookie <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cookie</span><span class="token punctuation">(</span><span class="token string">"time"</span><span class="token punctuation">,</span>encode <span class="token punctuation">)</span><span class="token punctuation">;</span>         cookie<span class="token punctuation">.</span><span class="token function">setMaxAge</span><span class="token punctuation">(</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">60</span><span class="token operator">*</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 5 将数据发送给浏览器</span>         response<span class="token punctuation">.</span><span class="token function">addCookie</span><span class="token punctuation">(</span>cookie<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//第二次访问操作</span>         <span class="token comment" spellcheck="true">//获取cookie数组</span>         Cookie<span class="token punctuation">[</span><span class="token punctuation">]</span> cookies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getCookies</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>cookies <span class="token operator">!=</span> null<span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>Cookie cookie2 <span class="token operator">:</span> cookies<span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//选择获取名称为time的cookie</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"time"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>cookie2<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">//由于数据之前经过编码，现在要还原的中文数据</span>                    String decode <span class="token operator">=</span> URLDecoder<span class="token punctuation">.</span><span class="token function">decode</span><span class="token punctuation">(</span>cookie2<span class="token punctuation">.</span><span class="token function">getValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment" spellcheck="true">//将数据发送页面</span>                    response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>decode<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="第3章-session"><a href="#第3章-session" class="headerlink" title="第3章 session"></a>第3章 session</h1><h2 id="3-1-session的基本概念"><a href="#3-1-session的基本概念" class="headerlink" title="3.1 session的基本概念"></a>3.1 session的基本概念</h2><p>​    当人们去医院就诊时，就诊病人需要办理医院的就诊卡，该卡上只有卡号，而没有其它信息。但病人每次去该医院就诊时，只要出示就诊卡，医务人员便可根据卡号查询到病人的就诊信息。Session技术就好比医院发放给病人的就医卡和医院为每个病人保留病例档案的过程。当浏览器访问Web服务器时，Servlet容器就会创建一个Session对象和ID属性，其中，Session对象就相当于病历档案，ID就相当于就诊卡号。当客户端后续访问服务器时，只要将标识号传递给服务器，服务器就能判断出该请求是哪个客户端发送的，从而选择与之对应的Session对象为其服务。</p><p>​    需要注意的是，由于客户端需要接收、记录和回送Session对象的ID，因此，通常情况下，Session是借助Cookie技术来传递ID属性的。</p><p>​    为了使读者更好的理解Session，接下来，以网站购物为例，通过一张图来描述Session保存用户信息的原理，具体如下图所示。</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/temp1.png" alt></p><p>​                                                           Session保存用户信息的过程</p><p>​    在上图中，用户甲和乙都调用buyServlet将商品添加到购物车，调用payServlet进行商品结算。由于甲和乙购买商品的过程类似，在此，以用户甲为例进行详细说明。当用户甲访问购物网站时，服务器为甲创建了一个Session对象（相当于购物车）。当甲将Nokia手机添加到购物车时，Nokia手机的信息便存放到了Session对象中。同时，服务器将Session对象的ID属性以Cookie (Set-Cookie: JSESSIONID=111)的形式返回给甲的浏览器。当甲完成购物进行结账时，需要向服务器发送结账请求，这时，浏览器自动在请求消息头中将Cookie (Cookie: JSESSIONID=111)信息回送给服务器，服务器根据ID属性找到为用户甲所创建的Session对象，并将Session对象中所存放的Nokia手机信息取出进行结算。 </p><h3 id="3-1-1-什么要存在Session"><a href="#3-1-1-什么要存在Session" class="headerlink" title="3.1.1 什么要存在Session"></a>3.1.1 什么要存在Session</h3><p>​    使用servlet生成验证码时，我们需要在服务器记录一份生成的随机字符，当用户提交填写的数据时，将用户输入的数据和服务器缓存的数据进行比对。</p><p>​    问:将随机字符串保存在ServletContext中或者request中是否可以?</p><p>​    答:将数据存放到ServletContext，多个用户共享一个验证码。</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/temp2.png" alt></p><p>​    答:将数据存放到request作用域，多次请求不能共享数据。</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/temp3.png" alt></p><p> 我们发现将数据保存到ServletContext和request中是存在问题的，那么就需要使用会话技术保存用户的私有信息.</p><p>​    </p><h2 id="3-2-session的与cookie的区别"><a href="#3-2-session的与cookie的区别" class="headerlink" title="3.2 session的与cookie的区别"></a>3.2 session的与cookie的区别</h2><table><thead><tr><th></th><th align="center">cookie</th><th align="right">session</th></tr></thead><tbody><tr><td>会话数据保存的位置</td><td align="center">浏览器</td><td align="right">服务器</td></tr><tr><td>数据的安全性</td><td align="center">不安全</td><td align="right">安全</td></tr><tr><td>存储数是否有限制</td><td align="center">有</td><td align="right">无</td></tr></tbody></table><h2 id="3-3-session的应用场景"><a href="#3-3-session的应用场景" class="headerlink" title="3.3 session的应用场景"></a>3.3 session的应用场景</h2><ol><li>保存购物车数据</li><li>保存用户浏览器记录数据</li><li>保存用户登录信息数据</li><li>保存验证码</li></ol><h2 id="3-4-session的基本使用"><a href="#3-4-session的基本使用" class="headerlink" title="3.4 session的基本使用"></a>3.4 session的基本使用</h2><h3 id="3-4-1-session存储数据与-获取数据"><a href="#3-4-1-session存储数据与-获取数据" class="headerlink" title="3.4.1 session存储数据与 获取数据"></a>3.4.1 session存储数据与 获取数据</h3><h4 id="3-4-1-1-API介绍"><a href="#3-4-1-1-API介绍" class="headerlink" title="3.4.1.1 API介绍"></a>3.4.1.1 API介绍</h4><ol><li><p>HttpServletRequest </p><pre class="line-numbers language-java"><code class="language-java"> HttpSession <span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取session对象 <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><ol start="2"><li><p>HttpSession</p><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">void</span> <span class="token function">setAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> Object value<span class="token punctuation">)</span> 在session中保存数据 Object <span class="token function">getAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  从session中获取数据 <span class="token keyword">void</span> <span class="token function">removeAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  从session中移除数据<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h4 id="3-4-1-2-使用步骤"><a href="#3-4-1-2-使用步骤" class="headerlink" title="3.4.1.2 使用步骤"></a>3.4.1.2 使用步骤</h4><ol><li>在SessionServlet通过request对象获取session对象</li><li>在SessionServlet调用session的setAttribute保存数据</li><li>在SessionServlet调用session的getAttribute获取数据</li><li>在SessionServlet1通过request对象获取session对象</li><li>在SessionServlet1调用session的removeAttribute移除数据</li><li>在SessionServlet1调用session的getAttribute获取数据</li></ol><h4 id="3-4-1-3-注意事项"><a href="#3-4-1-3-注意事项" class="headerlink" title="3.4.1.3 注意事项"></a>3.4.1.3 注意事项</h4><ol><li>getAttribute方法返回值是Object，因此需要将返回值强制转换才能方便使用。</li></ol><h4 id="3-4-1-3-演示代码"><a href="#3-4-1-3-演示代码" class="headerlink" title="3.4.1.3 演示代码"></a>3.4.1.3 演示代码</h4><p>SessionServlet：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpSession<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/session"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SessionServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取session对象</span>        HttpSession session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//添加数据</span>        session<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">,</span><span class="token string">"广州"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>SessionServlet1:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpSession<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/session1"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SessionServlet1</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取session对象</span>        HttpSession session <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//获取数据</span>        String addr <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//移除数据</span>        session<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//再次获取，查看效果</span>        String addr1 <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> session<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>addr1<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-4-2-session的原理分析"><a href="#3-4-2-session的原理分析" class="headerlink" title="3.4.2 session的原理分析"></a>3.4.2 session的原理分析</h3><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/14.png" alt></p><h2 id="3-5-案例-使用session存储验证码完成登录功能"><a href="#3-5-案例-使用session存储验证码完成登录功能" class="headerlink" title="3.5 案例:使用session存储验证码完成登录功能"></a>3.5 案例:使用session存储验证码完成登录功能</h2><h3 id="3-5-1-案例需求"><a href="#3-5-1-案例需求" class="headerlink" title="3.5.1 案例需求"></a>3.5.1 案例需求</h3><ol><li><p>在登录页面用户登录的时候要查看到验证码，如图所示：</p><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/16.png" alt></p></li><li><p>在生成页面验证码图片的同时，使用session存储验证码</p></li><li><p>在处理用户登录请求的时候，首先校验验证码</p></li><li><p>校验通过才能执行登录操作</p></li></ol><h3 id="3-5-2-案例效果"><a href="#3-5-2-案例效果" class="headerlink" title="3.5.2 案例效果"></a>3.5.2 案例效果</h3><p>​    用户提交验证码，与session中保存验证码校验一致才能登录</p><h3 id="3-5-3-案例分析"><a href="#3-5-3-案例分析" class="headerlink" title="3.5.3 案例分析"></a>3.5.3 案例分析</h3><p><img src="C:/Users/Administrator/Desktop/HTML/day30_cookie_session/day30_cookie_session/01_%E8%AE%B2%E4%B9%89/01_%E5%8F%82%E8%80%83%E8%AE%B2%E4%B9%89/img/15.png" alt></p><h3 id="3-5-4-代码实现"><a href="#3-5-4-代码实现" class="headerlink" title="3.5.4 代码实现"></a>3.5.4 代码实现</h3><ol><li><p>页面</p><pre class="line-numbers language-html"><code class="language-html">&lt;%@ page language="java" import="java.util.*" pageEncoding="UTF-8"%><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Content-Type<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/html; charset<span class="token punctuation">=</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token keyword">function</span> <span class="token function">changeCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">"/day04/checkcode?r="</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day04/login<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>验证码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>code<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 通过向服务器发送请求，从服务器获取验证码数据 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day04/checkcode<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeCode();<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javascript:;<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>changeCode();<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>换一换<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>&lt;%=(request.getAttribute("msg")==null?"":request.getAttribute("msg")) %><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登陆<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>配置验证码servlet</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>Color<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>Font<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>Graphics<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/checkcode"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckcodeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//  创建画布</span>        <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>        BufferedImage bufferedImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> BufferedImage<span class="token punctuation">.</span>TYPE_INT_RGB<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  获得画笔</span>        Graphics g <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  填充背景颜色</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  绘制边框</span>        g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">;</span>        g<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  生成随机字符</span>        <span class="token comment" spellcheck="true">//  准备数据</span>        String data <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  准备随机对象</span>        Random r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  声明一个变量 保存验证码</span>        String code <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  书写4个随机字符</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//  设置字体</span>            g<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">,</span> Font<span class="token punctuation">.</span>BOLD<span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//  设置随机颜色</span>            g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            String str <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>            g<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//  将新的字符 保存到验证码中</span>            code <span class="token operator">=</span> code <span class="token operator">+</span> str<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//  绘制干扰线</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//  设置随机颜色</span>            g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            g<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//  将验证码 打印到控制台</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  将验证码放到session中</span>        request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"code_session"</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//  将画布显示在浏览器中</span>        ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="3"><li><p>登录servlet</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>PrintWriter<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UserDao<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/login"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//用户请求中的验证码获取</span>        String code <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"code"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取session中保存的验证码</span>        String code_session <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span>request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"code_session"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//与session中保存的验证码进行校验</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>code_session<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//验证码错误，告诉用户，页面提示</span>            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"验证码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/login.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token comment" spellcheck="true">//验证码正确，登录逻辑执行</span>        <span class="token comment" spellcheck="true">//获取用户名和密码</span>        String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String password <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//调用Service方法，登录用户</span>        UserDao userDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        User loginUser <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>loginUser <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>            request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span><span class="token string">"用户名或则密码错误"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/login.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//登陆成功，跳转主页</span>            response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="4"><li><p>dao：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span><span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JDBCUtils<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>BeanPropertyRowMapper<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDao</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> JdbcTemplate template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>JDBCUtils<span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> User <span class="token function">login</span><span class="token punctuation">(</span>String username<span class="token punctuation">,</span> String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        String sql <span class="token operator">=</span> <span class="token string">"select * from user where username = ? and password = ?"</span><span class="token punctuation">;</span>        <span class="token keyword">try</span> <span class="token punctuation">{</span>            User query <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">queryForObject</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span><span class="token punctuation">(</span>User<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> query<span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="第4章-三个域对象总结"><a href="#第4章-三个域对象总结" class="headerlink" title="第4章 三个域对象总结"></a>第4章 三个域对象总结</h1><h2 id="4-1-ServletContext"><a href="#4-1-ServletContext" class="headerlink" title="4.1 ServletContext:"></a>4.1 ServletContext:</h2><p>针对一个WEB应用。一个WEB应用只有一个ServletContext对象，使用该对象保存的数据在整个WEB应用中都有效。</p><ul><li>创建:服务器启动的时候.</li></ul><ul><li>销毁:服务器关闭的时候或者项目移除的时候.</li></ul><h2 id="4-2-HttpSession"><a href="#4-2-HttpSession" class="headerlink" title="4.2 HttpSession"></a>4.2 HttpSession</h2><p>针对一次会话。使用该对象保存数据，一次会话（多次请求）内数据有效。</p><ul><li>创建:可以暂且认为在服务器第一次调用getSession()的时候.服务器创建session的对象.因为session销毁后,再次调用getSession()的时候也会创建.</li><li>销毁:<ul><li>非正常关闭服务器</li><li>Session过期了,默认时间是30分钟.</li><li>手动调用session的invalidate的方法</li></ul></li></ul><h2 id="4-3-HttpServletRequest"><a href="#4-3-HttpServletRequest" class="headerlink" title="4.3 HttpServletRequest"></a>4.3 HttpServletRequest</h2><p>针对一次请求。使用该对象保存数据，一次请求（一个页面，如果是请求转发多个页面）内数据有效.</p><ul><li>创建:客户端向服务器发送一次请求</li><li>销毁:服务器为这次请求作出响应之后,销毁request.</li></ul><h2 id="4-4-三个作用域对象操作的API"><a href="#4-4-三个作用域对象操作的API" class="headerlink" title="4.4 三个作用域对象操作的API"></a>4.4 三个作用域对象操作的API</h2><p>api都是一样的,完成存取和销毁的操作</p><ul><li>存放数据：setAttribute(name,value)</li><li>获得数据：getAttribute(name)</li><li>删除数据：removeAttribute(name)</li></ul>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> cookie </tag>
            
            <tag> session </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml和dom4j</title>
      <link href="/2019/03/19/2019-03-19-xml-he-dom4j/"/>
      <url>/2019/03/19/2019-03-19-xml-he-dom4j/</url>
      
        <content type="html"><![CDATA[<h1 id="XML-amp-Dom4j"><a href="#XML-amp-Dom4j" class="headerlink" title="XML&amp;Dom4j"></a>XML&amp;Dom4j</h1><h1 id="第1章-XML"><a href="#第1章-XML" class="headerlink" title="第1章 XML"></a>第1章 XML</h1><h2 id="1-1-XML介绍"><a href="#1-1-XML介绍" class="headerlink" title="1.1 XML介绍"></a>1.1 XML介绍</h2><h3 id="1-1-1-什么是XML"><a href="#1-1-1-什么是XML" class="headerlink" title="1.1.1 什么是XML"></a>1.1.1 什么是XML</h3><ul><li>XML 指可扩展标记语言（<strong>EXtensible Markup Language</strong>）</li><li>XML 是一种<strong>标记语言</strong>，很类似 HTML，HTML文件也是XML文档</li><li>XML 的设计宗旨是<strong>传输数据</strong>，而非显示数据</li><li>XML 标签没有被预定义。您需要<strong>自行定义标签</strong>。</li><li>XML 被设计为具有<strong>自我描述性(就是易于阅读)</strong>。</li><li>XML 是 <strong>W3C 的推荐标准</strong></li></ul><h3 id="1-1-2-XML-与-HTML-的主要差异"><a href="#1-1-2-XML-与-HTML-的主要差异" class="headerlink" title="1.1.2 XML 与 HTML 的主要差异"></a>1.1.2 XML 与 HTML 的主要差异</h3><ul><li>XML 不是 HTML 的替代。</li><li>XML 和 HTML 为不同的目的而设计。</li><li>XML 被设计为传输和存储数据，其焦点是数据的内容。</li><li>HTML 被设计用来显示数据，其焦点是数据的外观。</li><li>HTML 旨在显示信息，而 XML 旨在传输信息。</li></ul><h3 id="1-1-3-XML文件案例编写person-xml文件"><a href="#1-1-3-XML文件案例编写person-xml文件" class="headerlink" title="1.1.3 XML文件案例编写person.xml文件"></a>1.1.3 XML文件案例编写person.xml文件</h3><h4 id="1-1-3-1-需求"><a href="#1-1-3-1-需求" class="headerlink" title="1.1.3.1 需求"></a>1.1.3.1 需求</h4><p>​    编写xml文档，用于描述人员信息，person代表一个人员，id是人员的属性代表人员编号。人员信息包括age年龄、name姓名、sex性别信息。</p><h4 id="1-1-3-2-效果"><a href="#1-1-3-2-效果" class="headerlink" title="1.1.3.2 效果"></a>1.1.3.2 效果</h4><p>使用浏览器运行person.xml文件效果如下</p><p><img src="6.png" alt></p><h4 id="1-1-3-3-实现步骤"><a href="#1-1-3-3-实现步骤" class="headerlink" title="1.1.3.3 实现步骤"></a>1.1.3.3 实现步骤</h4><p>步骤1：使用idea开发工具，选择当前项目鼠标右键新建“”，</p><p>步骤2：编写文件person.xml文件，内容如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>110<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>age</span><span class="token punctuation">></span></span>18<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>age</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--年龄--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>张三<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token comment" spellcheck="true">&lt;!--姓名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sex</span><span class="token punctuation">/></span></span>                <span class="token comment" spellcheck="true">&lt;!--性别--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>person</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>步骤3：点击idea右侧浏览器运行</p><h2 id="1-2-XML作用"><a href="#1-2-XML作用" class="headerlink" title="1.2 XML作用"></a>1.2 XML作用</h2><p>XML在企业开发中主要有两种应用场景：</p><p>1）XML可以存储数据 , 作为数据交换的载体(使用XML格式进行数据的传输)。</p><p>2）XML也可以作为配置文件，例如后面框架阶段我们学习的Spring框架的配置(applicationContext.xml)都是通过XML进行配置的（企业开发中经常使用的）</p><h2 id="1-3-XML的组成元素"><a href="#1-3-XML的组成元素" class="headerlink" title="1.3 XML的组成元素"></a>1.3 XML的组成元素</h2><p>XML文件中常见的组成元素有:文档声明、元素、属性、注释、转义字符、字符区。</p><h3 id="1-3-1-文档声明"><a href="#1-3-1-文档声明" class="headerlink" title="1.3.1 文档声明"></a>1.3.1 文档声明</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="utf-8" ?></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>使用IDE创建xml文件时就带有文档声明.</li><li>文档声明必须为&lt;?xml开头，以？&gt;结束</li><li>文档声明必须从文档的0行0列位置开始</li><li>文档声明中常见的两个属性：<ul><li>version：指定XML文档版本。必须属性，这里一般选择1.0；</li><li>enconding：指定当前文档的编码，可选属性，默认值是utf-8；</li></ul></li></ol><h3 id="1-3-2-元素element"><a href="#1-3-2-元素element" class="headerlink" title="1.3.2 元素element"></a>1.3.2 元素element</h3><pre class="line-numbers language-xml"><code class="language-xml">格式1:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>person</span><span class="token punctuation">></span></span>格式2:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span><span class="token punctuation">/></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ol><li>元素是XML文档中最重要的组成部分；</li><li>普通元素的结构由开始标签、元素体、结束标签组成。</li><li>元素体：元素体可以是元素，也可以是文本，例如：<code>&lt;person&gt;&lt;name&gt;张三&lt;/name&gt;&lt;/person&gt;</code></li><li>空元素：空元素只有标签，而没有结束标签，但元素必须自己闭合，例如：<code>&lt;sex/&gt;</code></li><li>元素命名<ul><li>区分大小写</li><li>不能使用空格，不能使用冒号</li><li>不建议以XML、xml、Xml开头</li></ul></li><li>格式化良好的XML文档，有且仅有一个根元素。</li></ol><h3 id="1-3-3-属性"><a href="#1-3-3-属性" class="headerlink" title="1.3.3 属性"></a>1.3.3 属性</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>person</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>110<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li>属性是元素的一部分，它必须出现在元素的开始标签中</li><li>属性的定义格式：属性名=“属性值”，其中属性值必须使用单引或双引号括起来</li><li>一个元素可以有0~N个属性，但一个元素中不能出现同名属性</li><li>属性名不能使用空格 , 不要使用冒号等特殊字符，且必须以字母开头</li></ol><h3 id="1-3-4-注释"><a href="#1-3-4-注释" class="headerlink" title="1.3.4 注释"></a>1.3.4 注释</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!--注释内容--></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>XML的注释与HTML相同，既以<code>&lt;!--</code>开始，<code>--&gt;</code>结束。</p><h3 id="1-3-5-转义字符"><a href="#1-3-5-转义字符" class="headerlink" title="1.3.5 转义字符"></a>1.3.5 转义字符</h3><p>​    XML中的转义字符与HTML一样。因为很多符号已经被文档结构所使用，所以在元素体或属性值中想使用这些符号就必须使用转义字符（也叫实体字符），例如：”&gt;”、”&lt;”、”‘“、”””、”&amp;”。</p><table><thead><tr><th align="center">字符</th><th align="center">预定义的转义字符</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">&lt;</td><td align="center"><code>&amp;lt;</code></td><td align="center">小于</td></tr><tr><td align="center">&gt;</td><td align="center"><code>&amp;gt;</code></td><td align="center">大于</td></tr><tr><td align="center">“</td><td align="center"><code>&amp;quot;</code></td><td align="center">双引号</td></tr><tr><td align="center">‘</td><td align="center"><code>&amp;apos;</code></td><td align="center">单引号</td></tr><tr><td align="center">&amp;</td><td align="center"><code>&amp;amp;</code></td><td align="center">和号</td></tr></tbody></table><p><em>注意：严格地讲，在 XML 中仅有字符 “&lt;”和”&amp;” 是非法的。省略号、引号和大于号是合法的，但是把它们替换为实体引用是个好的习惯。</em></p><p>​    假如您在 XML 文档中放置了一个类似 “&lt;” 字符，那么这个文档会产生一个错误，这是因为解析器会把它解释为新元素的开始。因此你不能这样写：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">></span></span>if salary &lt; 1000 then<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>为了避免此类错误，需要把字符 “&lt;” 替换为实体引用，就像这样：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>message</span><span class="token punctuation">></span></span>if salary <span class="token entity" title="&lt;">&amp;lt;</span> 1000 then<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>message</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="1-3-6-字符区-了解"><a href="#1-3-6-字符区-了解" class="headerlink" title="1.3.6 字符区(了解)"></a>1.3.6 字符区(了解)</h3><p><img src="111.png" alt></p><ol><li>CDATA 指的是不应由 XML 解析器进行解析的文本数据（Unparsed Character Data）</li><li>CDATA 部分由 “<!--[CDATA[" 开始，由 "]]-->“ 结束；</li><li>当大量的转义字符出现在xml文档中时，会使XML文档的可读性大幅度降低。这时如果使用CDATA段就会好一些。</li></ol><p><em>注意：</em></p><p>​    CDATA 部分不能包含字符串 “]]&gt;”。也不允许嵌套的 CDATA 部分。</p><p>​    标记 CDATA 部分结尾的 “]]&gt;” 不能包含空格或折行。</p><h2 id="1-4-XML文件的约束"><a href="#1-4-XML文件的约束" class="headerlink" title="1.4 XML文件的约束"></a>1.4 XML文件的约束</h2><p>在XML技术里，可以编写一个文档来约束一个XML文档的书写规范，这称之为XML约束。</p><p>常见的xml约束：DTD、Schema</p><blockquote><p>注意:我们对于约束的要求是能通过已写好的约束文件编写xml文档.</p></blockquote><h3 id="1-4-1-DTD约束"><a href="#1-4-1-DTD约束" class="headerlink" title="1.4.1 DTD约束"></a>1.4.1 DTD约束</h3><h4 id="1-4-1-1-概念"><a href="#1-4-1-1-概念" class="headerlink" title="1.4.1.1 概念"></a>1.4.1.1 概念</h4><p>​    DTD是文档类型定义（Document Type Definition）。DTD 可以定义在 XML 文档中出现的元素、这些元素出现的次序、它们如何相互嵌套以及XML文档结构的其它详细信息。</p><h4 id="1-4-1-2-约束体验"><a href="#1-4-1-2-约束体验" class="headerlink" title="1.4.1.2 约束体验"></a>1.4.1.2 约束体验</h4><p>体验效果说明：当编写xml文档时不符合指定dtd约束时，进行提示xml编写错误，如下图：</p><p><img src="7.png" alt></p><p>体验步骤:</p><p>步骤1：复制bookshelf.dtd文件</p><p>步骤2：bookshelf.dtd文件内容如下</p><pre class="line-numbers language-dtd"><code class="language-dtd"><!ELEMENT 书架 (书+)><!ELEMENT 书 (书名,作者,售价)><!--约束元素书的子元素必须为书名、作者、售价--><!ELEMENT 书名 (#PCDATA)><!ELEMENT 作者 (#PCDATA)><!ELEMENT 售价 (#PCDATA)><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>步骤三：新建books.xml，代码如下</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE 书架 SYSTEM "bookshelf.dtd"></span><span class="token comment" spellcheck="true">&lt;!--指定使用bookshelf.dtd文件约束当前xml文档--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书架</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书名</span><span class="token punctuation">></span></span>JavaWeb开发教程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书名</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>作者</span><span class="token punctuation">></span></span>张孝祥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>作者</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>售价</span><span class="token punctuation">></span></span>100.00元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>售价</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书名</span><span class="token punctuation">></span></span>三国演义<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书名</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>作者</span><span class="token punctuation">></span></span>罗贯中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>作者</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>售价</span><span class="token punctuation">></span></span>100.00元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>售价</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>测试</span><span class="token punctuation">></span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>测试</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--不符合约束，书的子元素必须为书名、作者、售价--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书架</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>步骤四：idea开发工具books.xml的dtd约束验证不通过的效果如下</p><p><img src="9.png" alt></p><h4 id="1-4-1-3-dtd学习要求"><a href="#1-4-1-3-dtd学习要求" class="headerlink" title="1.4.1.3 dtd学习要求"></a>1.4.1.3 dtd学习要求</h4><p>​    在企业实际开发中，我们很少自己编写DTD约束文档，通常情况下通过框架提供的DTD约束文档编写对应的XML文档。所以这一知识点的要求是可以根据DTD约束文档内容编写XML文档。</p><h4 id="1-4-1-4-语法-了解"><a href="#1-4-1-4-语法-了解" class="headerlink" title="1.4.1.4 语法(了解)"></a>1.4.1.4 语法(了解)</h4><p>#####文档声明(了解)</p><ol><li><p>内部DTD，在XML文档内部嵌入DTD，只对当前XML有效。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE 根元素 [...//具体语法]></span><span class="token comment" spellcheck="true">&lt;!--内部DTD--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>根元素</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>根元素</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>外部DTD—本地DTD，DTD文档在本地系统上，企业内部自己项目使用。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE 根元素 SYSTEM "bookshelf.dtd"></span><span class="token comment" spellcheck="true">&lt;!--外部本地DTD--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>根元素</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>根元素</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>外部DTD—公共DTD，DTD文档在网络上，一般都有框架提供 , 也是我们使用最多的.</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>web-app</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>web-app</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h5 id="元素声明-了解"><a href="#元素声明-了解" class="headerlink" title="元素声明(了解)"></a>元素声明(了解)</h5><ol><li><p>约束元素的嵌套层级</p><p>语法</p><pre><code>&lt;!ELEMENT 父标签 （子标签1，子标签2，…）&gt;</code></pre><p>代码</p><pre class="line-numbers language-dtd"><code class="language-dtd"><!ELEMENT 书架 (书+)>  <!--约束根元素是"书架"，"书架"子元素为"书"，“+”为数量词，请看下面介绍--><!ELEMENT 书 (书名,作者,售价)><!--约束"书"子元素依次为“书名”、“作者”、“售价”，“+”书元素至少1次--><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>约束元素体里面的数据</p><p>语法</p><pre><code>&lt;!ELEMENT 标签名字 标签类型&gt;</code></pre><p>标签类型</p><table><thead><tr><th>标签类型</th><th>代码写法</th><th>说明</th></tr></thead><tbody><tr><td>PCDATA</td><td>(#PCDATA)</td><td>被解释的字符串数据</td></tr><tr><td>EMPTY</td><td>EMPTY</td><td>即空元素，例如\<hr></td></tr><tr><td>ANY</td><td>ANY</td><td>即任意类型</td></tr></tbody></table><p>代码</p><pre class="line-numbers language-dtd"><code class="language-dtd"><!ELEMENT 书名 (#PCDATA)>      <!--"书名"元素体为字符串数据--><!ELEMENT 作者 (#PCDATA)>        <!--"作者"元素体为字符串数据--><!ELEMENT 售价 (#PCDATA)>        <!--"售价"元素体为字符串数据--><!ELEMENT 出版日期 ANY>           <!--"出版日期"元素体为任意类型--><!ELEMENT 版本号 EMPTY>        <!--"版本号"元素体为空元素--><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p><strong>数量词(掌握)</strong></p><table><thead><tr><th>数量词符号</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>表示元素可以出现0到多个</td></tr><tr><td>+</td><td>表示元素可以出现至少1个</td></tr><tr><td>?</td><td>表示元素可以是0或1个</td></tr><tr><td>,</td><td>表示元素需要按照顺序显示</td></tr><tr><td>|</td><td>表示元素需要选择其中的某一个</td></tr></tbody></table></li></ol><h5 id="属性声明-了解"><a href="#属性声明-了解" class="headerlink" title="属性声明(了解)"></a>属性声明(了解)</h5><p>语法</p><pre class="line-numbers language-dtd"><code class="language-dtd"><!ATTLIST 标签名称         属性名称1 属性类型1 属性说明1        属性名称2 属性类型2 属性说明2        …><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>属性类型</p><table><thead><tr><th>属性类型</th><th>含义</th></tr></thead><tbody><tr><td>CDATA</td><td>代表属性是文本字符串， eg:<!ATTLIST 属性名 CDATA 属性说明></td></tr><tr><td>ID</td><td>代码该属性值唯一，不能以数字开头， eg:<!ATTLIST 属性名 ID 属性说明></td></tr><tr><td>ENUMERATED</td><td>代表属性值在指定范围内进行枚举 Eg:&lt;!ATTLIST属性名 (社科类|工程类|教育类) “社科类”&gt; “社科类”是默认值，属性如果不设置默认值就是”社科类”</td></tr></tbody></table><p>属性说明</p><table><thead><tr><th>属性说明</th><th>含义</th></tr></thead><tbody><tr><td>#REQUIRED</td><td>代表属性是必须有的</td></tr><tr><td>#IMPLIED</td><td>代表属性可有可无</td></tr><tr><td>#FIXED</td><td>代表属性为固定值，实现方式：book_info CDATA #FIXED “固定值”</td></tr></tbody></table><p>代码</p><pre class="line-numbers language-dtd"><code class="language-dtd"><!ATTLIST 书                                    <!--设置"书"元素的的属性列表-->        id ID #REQUIRED                         <!--"id"属性值为必须有-->        编号 CDATA #IMPLIED                    <!--"编号"属性可有可无-->        出版社 (清华|北大|传智播客) "传智播客"   <!--"出版社"属性值是枚举值，默认为“传智播客”-->        type CDATA #FIXED "IT"                <!--"type"属性为文本字符串并且固定值为"IT"-->><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-4-2-schema约束"><a href="#1-4-2-schema约束" class="headerlink" title="1.4.2 schema约束"></a>1.4.2 schema约束</h3><h4 id="1-4-2-1-概念"><a href="#1-4-2-1-概念" class="headerlink" title="1.4.2.1 概念"></a>1.4.2.1 概念</h4><p>Schema 语言也可作为 XSD（XML Schema Definition）。</p><p>Schema 比DTD强大，是DTD代替者。</p><p>Schema 本身也是XML文档，单Schema文档扩展名为xsd，而不是xml。</p><p>Schema 功能更强大，数据类型约束更完善。</p><h4 id="1-4-2-1-约束体验"><a href="#1-4-2-1-约束体验" class="headerlink" title="1.4.2.1 约束体验"></a>1.4.2.1 约束体验</h4><p>体验效果说明：体验schema约束XML文档中对元素体数据类型的约束。效果如下：</p><p><img src="12.png" alt></p><p>DTD约束无法对具体数据类型进行约束,所以开发工具没有任何错误提示，如下效果：</p><p><img src="11.png" alt></p><p>实现步骤</p><p>步骤1：复制schema约束文件bookshelf.xsd，其中已对售价约束了数据类型，代码如下</p><pre class="line-numbers language-scheme"><code class="language-scheme">&lt;?xml version=<span class="token string">"1.0"</span> encoding=<span class="token string">"UTF-8"</span> ?>&lt;!--    传智播客DTD教学实例文档.将注释中的以下内容复制到要编写的xml的声明下面    复制内容如下:    &lt;书架 xmlns=<span class="token string">"http://www.itcast.cn"</span>          xmlns:xsi=<span class="token string">"http://www.w3.org/2001/XMLSchema-instance"</span>          xsi:schemaLocation=<span class="token string">"http://www.itcast.cn bookshelf.xsd"</span>    > -->&lt;xs:schema xmlns:xs=<span class="token string">"http://www.w3.org/2001/XMLSchema"</span>           targetNamespace=<span class="token string">"http://www.itcast.cn"</span>           elementFormDefault=<span class="token string">"qualified"</span>>        &lt;xs:element name=<span class="token string">'书架</span><span class="token string">'</span> >                &lt;xs:complexType>                        &lt;xs:sequence maxOccurs=<span class="token string">'unbounded</span><span class="token string">'</span> >                                &lt;xs:element name=<span class="token string">'书</span><span class="token string">'</span> >                                        &lt;xs:complexType>                                                &lt;xs:sequence>                                                     &lt;xs:element name=<span class="token string">'书名</span><span class="token string">'</span> type=<span class="token string">'xs:string</span><span class="token string">'</span> />                                                     &lt;xs:element name=<span class="token string">'作者</span><span class="token string">'</span> type=<span class="token string">'xs:string</span><span class="token string">'</span> />                                                     &lt;xs:element name=<span class="token string">'售价</span><span class="token string">'</span> type=<span class="token string">'xs:double</span><span class="token string">'</span> />                                                &lt;/xs:sequence>                                        &lt;/xs:complexType>                                &lt;/xs:element>                        &lt;/xs:sequence>                &lt;/xs:complexType>        &lt;/xs:element>&lt;/xs:schema><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>步骤2：新建books2.xml使用schema约束文件bookshelf.xsd，代码如下</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书架</span><span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.itcast.cn<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.itcast.cn bookshelf.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--指定schema文档约束当前XML文档--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>书名</span><span class="token punctuation">></span></span>JavaScript网页开发<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书名</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>作者</span><span class="token punctuation">></span></span>张孝祥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>作者</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>售价</span><span class="token punctuation">></span></span>abc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>售价</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>书架</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>步骤3：开发工具提示效果</p><p><img src="12.png" alt></p><h4 id="1-4-2-2-名称空间"><a href="#1-4-2-2-名称空间" class="headerlink" title="1.4.2.2 名称空间"></a>1.4.2.2 名称空间</h4><p>​    一个XML文档最多可以使用一个DTD文件,但一个XML文档中使用多个Schema文件，若这些Schema文件中定义了相同名称的元素时,使用的时候就会出现名字冲突。这就像一个Java文件中使用了<code>import java.util.*</code>和<code>import java.sql.*</code>时，在使用Date类时，那么就不明确Date是哪个包下的Date了。同理 , 在XML文档中就需要通过名称空间(namespace)来区分元素和属性是来源于哪个约束中的。名称空间就在在根元素后面的内容 , 使用xmlns到引入约束 。</p><p>​    当一个XML文档中需要使用多个Schema文件的时候 , 有且仅有一个使用缺省的 , 其他的名称空间都需要起别名 。参考资料中的 applicationContext.xml文件(spring框架的配置文件)</p><pre class="line-numbers language-schema"><code class="language-schema"> xmlns="http://www.itcast.cn"         <!-- 缺省的名称空间.使用此约束中的元素的时候只需要写元素名即可 例如:<书></书> --> xmlns:aa="http://java.sun.com"     <!-- aa就是此约束的别名,使用此约束中的元素的时候就需要加上别名 例如:<aa:书></aa:书> --><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>​    总之名称空间就是用来处理元素和属性的名称冲突问题，与Java中的包是同一用途。如果每个元素和属性都有自己的名称空间，那么就不会出现名字冲突问题，就像是每个类都有自己所在的包一样，那么类名就不会出现冲突。</p><h4 id="1-4-2-3-schema学习要求"><a href="#1-4-2-3-schema学习要求" class="headerlink" title="1.4.2.3 schema学习要求"></a>1.4.2.3 schema学习要求</h4><p>​    虽然schema功能比dtd强大，但是编写要比DTD复杂，同样以后我们在企业开发中也很少会自己编写schema文件。</p><p>​    xml编写与约束内容已经完成了，根据xml的作用我们了解到，无论是xml作为配置文件还是数据传输，我们的程序都要获取xml文档中的数据以便我们进行具体的业务操作，接下来我们就要学习XML解析技术Dom4j。</p><h1 id="第2章-Dom4j"><a href="#第2章-Dom4j" class="headerlink" title="第2章 Dom4j"></a>第2章 Dom4j</h1><h2 id="2-1-XML解析"><a href="#2-1-XML解析" class="headerlink" title="2.1 XML解析"></a>2.1 XML解析</h2><h3 id="2-1-1-解析概述"><a href="#2-1-1-解析概述" class="headerlink" title="2.1.1 解析概述"></a>2.1.1 解析概述</h3><p>​    当将数据存储在XML后，我们就希望通过程序获取XML的内容。如果我们使用Java基础所学的IO知识是可以完成的，不过你学要非常繁琐的操作才可以完成，且开发中会遇到不同问题（只读、读写）。人们为不同问题提供不同的解析方式，使用不同的解析器进行解析，方便开发人员操作XML。</p><h3 id="2-1-2-解析方式和解析器"><a href="#2-1-2-解析方式和解析器" class="headerlink" title="2.1.2 解析方式和解析器"></a>2.1.2 解析方式和解析器</h3><ul><li><p>开发中比较常见的解析方式有三种，如下：</p><ol><li><p>DOM：要求解析器把整个XML文档装载到内存，并解析成一个Document对象</p><p>a）优点：元素与元素之间保留结构关系，故可以进行增删改查操作。</p><p>b）缺点：XML文档过大，可能出现内存溢出</p></li><li><p>SAX：是一种速度更快，更有效的方法。她逐行扫描文档，一边扫描一边解析。并以事件驱动的方式进行具体解析，没执行一行，都触发对应的事件。（了解）</p><p>a）优点：处理速度快，可以处理大文件</p><p>b）缺点：只能读，逐行后将释放资源，解析操作繁琐。</p></li><li><p>PULL：Android内置的XML解析方式，类似SAX。（了解）</p></li></ol></li><li><p>解析器，就是根据不同的解析方式提供具体实现。有的解析器操作过于繁琐，为了方便开发人员，有提供易于操作的解析开发包</p><p><img src="13.png" alt></p></li><li><p>常见的解析开发包</p><ul><li>JAXP：sun公司提供支持DOM和SAX开发包</li><li>Dom4j：比较简单的的解析开发包(常用)</li><li>JDom：与Dom4j类似</li><li>Jsoup：功能强大DOM方式的XML解析开发包，尤其对HTML解析更加方便(项目中讲解)</li></ul></li></ul><h2 id="2-3-Dom4j的基本使用"><a href="#2-3-Dom4j的基本使用" class="headerlink" title="2.3 Dom4j的基本使用"></a>2.3 Dom4j的基本使用</h2><h3 id="2-3-1-DOM解析原理及结构模型"><a href="#2-3-1-DOM解析原理及结构模型" class="headerlink" title="2.3.1 DOM解析原理及结构模型"></a>2.3.1 DOM解析原理及结构模型</h3><ul><li><p>解析原理</p><p>XML DOM 和 HTML DOM一样，XML DOM 将整个XML文档加载到内存，生成一个DOM树，并获得一个Document对象，通过Document对象就可以对DOM进行操作。以下面books.xml文档为例。</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>books</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0001<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>JavaWeb开发教程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>author</span><span class="token punctuation">></span></span>张孝祥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>author</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sale</span><span class="token punctuation">></span></span>100.00元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sale</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0002<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>三国演义<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>author</span><span class="token punctuation">></span></span>罗贯中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>author</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sale</span><span class="token punctuation">></span></span>100.00元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sale</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>books</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>结构模型</p><p><img src="15.png" alt></p><p>DOM中的核心概念就是节点，在XML文档中的元素、属性、文本，在DOM中都是节点！所有的节点都封装到了Document对象中。</p></li><li><p>引入dom4j的jar包</p><p>需要引入“jar/dom4j-1.6.1.jar” , 在IDEA中，选择项目鼠标右键—&gt;弹出菜单–&gt;open Module settings”–&gt;Dependencies–&gt;+–&gt;JARs or directories…   </p><p>找到dom4j-1.6.1.jar,成功添加之后点击”OK” 即可.</p></li></ul><ul><li>dom4j 必须使用核心类SaxReader加载xml文档获得Document，通过Document对象获得文档的根元素，然后就可以操作了。</li></ul><h3 id="2-3-2-常用的方法"><a href="#2-3-2-常用的方法" class="headerlink" title="2.3.2 常用的方法"></a>2.3.2 常用的方法</h3><h4 id="SaxReader对象"><a href="#SaxReader对象" class="headerlink" title="SaxReader对象"></a>SaxReader对象</h4><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>new SaxReader()</td><td>构造器</td></tr><tr><td>Document read(String url)</td><td>加载执行xml文档</td></tr></tbody></table><h4 id="Document对象"><a href="#Document对象" class="headerlink" title="Document对象"></a>Document对象</h4><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>Element getRootElement()</td><td>获得根元素</td></tr></tbody></table><h4 id="Element对象"><a href="#Element对象" class="headerlink" title="Element对象"></a>Element对象</h4><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>List elements([String ele] )</td><td>获得指定名称的所有子元素。可以不指定名称</td></tr><tr><td>Element element([String ele])</td><td>获得指定名称第一个子元素。可以不指定名称</td></tr><tr><td>String getName()</td><td>获得当前元素的元素名</td></tr><tr><td>String attributeValue(String attrName)</td><td>获得指定属性名的属性值</td></tr><tr><td>String elementText(Sting ele)</td><td>获得指定名称子元素的文本值</td></tr><tr><td>String getText()</td><td>获得当前元素的文本内容</td></tr></tbody></table><h3 id="2-3-3-方法演示"><a href="#2-3-3-方法演示" class="headerlink" title="2.3.3 方法演示"></a>2.3.3 方法演示</h3><p>复制资料下的常用xml中”books.xml”,内容如下:</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>books</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0001<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>JavaWeb开发教程<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>author</span><span class="token punctuation">></span></span>张孝祥<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>author</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sale</span><span class="token punctuation">></span></span>100.00元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sale</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0002<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>三国演义<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>author</span><span class="token punctuation">></span></span>罗贯中<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>author</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sale</span><span class="token punctuation">></span></span>100.00元<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sale</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>books</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意:为了便于解析,此xml中没有添加约束</p></blockquote><p>解析此文件,获取每本书的id值,以及书本名称,作者名称和价格.</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Demo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> DocumentException <span class="token punctuation">{</span>        SAXReader reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Document document <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"/books.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取根元素 books</span>        Element elemRoot <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取根元素的所有子元素 book</span>        List<span class="token operator">&lt;</span>Element<span class="token operator">></span>list <span class="token operator">=</span> elemRoot<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//遍历集合 获取每一个book</span>        <span class="token keyword">for</span><span class="token punctuation">(</span>Element element <span class="token operator">:</span> list<span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//获取book的id属性</span>            String id <span class="token operator">=</span>element<span class="token punctuation">.</span><span class="token function">attributeValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"id : "</span><span class="token operator">+</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//获取book下的所有子元素 name,author,sale</span>            List<span class="token operator">&lt;</span>Element<span class="token operator">></span>listElem <span class="token operator">=</span> element<span class="token punctuation">.</span><span class="token function">elements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">//遍历集合 获取每一个子元素</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>Element elem <span class="token operator">:</span> listElem<span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token comment" spellcheck="true">//元素名</span>                String name <span class="token operator">=</span> elem<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token comment" spellcheck="true">//文本值</span>                String text <span class="token operator">=</span> elem<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"--- "</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">" : "</span> <span class="token operator">+</span> text<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-4-Dom4J结合XPath解析XML"><a href="#2-4-Dom4J结合XPath解析XML" class="headerlink" title="2.4 Dom4J结合XPath解析XML"></a>2.4 Dom4J结合XPath解析XML</h2><h3 id="2-4-1-介绍"><a href="#2-4-1-介绍" class="headerlink" title="2.4.1 介绍"></a>2.4.1 介绍</h3><p>​    XPath 使用路径表达式来选取HTML 文档中的元素节点或属性节点。节点是通过沿着路径 (path) 来选取的。XPath在解析HTML文档方面提供了一独树一帜的路径思想。</p><h3 id="2-4-2-XPath使用步骤"><a href="#2-4-2-XPath使用步骤" class="headerlink" title="2.4.2 XPath使用步骤"></a>2.4.2 XPath使用步骤</h3><p>步骤1：导入jar包(dom4j和jaxen-1.1-beta-6.jar)</p><p>步骤2：通过dom4j的SaxReader获取Document对象</p><p>步骤3： 利用Xpath提供的api,结合xpaht的语法完成选取XML文档元素节点进行解析操作。</p><p>document常用的api</p><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>List<element> selectNodes(“表达式”)</element></td><td>获取符合表达式的元素集合</td></tr><tr><td>Element selectSingleNode(“表达式”)</td><td>获取符合表达式的唯一元素</td></tr></tbody></table><h3 id="2-4-3-XPath语法-了解"><a href="#2-4-3-XPath语法-了解" class="headerlink" title="2.4.3 XPath语法(了解)"></a>2.4.3 XPath语法(了解)</h3><ul><li><p>XPath表达式，就是用于选取HTML文档中节点的表达式字符串。</p><p>获取XML文档节点元素一共有如下4种XPath语法方式：</p><ol><li>绝对路径表达式方式         例如: /元素/子元素/子子元素…</li><li>相对路径表达式方式          例如: 子元素/子子元素..  或者 ./子元素/子子元素..</li><li>全文搜索路径表达式方式  例如: //子元素//子子元素</li><li>谓语（条件筛选）方式      例如: //元素[@attr1=value]</li></ol></li></ul><ul><li><p>获取不同节点语法</p><table><thead><tr><th>获取类型</th><th>语法代码</th></tr></thead><tbody><tr><td>获取元素节点</td><td>元素名称</td></tr><tr><td>获取属性节点</td><td>@属性名称</td></tr></tbody></table></li></ul><h4 id="2-4-3-1-绝对路径表达式-了解"><a href="#2-4-3-1-绝对路径表达式-了解" class="headerlink" title="2.4.3.1 绝对路径表达式(了解)"></a>2.4.3.1 绝对路径表达式(了解)</h4><ul><li><p>绝对路径介绍</p><p>格式：    String xpath=”/元素/子元素/子子元素…”;</p><p>​        绝对路径是以“/”开头，一级一级描述标签的层级路径就是绝对路径，<strong><em>这里注意不可以跨层级</em></strong></p><p>​        绝对路径是从根元素开始写路径的，<strong><em>这里开头的“/”代表HTML文档根元素</em></strong>，所以在绝对路径中不可以写根元素路径</p></li></ul><ul><li><p>演示需求(解析XML文档为”资料\常用xml文件\index.html”)</p><pre><code>需求：采用绝对路径获取从根节点开始逐层的html/body/div/ul/li节点列表并打印信息</code></pre></li></ul><h4 id="2-4-3-2-相对路径表达式-了解"><a href="#2-4-3-2-相对路径表达式-了解" class="headerlink" title="2.4.3.2 相对路径表达式(了解)"></a>2.4.3.2 相对路径表达式(了解)</h4><ul><li><p>相对路径介绍</p><p>格式：    String xpath1=”子元素/子子元素…”;//获取相对当前路径元素里面的子元素的选取</p><p>​        String xpath2=”./子元素/子子元素”;//“./“代表当前元素路径位置</p><p>​                String xpath3=”/子元素/子子元素”;//功能与xpath1格式功能一样</p><p>​        相对路径就是相对当前节点元素位置继续查找节点，需要使用JXNode.sel（xpath）进行执行相对路径表达式。</p></li></ul><h4 id="2-4-3-3-全文搜索路径表达式-了解"><a href="#2-4-3-3-全文搜索路径表达式-了解" class="headerlink" title="2.4.3.3 全文搜索路径表达式(了解)"></a>2.4.3.3 全文搜索路径表达式(了解)</h4><ul><li><p>全文搜索路径介绍</p><p>格式：    String xpath1=”//子元素//子子元素”;</p><p>​        一个“/”符号，代表逐级写路径</p><p>​        2个“//”符号，不用逐级写路径，可以直接选取到对应的节点，是全文搜索匹配的不需要按照逐层级</p></li></ul><h4 id="2-4-3-4-谓语（条件筛选-了解）"><a href="#2-4-3-4-谓语（条件筛选-了解）" class="headerlink" title="2.4.3.4 谓语（条件筛选 了解）"></a>2.4.3.4 谓语（条件筛选 了解）</h4><ul><li><p>介绍</p><p>谓语，又称为条件筛选方式，就是根据条件过滤判断进行选取节点</p><p>格式：<br>​    String xpath1=”//元素[@attr1=value]”;//获取元素属性attr1=value的元素</p><p>​    String xpath2=”//元素[@attr1&gt;value]/@attr1”//获取元素属性attr1&gt;value的d的所有attr1的值</p><p>​    String xpath3=”//元素[@attr1=value]/text()”;//获取符合条件元素体的自有文本数据</p><pre><code> String xpath4=&quot;//元素[@attr1=value]/html()&quot;;//获取符合条件元素体的自有html代码数据。</code></pre><p>​     String xpath3=”//元素[@attr1=value]/allText()”;//获取符合条件元素体的所有文本数据（包含子元素里面的文本）</p></li></ul><h3 id="2-4-4-演示"><a href="#2-4-4-演示" class="headerlink" title="2.4.4 演示"></a>2.4.4 演示</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoXpath</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        SAXReader reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SAXReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        Document document <span class="token operator">=</span> reader<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>Demo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">"/books.xml"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取所有的book元素</span>        List<span class="token operator">&lt;</span>Element<span class="token operator">></span> list <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">selectNodes</span><span class="token punctuation">(</span><span class="token string">"//book"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>Element ele<span class="token operator">:</span> list<span class="token punctuation">)</span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span><span class="token function">attributeValue</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>       <span class="token comment" spellcheck="true">//获取id为0002的指定book元素的子标签name的内容</span>        Element ele <span class="token operator">=</span> <span class="token punctuation">(</span>Element<span class="token punctuation">)</span>document<span class="token punctuation">.</span><span class="token function">selectSingleNode</span><span class="token punctuation">(</span><span class="token string">"//book[@id='0002']/name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>ele<span class="token punctuation">.</span><span class="token function">getText</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XML语法 </tag>
            
            <tag> Dom4j语法 </tag>
            
            <tag> XPath </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http协议与response</title>
      <link href="/2019/03/15/2019-03-15-http-xie-yi-yu-response/"/>
      <url>/2019/03/15/2019-03-15-http-xie-yi-yu-response/</url>
      
        <content type="html"><![CDATA[<h1 id="response学习"><a href="#response学习" class="headerlink" title="response学习"></a>response学习</h1><h1 id="第1章-响应信息的组成部分"><a href="#第1章-响应信息的组成部分" class="headerlink" title="第1章 响应信息的组成部分"></a>第1章 响应信息的组成部分</h1><p>​    在前面我们学习过了http协议与请求相关的内容，那么接下来的任务就是要完成响应部分的学习。</p><h2 id="1-1-http协议中的响应"><a href="#1-1-http协议中的响应" class="headerlink" title="1.1 http协议中的响应"></a>1.1 http协议中的响应</h2><p><strong>使用浏览器开发工具查看响应</strong><br>​    和的之前学习的http协议中的请求一样，响应也分成三个部分——响应行（状态行）、响应头、响应体。我们的学习也是按照这个思路进行。</p><p>我们先来看一下这三部分内容：<br><img src="01.png" alt></p><p>​    上图展示了响应行和响应头，那么还有响应体在哪里呢？下图展示了响应体如何查看：</p><p><img src="02.png" alt></p><pre><code>注意：谷歌浏览器并没有将响应的所有内容都放在一起，所以响应体的内容需要单独在response标签页查看</code></pre><p>​    由上图可知，那么既然分成三个部分，因此，我们的学习也是一步一步来，我们来学习下response对象,学起下response对象如何操作这三个部分。</p><h1 id="第2章-response对象操作响应信息"><a href="#第2章-response对象操作响应信息" class="headerlink" title="第2章 response对象操作响应信息"></a>第2章 response对象操作响应信息</h1><h2 id="2-1-response对象的概念"><a href="#2-1-response对象的概念" class="headerlink" title="2.1 response对象的概念"></a>2.1 response对象的概念</h2><h3 id="2-1-1-什么是response对象"><a href="#2-1-1-什么是response对象" class="headerlink" title="2.1.1 什么是response对象"></a>2.1.1 什么是response对象</h3><p>我们要学习使用response对象，先要了解它，我们先来看下官方文档截图：</p><p><img src="06.png" alt></p><pre><code>总结：HttpServletResponse对象封装了向客户端发送数据、发送响应头，发送响应状态码的方法。开发人员必须学会使用HttpServletResponse，才能给浏览器发送数据。</code></pre><h2 id="2-2-response操作响应行"><a href="#2-2-response操作响应行" class="headerlink" title="2.2 response操作响应行"></a>2.2 response操作响应行</h2><h3 id="2-2-1-响应行的组成"><a href="#2-2-1-响应行的组成" class="headerlink" title="2.2.1  响应行的组成"></a>2.2.1  响应行的组成</h3><p>​    <strong>响应行是http响应内容的第一行。</strong></p><p>​    响应行一般数据为：HTTP/1.1 200（tomcat8.5）  或者  HTTP/1.1 200 OK（tomcat7）</p><p>​    <strong>响应行分为三个部分：</strong><br>​<br>​    <strong>HTTP/1.1：协议版本</strong></p><p>​    <strong>200：响应状态码</strong></p><p>​    <strong>OK：对响应状态码的解释</strong></p><h3 id="2-2-2-常见的响应状态码："><a href="#2-2-2-常见的响应状态码：" class="headerlink" title="2.2.2 常见的响应状态码："></a>2.2.2 常见的响应状态码：</h3><ol><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">200</span> OK 请求已成功，请求所希望的响应头或数据体将随此响应返回。出现此状态码是表示正常状态。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">302</span> Move temporarily 重定向，请求的资源临时从不同的 URI响应请求。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">304</span> Not Modified  从缓存中读取数据，不从服务器重新获取数据。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">403</span> Forbidden  服务器已经理解请求，但是拒绝执行它，一般在权限不够的时候常见。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">404</span> Not Found  请求失败，请求所希望得到的资源未被在服务器上发现。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">405</span> Method Not Allowed  请求行中指定的请求方法不能被用于请求相应的资源。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token number">500</span> Internal Server Error  服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以上就是我们常用的响应状态码，了解了http协议有关响应行的部分，对于response对象来说 , 只有响应状态码可以操作 , 并且我们一般也不操作状态码 。</p></li></ol><h3 id="2-2-3-API介绍"><a href="#2-2-3-API介绍" class="headerlink" title="2.2.3 API介绍"></a>2.2.3 API介绍</h3><pre class="line-numbers language-java"><code class="language-java">   <span class="token keyword">void</span> <span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token keyword">int</span> sc<span class="token punctuation">)</span> 设置响应的状态代码<span class="token punctuation">(</span>一般用来设置 1xx 2xx 3xx<span class="token punctuation">)</span>   <span class="token keyword">void</span> <span class="token function">sendError</span><span class="token punctuation">(</span><span class="token keyword">int</span> sc<span class="token punctuation">)</span> 设置响应的状态代码<span class="token punctuation">(</span>一般用来设置 4xx 5xx<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意 : 状态码的一般不需要我们手动设置</p></blockquote><h2 id="2-3-response操作响应头"><a href="#2-3-response操作响应头" class="headerlink" title="2.3 response操作响应头"></a>2.3 response操作响应头</h2><h3 id="2-3-1-常见的响应头介绍"><a href="#2-3-1-常见的响应头介绍" class="headerlink" title="2.3.1 常见的响应头介绍"></a>2.3.1 常见的响应头介绍</h3><p>​    响应头有很多 , 我们先来看自己大家必须知道的响应头</p><ol><li><p><strong>location ：</strong></p><p>重定向操作：通常告知浏览器马上向该地址发送请求，通常和响应码302 一起使用</p></li><li><p><strong>refresh :</strong> </p><p>定时刷新操作 , 指定时间后跳转到指定页面 </p></li><li><p><strong>content-encoding ：</strong></p><p>设置当前数据的压缩格式，告知浏览器以何种压缩格式解压数据</p></li><li><p><strong>content-disposition ：</strong></p><p>通知浏览器以何种方式获取数据（直接解析数据（网页，图片文本），或者以附件方式（下载文件））</p></li><li><p><strong>content-type ：</strong></p><p>实体头部用于指示资源的MIME类型（MIME类型：用于提示当前文件的媒体类型，例如图片为 : image/png 、音频为:audio/ogg）。它的作用与传统上Windows上的文件扩展名相同。该名称源于最初用于电子邮件的MIME标准。）</p></li></ol><pre><code>注意：我们content-type常用的设置一般都是“text/html;charset=utf-8”，其中“text/html”用来设置浏览器以指定文件格式解析数据；“charset=utf-8”用来响应数据的编码表,若不需要设置编码可以不写。</code></pre><h3 id="2-3-2-API-介绍"><a href="#2-3-2-API-介绍" class="headerlink" title="2.3.2 API 介绍"></a>2.3.2 API 介绍</h3><pre class="line-numbers language-java"><code class="language-java"> <span class="token keyword">void</span> <span class="token function">setHeader</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> String value<span class="token punctuation">)</span>  用给定名称和值设置响应头 <span class="token keyword">void</span> <span class="token function">sendRedirect</span><span class="token punctuation">(</span>String location<span class="token punctuation">)</span> 用类设置重定向<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>​    接下来我们通过几个案例，让大家来练习使用下方法和响应头。</p><h3 id="2-3-3-案例1：使用location响应头实现跳转-重定向"><a href="#2-3-3-案例1：使用location响应头实现跳转-重定向" class="headerlink" title="2.3.3 案例1：使用location响应头实现跳转(重定向)"></a>2.3.3 案例1：使用location响应头实现跳转(重定向)</h3><h4 id="案例需求"><a href="#案例需求" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    使用location响应头实现重定向跳转淘宝主页<a href="http://www.taobao.com" target="_blank" rel="noopener">www.taobao.com</a></p><h4 id="案例分析"><a href="#案例分析" class="headerlink" title="案例分析"></a>案例分析</h4><ol><li><p>创建servlet</p></li><li><p>使用response对象，发送location消息头和302响应码给浏览器</p></li></ol><h4 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/redirect"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RedirectServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//设置重定向响应头</span>        <span class="token comment" spellcheck="true">// response.setHeader("location","http://www.taobao.com");</span>        <span class="token comment" spellcheck="true">//设置状态码</span>        <span class="token comment" spellcheck="true">//response.setStatus(302);</span>        <span class="token comment" spellcheck="true">//============上面代码的简化方式======================</span>        response<span class="token punctuation">.</span><span class="token function">sendRedirect</span><span class="token punctuation">(</span><span class="token string">"http://www.taobao.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-4-请求转发与请求重定向的区别"><a href="#2-3-4-请求转发与请求重定向的区别" class="headerlink" title="2.3.4 请求转发与请求重定向的区别"></a>2.3.4 请求转发与请求重定向的区别</h3><p>​    完成重定向操作之后，同学们心里有一个疑问：之前学习的转发和现在的重定向都可以完成跳转，那么他们之间有什么区别呢？</p><p>​    我们将转发和重定向的流程制作了时序图给大家展示：</p><p><img src="21.png" alt></p><p><img src="22.png" alt></p><p>​    通过上图，我们可以简单总结几点转发和重定向的区别：</p><ol><li>转发在一次请求中完成，重定向是两次请求</li><li>转发操作发生在服务器内部，重定向是浏览器执行操作</li><li>转发地址栏不变（只有一次请求，一个地址），重定向，地址栏变化（两次请求，两个地址）</li><li>转发可以在一次请求中共享数据，重定向不行（重定向两次请求）。</li></ol><h3 id="2-3-5-案例2-3秒钟之后跳转到其他页面"><a href="#2-3-5-案例2-3秒钟之后跳转到其他页面" class="headerlink" title="2.3.5 案例2 : 3秒钟之后跳转到其他页面"></a>2.3.5 案例2 : 3秒钟之后跳转到其他页面</h3><h4 id="案例需求-1"><a href="#案例需求-1" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    在当前页面停留3秒钟之后跳转到京东首页</p><h4 id="案例分析-1"><a href="#案例分析-1" class="headerlink" title="案例分析"></a>案例分析</h4><ol><li>创建RefreshServlet</li><li>调用setHeader，设置消息头（”Refresh”,” 3;url=<a href="http://www.jd.com&quot;）" target="_blank" rel="noopener">http://www.jd.com&quot;）</a></li></ol><h4 id="代码实现-1"><a href="#代码实现-1" class="headerlink" title="代码实现"></a>代码实现</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/refresh"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RefreshServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>    <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">//自动刷新操作，在3秒后跳转京东主页</span>    response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Refresh"</span><span class="token punctuation">,</span><span class="token string">" 3;url=http://www.jd.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>另外几个响应头 , 我们需要学习完response操作响应体之后才可以操作.</p></blockquote><h2 id="2-4-response操作响应体"><a href="#2-4-response操作响应体" class="headerlink" title="2.4 response操作响应体"></a>2.4 response操作响应体</h2><p>​    响应体页面上的要展示的html的代码了</p><h3 id="2-4-1-API介绍"><a href="#2-4-1-API介绍" class="headerlink" title="2.4.1 API介绍"></a>2.4.1 API介绍</h3><pre class="line-numbers language-java"><code class="language-java">ServletOutputStream <span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取字节输出流PrintWriter <span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取字符输出流<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>注意:两个流不能同时使用(互斥),这两个流使用完成后如果没有关闭,Servlet容器会帮我们将其关闭</p></blockquote><h3 id="2-4-2-案例1：向浏览器输出中文数据-无乱码"><a href="#2-4-2-案例1：向浏览器输出中文数据-无乱码" class="headerlink" title="2.4.2 案例1：向浏览器输出中文数据(无乱码)"></a>2.4.2 案例1：向浏览器输出中文数据(无乱码)</h3><h4 id="案例需求-2"><a href="#案例需求-2" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    向页面输出中文数据没有乱码</p><h4 id="案例效果"><a href="#案例效果" class="headerlink" title="案例效果"></a>案例效果</h4><p><img src="04.png" alt></p><h4 id="案例分析-2"><a href="#案例分析-2" class="headerlink" title="案例分析"></a>案例分析</h4><ol><li>创建servlet</li><li>使用response对象，调用setContentType方法传入参数：“<strong>text/html;charset=utf-8</strong>”</li><li>使用response对象，向页面输出“你好中文世界”</li></ol><h4 id="代码实现-2"><a href="#代码实现-2" class="headerlink" title="代码实现"></a>代码实现</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EncodingServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/encoding"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EncodingServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"你好中文世界"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-3-案例2：以附件形式下载文件"><a href="#2-4-3-案例2：以附件形式下载文件" class="headerlink" title="2.4.3 案例2：以附件形式下载文件"></a>2.4.3 案例2：以附件形式下载文件</h3><h4 id="案例需求-3"><a href="#案例需求-3" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    完成文件下载功能。</p><h4 id="案例效果-1"><a href="#案例效果-1" class="headerlink" title="案例效果"></a>案例效果</h4><p>​    用户点击页面的链接，浏览器开始下载文件。</p><h4 id="案例分析-3"><a href="#案例分析-3" class="headerlink" title="案例分析"></a>案例分析</h4><ol><li>创建一个页面，展示所有要被下载文件的链接</li><li>链接将要下载的文件名称，发送给服务器的servlet，让servlet进行处理</li><li>服务器加载文件资源</li><li>提示浏览器，以下载的方式，获取服务器资源</li><li>使用IO的方式，将文件数据输出到浏览器（response.getOutputStream()）</li></ol><h4 id="代码实现-3"><a href="#代码实现-3" class="headerlink" title="代码实现"></a>代码实现</h4><ol><li><p>html页面</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">      <span class="token keyword">function</span> <span class="token function">isIE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token comment" spellcheck="true">//获取当前浏览器相关信息</span>          <span class="token keyword">var</span> explorer <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>userAgent<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//判断是否是ie浏览器</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span>explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"msie"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span> <span class="token operator">||</span> explorer<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">"rv:11.0) like gecko"</span><span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">)</span>            <span class="token punctuation">{</span>             <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span>             <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span>      window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isIE</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>              <span class="token comment" spellcheck="true">//在是IE浏览器的情况下，对中文请求参数编码</span>              <span class="token keyword">var</span> str <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"ww"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>href<span class="token punctuation">;</span>              <span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>              document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"ww"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>href <span class="token operator">=</span> str<span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span class="token punctuation">;</span>  </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day03/download?fileName<span class="token punctuation">=</span>1.jpg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>1.jpg<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day03/download?fileName<span class="token punctuation">=</span>2.txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day03/download?fileName<span class="token punctuation">=</span>传智播客.txt<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>传智播客.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li>servlet演示代码</li></ol><pre class="line-numbers language-java"><code class="language-java">   <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletOutputStream<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span>   <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span>   <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>File<span class="token punctuation">;</span>   <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>FileInputStream<span class="token punctuation">;</span>   <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>   <span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>DownLoadUtils<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//urlPatterns = "/download"</span>   <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DownLoadServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>       <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>           <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>       <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>           <span class="token comment" spellcheck="true">//1 获取要下载的文件名称</span>           String fileName <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"fileName"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//2 加载当前文件</span>           <span class="token comment" spellcheck="true">// 注意：需要动态的获取当前文件的目录位置（即使服务器所在目录发生变化，我也可以获取到准确位置）</span>           <span class="token comment" spellcheck="true">// 我们需要使用servletContext , 最后一节课讲解，获取资源路径</span>           ServletContext context <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           String realPath <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getRealPath</span><span class="token punctuation">(</span><span class="token string">"/download"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           File file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span>realPath<span class="token punctuation">,</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//3 提示浏览器，以下载的方式，获取服务器资源</span>           <span class="token comment" spellcheck="true">//响应消息头设置：</span>           <span class="token comment" spellcheck="true">//Content-Type 设置文件媒体格式   getMimeType：1.txt  2.jpg  获取文件的后缀名</span>           response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getMimeType</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//4 处理中文文件名乱码问题</span>           <span class="token comment" spellcheck="true">// 获取浏览器类型，通过请求头中的User-Agent来判断</span>             fileName <span class="token operator">=</span>  DownLoadUtils<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"user-agent"</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//Content-Disposition  设置要被下载的文件名</span>           response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Disposition"</span><span class="token punctuation">,</span> <span class="token string">"attachment;filename="</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//5  将指定文件使用IO技术，向浏览器输出</span>           FileInputStream in <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span>           ServletOutputStream out <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//6 标准IO代码</span>           <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> buf <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span>           <span class="token keyword">int</span> len <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>           <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span>len <span class="token operator">=</span> in<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>buf<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>               out<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>buf<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> len<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token punctuation">}</span>           in<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>       <span class="token punctuation">}</span>   <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li><p>DownloadUtils中的代码(复制即可)</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>UnsupportedEncodingException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URLEncoder<span class="token punctuation">;</span><span class="token keyword">import</span> sun<span class="token punctuation">.</span>misc<span class="token punctuation">.</span>BASE64Encoder<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/* *    根据浏览器的内核,对下载的文件名称进行处理 火狐浏览器使用base64编码 其他都使用url编码*/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DownLoadUtils</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> String <span class="token function">getName</span><span class="token punctuation">(</span>String agent<span class="token punctuation">,</span> String filename<span class="token punctuation">)</span> <span class="token keyword">throws</span> UnsupportedEncodingException <span class="token punctuation">{</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>agent<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">"Firefox"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 火狐浏览器</span>            BASE64Encoder base64Encoder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BASE64Encoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            filename <span class="token operator">=</span> <span class="token string">"=?utf-8?B?"</span> <span class="token operator">+</span> base64Encoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filename<span class="token punctuation">.</span><span class="token function">getBytes</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"?="</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">// 其它浏览器</span>            filename <span class="token operator">=</span> URLEncoder<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">return</span> filename<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="2-4-4-案例3：点击切换验证码"><a href="#2-4-4-案例3：点击切换验证码" class="headerlink" title="2.4.4 案例3：点击切换验证码"></a>2.4.4 案例3：点击切换验证码</h3><h4 id="案例需求-4"><a href="#案例需求-4" class="headerlink" title="案例需求"></a>案例需求</h4><p>​    在页面展示登录验证码,点击此验证码可以更换新的验证码</p><h4 id="案例分析-4"><a href="#案例分析-4" class="headerlink" title="案例分析"></a>案例分析</h4><ol><li>创建一个登录页面页面，展示验证码图片</li><li>配置今天资料中提供的servlet输出验证码图片</li><li>设置页面的点击事件，触发点击事件就重新获取验证码图片</li></ol><h4 id="代码实现-4"><a href="#代码实现-4" class="headerlink" title="代码实现"></a>代码实现</h4><ol><li><p>html页面</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day03/login<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>用户名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>密码<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span>验证码：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>password<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>checkcode<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>/day03/checkcode<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>登录<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>复制验证码servlet ,别忘记在web.xml中配置</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>Color<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>Font<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>Graphics<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>image<span class="token punctuation">.</span>BufferedImage<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Random<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>imageio<span class="token punctuation">.</span>ImageIO<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/checkcode"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CheckcodeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>   <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> 1L<span class="token punctuation">;</span>   <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>      <span class="token comment" spellcheck="true">//  创建画布</span>      <span class="token keyword">int</span> width <span class="token operator">=</span> <span class="token number">120</span><span class="token punctuation">;</span>      <span class="token keyword">int</span> height <span class="token operator">=</span> <span class="token number">40</span><span class="token punctuation">;</span>      BufferedImage bufferedImage <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedImage</span><span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">,</span> BufferedImage<span class="token punctuation">.</span>TYPE_INT_RGB<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  获得画笔</span>      Graphics g <span class="token operator">=</span> bufferedImage<span class="token punctuation">.</span><span class="token function">getGraphics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  填充背景颜色</span>      g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>white<span class="token punctuation">)</span><span class="token punctuation">;</span>      g<span class="token punctuation">.</span><span class="token function">fillRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  绘制边框</span>      g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span>Color<span class="token punctuation">.</span>red<span class="token punctuation">)</span><span class="token punctuation">;</span>      g<span class="token punctuation">.</span><span class="token function">drawRect</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span> height <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  生成随机字符</span>      <span class="token comment" spellcheck="true">//  准备数据</span>      String data <span class="token operator">=</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890"</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  准备随机对象</span>      Random r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  声明一个变量 保存验证码</span>      String code <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  书写4个随机字符</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//  设置字体</span>         g<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Font</span><span class="token punctuation">(</span><span class="token string">"宋体"</span><span class="token punctuation">,</span> Font<span class="token punctuation">.</span>BOLD<span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//  设置随机颜色</span>         g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         String str <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">""</span><span class="token punctuation">;</span>         g<span class="token punctuation">.</span><span class="token function">drawString</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">10</span> <span class="token operator">+</span> i <span class="token operator">*</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">//  将新的字符 保存到验证码中</span>         code <span class="token operator">=</span> code <span class="token operator">+</span> str<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">//  绘制干扰线</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">6</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>         <span class="token comment" spellcheck="true">//  设置随机颜色</span>         g<span class="token punctuation">.</span><span class="token function">setColor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Color</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         g<span class="token punctuation">.</span><span class="token function">drawLine</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>width<span class="token punctuation">)</span><span class="token punctuation">,</span> r<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span>height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token comment" spellcheck="true">//  将验证码 打印到控制台</span>      System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  将验证码放到session中</span>      request<span class="token punctuation">.</span><span class="token function">getSession</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"code_session"</span><span class="token punctuation">,</span> code<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//  将画布显示在浏览器中</span>      ImageIO<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bufferedImage<span class="token punctuation">,</span> <span class="token string">"jpg"</span><span class="token punctuation">,</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>   <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>      <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="3"><li><p>设置页面点击事件的js代码</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">var</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        img<span class="token punctuation">.</span>onclick<span class="token operator">=</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>            img<span class="token punctuation">.</span>src<span class="token operator">=</span><span class="token string">"/day03/checkcode?r="</span><span class="token operator">+</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h1 id="第3章-servletContext"><a href="#第3章-servletContext" class="headerlink" title="第3章 servletContext"></a>第3章 servletContext</h1><p>​    在之前的文件下载案例中，我们使用过了一个对象：servletContext。虽然简单的使用过，但是，想要了解这个对象，我们还需要进一步的学习servletContext。</p><h2 id="3-1-ServletContext的概述"><a href="#3-1-ServletContext的概述" class="headerlink" title="3.1 ServletContext的概述"></a>3.1 ServletContext的概述</h2><p>​    <strong>ServletContext是一个容器（域对象）可以存储键值对数据（String key,Object value），保存在ServletContext中的数据不仅可以提供给所有的servlet使用，而且可以在整个项目范围内使用（后期的过滤器、监听器也可以使用ServletContext）。</strong></p><h2 id="3-2-ServletContext作为域对象"><a href="#3-2-ServletContext作为域对象" class="headerlink" title="3.2 ServletContext作为域对象"></a>3.2 ServletContext作为域对象</h2><p>​    ServletContext中定义了很多方法，在javaweb阶段我最常用的就是将ServletContext作为容器（域对象）使用，因此，接下来我们要学习这个容器（域对象的）API。</p><h3 id="3-2-1-API介绍"><a href="#3-2-1-API介绍" class="headerlink" title="3.2.1 API介绍"></a>3.2.1 API介绍</h3><p>GenericServlet：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span>    ServletContext <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     获取ServletContext对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>ServletContext：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token number">1</span><span class="token punctuation">.</span>     <span class="token keyword">void</span> <span class="token function">setAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> Object object<span class="token punctuation">)</span>    往servletcontext容器中存入数据，name为数据名称，object为数据的值<span class="token number">2</span><span class="token punctuation">.</span>    Object <span class="token function">getAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>    从ServletContext中获取数据，根据指定的数据名称<span class="token number">3</span><span class="token punctuation">.</span>    <span class="token keyword">void</span> <span class="token function">removeAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>    从ServletContext中移除数据，根据指定的数据名称<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-2-2-使用步骤"><a href="#3-2-2-使用步骤" class="headerlink" title="3.2.2 使用步骤"></a>3.2.2 使用步骤</h3><ol><li>创建ServletContextServlet1和ServletContextServlet2</li><li>ServletContextServlet1调用存方法</li><li>ServletContextServlet2调用取方法</li><li>ServletContextServlet2调用删方法</li><li>ServletContextServlet2调用取方法</li></ol><h3 id="3-2-4-演示代码"><a href="#3-2-4-演示代码" class="headerlink" title="3.2.4 演示代码"></a>3.2.4 演示代码</h3><p>ServletContextServlet1：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/context1"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletContextServlet1</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取容器</span>        ServletContext context <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//存入数据</span>        context<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">,</span><span class="token string">"北京"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>ServletContextServlet2：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletContext<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//urlPatterns = "/context2"</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServletContextServlet2</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//获取容器</span>        ServletContext context <span class="token operator">=</span> <span class="token function">getServletContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取数据</span>        String addr <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"存入之后，获取数据："</span><span class="token operator">+</span>addr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//移除数据</span>        context<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//重新获取数据</span>        String addr2 <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> context<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"addr"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"移除之后，获取数据："</span><span class="token operator">+</span>addr2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码准备好之后，分别访问context1和context2，我们会得到一下结果：</p><pre><code>存入之后，获取数据：北京移除之后，获取数据：null</code></pre><p>通过这个结果，我们发现两次请求虽然访问了不同的servlet，但是依然能通过ServletContext共享数据，而且即使是由一个同学先访问，然后由另一个同学访问也是同样的结果。</p><pre><code>总结：保存在ServletContext中的数据是项目全局共享的数据。</code></pre><h2 id="3-3-ServletContext作用总结"><a href="#3-3-ServletContext作用总结" class="headerlink" title="3.3 ServletContext作用总结"></a>3.3 ServletContext作用总结</h2><p><strong>ServletContext对象一共两个作用：</strong></p><ol><li><strong>可以读取资源在当前项目中的文件位置</strong></li><li><strong>可以作为域对象在项目全局范围内提供共享数据</strong></li></ol>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http协议 </tag>
            
            <tag> response </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http协议与request</title>
      <link href="/2019/03/09/2019-03-09-http-xie-yi-yu-request/"/>
      <url>/2019/03/09/2019-03-09-http-xie-yi-yu-request/</url>
      
        <content type="html"><![CDATA[<h1 id="request"><a href="#request" class="headerlink" title="request"></a>request</h1><h1 id="第1章-http协议"><a href="#第1章-http协议" class="headerlink" title="第1章 http协议"></a>第1章 http协议</h1><h2 id="1-1-http协议的基本概念"><a href="#1-1-http协议的基本概念" class="headerlink" title="1.1 http协议的基本概念"></a>1.1 http协议的基本概念</h2><h3 id="1-1-1-http协议的简介"><a href="#1-1-1-http协议的简介" class="headerlink" title="1.1.1 http协议的简介"></a>1.1.1 http协议的简介</h3><p>​    超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。<br>所有的WWW文件都必须遵守这个标准。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。1960年美国人Ted Nelson构思了一种通过计算机处理文本信息的方法，并称之为超文本（hypertext）,这成为了HTTP超文本传输协议标准架构的发展根基。Ted Nelson组织协调万维网协会（World Wide Web Consortium）和互联网工程工作小组（Internet Engineering Task Force ）共同合作研究，最终发布了一系列的RFC，其中著名的RFC 2616定义了HTTP 1.1。<br>​    </p><h3 id="1-1-2-http协议的作用"><a href="#1-1-2-http协议的作用" class="headerlink" title="1.1.2 http协议的作用"></a>1.1.2 http协议的作用</h3><p>​    互联网的数据传输底层依赖tcp协议，http协议架构在tcp协议之上，<strong>它规范了传输数据的内容和格式</strong>。</p><p> <img src="39.png" alt></p><h3 id="1-1-3-HTTP协议的应用场景"><a href="#1-1-3-HTTP协议的应用场景" class="headerlink" title="1.1.3 HTTP协议的应用场景"></a>1.1.3 HTTP协议的应用场景</h3><p> <strong>刷屏软件</strong><img src="37.png" alt></p><p>刷屏软件的原理其实通过观察12306查阅剩余票数需要发出的参数，然后自己编程拼接服务器所需要的参数发给服务器，然后接受服务器的数据。如果需要查看12306发出的请求参数格式，那么就必须学习http协议。</p><p><strong>智能家居</strong></p><p> <img src="38.png" alt></p><p>智能家居在我们的生活中的地位越来越重了，手机是如何操作我们的家庭设备的呢？其实也是手机软件通过拼接参数，然后然后发送给电话煲的，这个过程也是需要使用到http协议的。不管是刷屏软件还是智能家居都需要知道服务器要何种格式的数据，那么我们怎么才能知道呢？我们可以查看浏览器与服务器的通讯过程。</p><h2 id="1-2-浏览器查看浏览器与服务器通讯过程"><a href="#1-2-浏览器查看浏览器与服务器通讯过程" class="headerlink" title="1.2 浏览器查看浏览器与服务器通讯过程"></a>1.2 浏览器查看浏览器与服务器通讯过程</h2><p>​    接下来我们准备开始学习HTTP协议的具体内容，既然要学习内容，必然要先能看的具体的内容，这就需要借助查看http协议内容的工具了，工具一般有两个：</p><h3 id="1-2-1-chrome-谷歌-——按键f12："><a href="#1-2-1-chrome-谷歌-——按键f12：" class="headerlink" title="1.2.1 chrome(谷歌)——按键f12："></a>1.2.1 chrome(谷歌)——按键f12：</h3><p><img src="03.png" alt></p><h3 id="1-2-2-firefox-火狐-——按键f12："><a href="#1-2-2-firefox-火狐-——按键f12：" class="headerlink" title="1.2.2 firefox(火狐)——按键f12："></a>1.2.2 firefox(火狐)——按键f12：</h3><p><img src="04.png" alt></p><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;了解了如何使用工具查看http协议，那么接下来，我正式开始学习里面的内容：</p><h2 id="1-3-请求信息的组成部分"><a href="#1-3-请求信息的组成部分" class="headerlink" title="1.3 请求信息的组成部分"></a>1.3 请求信息的组成部分</h2><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;学习http请求信息的组成，我们的目的是，了解浏览器将那些数据，按照什么样的格式发送给服务器。<br>​    http请求一共分为三个部分：请求行，请求头，请求体。接下来我们要看看具体的内容。</p><p>​    注：演示的时候，我们以谷歌浏览器为例。</p><h3 id="1-3-1-http协议get请求方式："><a href="#1-3-1-http协议get请求方式：" class="headerlink" title="1.3.1 http协议get请求方式："></a>1.3.1 http协议get请求方式：</h3><ol><li><p><strong>创建一个工程day02，在web文件夹中准备一个1.html，内容为：</strong></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://localhost:9090/day02/1.html<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>提交<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol><li><p><strong>地址栏输入<a href="http://localhost:9090/day02/1.html测试效果（get请求）" target="_blank" rel="noopener">http://localhost:9090/day02/1.html测试效果（get请求）</a></strong></p></li><li><p><strong>启动服务器测试，访问1.html</strong></p><p><img src="06.png" alt></p></li></ol><h3 id="1-3-2-http协议post请求方式："><a href="#1-3-2-http协议post请求方式：" class="headerlink" title="1.3.2 http协议post请求方式："></a>1.3.2 http协议post请求方式：</h3><ol><li><p><strong>http协议post请求方式，请求内容：</strong></p><p><img src="07.png" alt></p><p>在观察到请求的三个部分之后，对于每一个部分我们再来详细的介绍。</p></li></ol><h3 id="1-3-3-请求行"><a href="#1-3-3-请求行" class="headerlink" title="1.3.3 请求行"></a>1.3.3 请求行</h3><ol><li><p><strong>请求行介绍</strong>    </p><p><strong>请求行：POST /day02/1.html HTTP/1.1</strong></p><p><strong>POST：请求方式</strong></p><p><strong>/day02/1.html：访问路径</strong></p><p><strong>HTTP/1.1 ：http协议的版本</strong></p></li></ol><ol start="2"><li><p><strong>问：get和post请求方式的区别？</strong></p><p>答：</p></li></ol><table><thead><tr><th></th><th align="right">get请求方式</th><th align="center">post请求方式</th></tr></thead><tbody><tr><td>数据长度是否有限制</td><td align="right">是</td><td align="center">否</td></tr><tr><td>是否包含请求体</td><td align="right">否</td><td align="center">是</td></tr><tr><td>数据是否暴露再地址栏</td><td align="right">是</td><td align="center">否</td></tr></tbody></table><p>​    对于请求行的学习，同学们可以读懂请求行内容，和了解get和post请求方式的区别即可。</p><p>​    接下来我们再来学习第二个部分请求头的内容。</p><h3 id="1-3-4-请求头"><a href="#1-3-4-请求头" class="headerlink" title="1.3.4 请求头"></a>1.3.4 请求头</h3><ol><li><p><strong>请求头内容：(了解)</strong></p><pre><code>Host: localhost:9090 （服务器的域名）Connection: keep-alive （网络连接是持久的）Content-Length: 12        （发送数据的大小，单位字节）Cache-Control: max-age=0  （设置缓存数据的存活时间，单位秒）Origin: http://localhost:9090 （指示了请求来自于哪个站点——服务器名称）Upgrade-Insecure-Requests: 1  （如果存在更安全的响应，客户端优先选择加密及带有身份验证的响应）Content-Type: application/x-www-form-urlencoded （发送数据的媒体类型——发挥作用类似后缀名：.mp3 .avi）User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36 （当前系统和浏览器版本）Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8Referer: http://localhost:9090/day01/1.htmlAccept-Encoding: gzip, deflate, brAccept-Language: zh-CN,zh;q=0.9Cookie: JSESSIONID=98006861B5044ACC8D5C7840C93C17DA</code></pre><p>想要知道这些请求头是干什么的，可以使用火狐浏览器的功能，详细可以回看——浏览器查看浏览器与服务器通讯过程。</p><p>在这所有的请求头中，比较<strong>重要</strong>的有两个，这两个需要记住：</p><pre><code>Referer: http://localhost:9090/day01/1.html上一次请求的地址User-Agent: Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36当前用户的系统和浏览器版本。</code></pre><p>请求头中，同学们熟悉这两个即可。接下来最后就是请求体了。</p></li></ol><h3 id="1-3-5-请求体"><a href="#1-3-5-请求体" class="headerlink" title="1.3.5 请求体"></a>1.3.5 请求体</h3><ol><li><p><strong>请求体内容：</strong></p><p>注意：get请求没有请求体，post请求有请求体<br><img src="10.png" alt></p><p>好到此为止，虽然我们了解了http协议请求相关的内容，但是，光了解不够，我们还需要可以在服务器获取这些数据，才能处理用户的请求，因此，接下来，我们需要学习和使用一个新的对象——Request。</p></li></ol><h1 id="第2章-request对象获取请求信息"><a href="#第2章-request对象获取请求信息" class="headerlink" title="第2章 request对象获取请求信息"></a>第2章 request对象获取请求信息</h1><h2 id="2-1-request对象的基本概念"><a href="#2-1-request对象的基本概念" class="headerlink" title="2.1 request对象的基本概念"></a>2.1 request对象的基本概念</h2><ol><li><p><strong>什么是HttpServletRequest？</strong></p><p><strong>HttpServletRequest对象代表客户端的请求，当客户端通过HTTP协议访问服务器时，HTTP请求中的所有信息都封装在这个对象中，开发人员通过这个对象的方法，可以获得客户这些信息。</strong></p><p>以下是API文档中的介绍：</p><p><img src="12.png" alt></p><p>通过文档阅读可以注意到一个细节HttpServletReuqest不是相关请求的顶级接口，它继承自父接口——ServletRequest：</p><p><img src="13.png" alt></p><p><strong>通过Request对象进行的常用操作:</strong></p><p><strong>获取客户机信息</strong></p><p><strong>获取请求头信息</strong></p><p><strong>获取请求参数</strong></p><p><strong>利用请求域传递对象</strong></p></li><li><p>HttpServlet有许多的API我们从何学起？</p><p>答：我们按照学习http请求组成部分，按——请求行、请求头、请求体顺序学习。</p></li></ol><h2 id="2-2-request获取请求行信息"><a href="#2-2-request获取请求行信息" class="headerlink" title="2.2 request获取请求行信息"></a>2.2 request获取请求行信息</h2><h3 id="2-2-1-请求行的组成元素（通过request获取请求行数据）"><a href="#2-2-1-请求行的组成元素（通过request获取请求行数据）" class="headerlink" title="2.2.1 请求行的组成元素（通过request获取请求行数据）"></a>2.2.1 请求行的组成元素（通过request获取请求行数据）</h3><pre><code>  在http协议中我已经看到了http协议中请求行的内容——分为请求方式、请求路径、协议版本。在HttpServletRequest概述中我们知道浏览器与请求相关的数据封装在request中，因此，接下来我们学习如何使用request对象获取请求行的数据。</code></pre><h3 id="2-2-2-API介绍"><a href="#2-2-2-API介绍" class="headerlink" title="2.2.2 API介绍"></a>2.2.2 API介绍</h3><ol><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span>     获取请求方式的类型<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取请求行中的资源名部分<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">StringBuffer <span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取客户端发出请求完整URL注：    uri<span class="token operator">:</span> 统一资源标识符<span class="token punctuation">,</span>用来标识一个资源<span class="token punctuation">,</span>资源路径。<span class="token punctuation">(</span>相当于身份证<span class="token punctuation">)</span>    url<span class="token operator">:</span> 统一资源定位符<span class="token punctuation">,</span>是一种具体的URI<span class="token punctuation">,</span>可以用来标识一个资源<span class="token punctuation">.</span>并且指明了如何定位一个资源<span class="token punctuation">.</span>    （相当于身份证中的地址）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取当前协议的名称和版本<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    获取IP地址<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">int</span> <span class="token function">getLocalPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    获取端口<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>​    </p></li></ol><h3 id="2-2-3-使用步骤"><a href="#2-2-3-使用步骤" class="headerlink" title="2.2.3 使用步骤"></a>2.2.3 使用步骤</h3><ol><li>创建DemoServlet</li><li>在DemoServlet中的doGet或者doPost方法的参数列表，已经包含了request对象，调用方法即可。</li><li>将数据打印在控制台</li></ol><h3 id="2-2-4-演示代码"><a href="#2-2-4-演示代码" class="headerlink" title="2.2.4 演示代码"></a>2.2.4 演示代码</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DemoServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/demo"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * 1.   String getMethod()                获取请求方式的类型         * */</span>        String method <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取请求方式的类型:"</span><span class="token operator">+</span>method<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 2.   String getRequestURI()                获取请求行中的资源名部分         * */</span>        String requestURI <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取请求行中的资源名部分:"</span><span class="token operator">+</span>requestURI<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 3.   StringBuffer getRequestURL()                获取客户端发出请求完整URL         * */</span>        StringBuffer getRequestURL <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRequestURL</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取客户端发出请求完整URL:"</span><span class="token operator">+</span>getRequestURL<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 4.   String getProtocol()                获取当前协议的名称和版本         * */</span>        String getProtocol <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getProtocol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取当前协议的名称和版本:"</span><span class="token operator">+</span>getProtocol<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 5.   String getRemoteAddr()                获取IP地址         * */</span>        String getRemoteAddr <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getRemoteAddr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取IP地址:"</span><span class="token operator">+</span>getRemoteAddr<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 6.   int getLocalPort()                获取端口         * */</span>        <span class="token keyword">int</span> localPort <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getLocalPort</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"获取端口:"</span><span class="token operator">+</span>localPort<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果一：测试地址——<a href="http://localhost:9090/day02/demo" target="_blank" rel="noopener">http://localhost:9090/day02/demo</a></p><pre class="line-numbers language-java"><code class="language-java">获取请求方式的类型<span class="token operator">:</span>GET获取请求行中的资源名部分<span class="token operator">:</span><span class="token operator">/</span>day02<span class="token operator">/</span>demo获取客户端发出请求完整URL<span class="token operator">:</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">9090</span><span class="token operator">/</span>day02<span class="token operator">/</span>demo获取当前协议的名称和版本<span class="token operator">:</span>HTTP<span class="token operator">/</span><span class="token number">1.1</span>获取IP地址<span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">0</span><span class="token operator">:</span><span class="token number">1</span>获取端口<span class="token operator">:</span><span class="token number">9090</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果二：测试地址——<a href="http://127.0.0.1:9090/day02/demo" target="_blank" rel="noopener">http://127.0.0.1:9090/day02/demo</a></p><pre class="line-numbers language-java"><code class="language-java">获取请求方式的类型<span class="token operator">:</span>GET获取请求行中的资源名部分<span class="token operator">:</span><span class="token operator">/</span>day02<span class="token operator">/</span>demo获取客户端发出请求完整URL<span class="token operator">:</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">9090</span><span class="token operator">/</span>day02<span class="token operator">/</span>demo获取当前协议的名称和版本<span class="token operator">:</span>HTTP<span class="token operator">/</span><span class="token number">1.1</span>获取IP地址<span class="token operator">:</span><span class="token number">127.0</span><span class="token punctuation">.</span><span class="token number">0.1</span>获取端口<span class="token operator">:</span><span class="token number">9090</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>问：为什么要测试两次？</p><p>答：同学们观察下两次打印的IP地址会发现不一样，因此，注意，Localhost和127.0.0.1效果一致，但是localhost默认使用ipv6本机地址——0:0:0:0:0:0:0:1，而127.0.0.1是ipv4的本机地址。</p><h2 id="2-3-request获取请求头信息"><a href="#2-3-request获取请求头信息" class="headerlink" title="2.3 request获取请求头信息"></a>2.3 request获取请求头信息</h2><h3 id="2-3-1-获取请求头信息常用的方法"><a href="#2-3-1-获取请求头信息常用的方法" class="headerlink" title="2.3.1 获取请求头信息常用的方法"></a>2.3.1 获取请求头信息常用的方法</h3><h4 id="2-3-1-1-API介绍"><a href="#2-3-1-1-API介绍" class="headerlink" title="2.3.1.1 API介绍"></a>2.3.1.1 API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getHeader</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  以String 的形式返回指定请求头的值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">Enumeration <span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 返回此请求包含的所有头名称的枚举<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="2-3-1-2-使用步骤"><a href="#2-3-1-2-使用步骤" class="headerlink" title="2.3.1.2 使用步骤"></a>2.3.1.2 使用步骤</h4><ol><li>创建DemoServlet2</li><li>在DemoServlet2中的doGet或者doPost方法的参数列表，已经包含了request对象。因此，调用方法即可。</li><li>将结果打印在控制台</li></ol><h4 id="2-3-1-3-演示代码"><a href="#2-3-1-3-演示代码" class="headerlink" title="2.3.1.3 演示代码"></a>2.3.1.3 演示代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Enumeration<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DemoServlet2"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/demo2"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DemoServlet2</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/**         * 1.   String getHeader(String name)                以 String 的形式返回指定请求头的值         * */</span>        String header <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"getHeader:"</span><span class="token operator">+</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/**         * 2.  Enumeration getHeaderNames()               返回此请求包含的所有头名称的枚举         * */</span>        Enumeration<span class="token operator">&lt;</span>String<span class="token operator">></span> headerNames <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeaderNames</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>headerNames<span class="token punctuation">.</span><span class="token function">hasMoreElements</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"getHeaderNames:"</span><span class="token operator">+</span>headerNames<span class="token punctuation">.</span><span class="token function">nextElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>效果：</p><pre class="line-numbers language-java"><code class="language-java">getHeader<span class="token operator">:</span>Mozilla<span class="token operator">/</span><span class="token number">5</span><span class="token punctuation">.</span><span class="token function">0</span> <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">;</span> WOW64<span class="token punctuation">)</span> AppleWebKit<span class="token operator">/</span><span class="token number">537</span><span class="token punctuation">.</span><span class="token function">36</span> <span class="token punctuation">(</span>KHTML<span class="token punctuation">,</span> like Gecko<span class="token punctuation">)</span> Chrome<span class="token operator">/</span><span class="token number">63.0</span><span class="token punctuation">.</span><span class="token number">3239.132</span> Safari<span class="token operator">/</span><span class="token number">537.36</span>getHeaderNames<span class="token operator">:</span>hostgetHeaderNames<span class="token operator">:</span>connectiongetHeaderNames<span class="token operator">:</span>cache<span class="token operator">-</span>controlgetHeaderNames<span class="token operator">:</span>user<span class="token operator">-</span>agentgetHeaderNames<span class="token operator">:</span>upgrade<span class="token operator">-</span>insecure<span class="token operator">-</span>requestsgetHeaderNames<span class="token operator">:</span>acceptgetHeaderNames<span class="token operator">:</span>accept<span class="token operator">-</span>encodinggetHeaderNames<span class="token operator">:</span>accept<span class="token operator">-</span>languagegetHeaderNames<span class="token operator">:</span>cookie<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-3-2-案例：使用referer实现防盗链"><a href="#2-3-2-案例：使用referer实现防盗链" class="headerlink" title="2.3.2 案例：使用referer实现防盗链"></a>2.3.2 案例：使用referer实现防盗链</h3><h4 id="2-3-2-1-案例需求"><a href="#2-3-2-1-案例需求" class="headerlink" title="2.3.2.1 案例需求"></a>2.3.2.1 案例需求</h4><ol><li><p>问：什么是盗链？</p><p>答：如下图所示。</p><p><img src="40.png" alt></p></li><li><p>问：如何防止盗链？</p><p>答：在上图中用户一共发送两次请求，第一次访问正规服务器中的download.jsp页面，</p><p>第二次访问盗链者服务器中的download.jsp页面，二个download.jsp页面虽然内容相同，</p><p>但来源不相同。</p><p>如果download.jsp中的请求，来源于盗链者服务器，我们就显示不可以下载；</p><p>如果download.jsp中的请求，来源于正规服务器，我们就显示可以下载；</p></li></ol><h4 id="2-3-2-2-案例效果"><a href="#2-3-2-2-案例效果" class="headerlink" title="2.3.2.2 案例效果"></a>2.3.2.2 案例效果</h4><p>​    两次请求同一个域名，显示可以下载</p><p>​    两次请求同不同域名，显示无法下载</p><h4 id="2-3-2-3-案例分析"><a href="#2-3-2-3-案例分析" class="headerlink" title="2.3.2.3 案例分析"></a>2.3.2.3 案例分析</h4><ol><li>创建一个DownloadServlet。</li><li>使用request对象的getHeader方法获取referer请求头信息。</li><li>通过referer判断请求的来源地址，判断是否与当前项目统一。</li></ol><h4 id="2-3-2-4-实现步骤"><a href="#2-3-2-4-实现步骤" class="headerlink" title="2.3.2.4 实现步骤"></a>2.3.2.4 实现步骤</h4><ol><li><p>servlet演示代码：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">/** *  使用referer实现防盗链 *  用户->download.jsp->DownloadServlet */</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DownloadServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/DownloadServlet"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DownloadServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//处理响应中文乱码-明天讲解</span>          response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//获取输出流 往页面上写内容-明天讲解</span>        PrintWriter writer <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取请求头referer</span>        String referer <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"referer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//如果请求头referer存在，且请求来源于正规服务器的download.jsp页面的话</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>referer <span class="token operator">!=</span> null <span class="token operator">&amp;&amp;</span> referer<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">"http://127.0.0.1:8080/day41/download.jsp"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//没有盗链，在浏览器中显示可以下载</span>            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"可以下载"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">//请求来源于盗链者服务器的download.jsp页面的话</span>            writer<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"这是盗链，不可以下载"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        writer<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        writer<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>测试：</p><p>第一次访问正规服务器中的download.jsp页面，并发出下载请求，正规服务器中的DownloadServlet通过验证referer的来源是否合理，这次下载请求来源合理，所以显示“可以下载”。</p></li></ol><p><img src="18.png" alt></p><p>​    测试：</p><p>​        第二次访问盗链者服务器中的download.jsp页面，并发出下载请求，</p><p>​        正规服务器中的DownloadServlet通过验证referer的来源是否合理，这次下载请求来源不合理，</p><p>​        所以显示“这是盗链，不可以下载”。</p><p><img src="19.png" alt></p><h3 id="2-3-3-案例：获取用户当前使用的浏览器版本"><a href="#2-3-3-案例：获取用户当前使用的浏览器版本" class="headerlink" title="2.3.3 案例：获取用户当前使用的浏览器版本"></a>2.3.3 案例：获取用户当前使用的浏览器版本</h3><h4 id="2-3-3-1-案例需求"><a href="#2-3-3-1-案例需求" class="headerlink" title="2.3.3.1 案例需求"></a>2.3.3.1 案例需求</h4><p>​    获取用户当前使用的浏览器版本</p><h4 id="2-3-3-2-案例效果"><a href="#2-3-3-2-案例效果" class="headerlink" title="2.3.3.2 案例效果"></a>2.3.3.2 案例效果</h4><p><img src="20.png" alt></p><h4 id="2-3-3-3-案例分析"><a href="#2-3-3-3-案例分析" class="headerlink" title="2.3.3.3 案例分析"></a>2.3.3.3 案例分析</h4><ol><li>创建UserAgentServlet</li><li>调用request的getHeader方法，获取消息头User-Agent</li><li>打印在控制台上</li></ol><h4 id="2-3-3-4-实现步骤"><a href="#2-3-3-4-实现步骤" class="headerlink" title="2.3.3.4 实现步骤"></a>2.3.3.4 实现步骤</h4><ol><li>servlet演示代码：</li></ol><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"UserAgentServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/userAgent"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserAgentServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        String header <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"User-Agent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"当前用户浏览器相关信息："</span><span class="token operator">+</span>header<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-4-获取请求参数"><a href="#2-4-获取请求参数" class="headerlink" title="2.4 获取请求参数"></a>2.4 获取请求参数</h2><p>​    学习完了对请求行和请求头的内容，最后一部分就是请求体了，在请求体中，包含的是用户通过浏览器发送的请求参数，因此，我们主要学习的就是获取请求参数的方法。</p><h3 id="2-4-1-获取请求参数使用方法"><a href="#2-4-1-获取请求参数使用方法" class="headerlink" title="2.4.1 获取请求参数使用方法"></a>2.4.1 获取请求参数使用方法</h3><h4 id="2-4-1-1-API介绍"><a href="#2-4-1-1-API介绍" class="headerlink" title="2.4.1.1 API介绍"></a>2.4.1.1 API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getParameter</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  根据表单的name属性 获取对应的值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">String<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">getParameterValues</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  获取name相同的所有value 例如复选框。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">Map    <span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  参数名作为key，参数值作为value，封装到map中。<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="2-4-1-2-使用步骤"><a href="#2-4-1-2-使用步骤" class="headerlink" title="2.4.1.2 使用步骤"></a>2.4.1.2 使用步骤</h4><ol><li><p>准备html页面：getParam.html</p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span>    <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>head<span class="token operator">></span>        <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"/day02/getParam"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span>        用户名：<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">></span><span class="token operator">&lt;</span>br<span class="token operator">></span>        爱    好：<span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"hobby"</span> value<span class="token operator">=</span><span class="token string">"football"</span><span class="token operator">></span>足球        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">"hobby"</span> value<span class="token operator">=</span><span class="token string">"basketball"</span><span class="token operator">></span>篮球<span class="token operator">&lt;</span>br<span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"提交"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>创建GetParameterServlet</p></li><li><p>再GetParameterServlet中的doGet和doPost方法的参数列表，已经包含了request对象，调用相应方法即可。</p></li></ol><h4 id="2-4-1-3-演示代码"><a href="#2-4-1-3-演示代码" class="headerlink" title="2.4.1.3 演示代码"></a>2.4.1.3 演示代码</h4><pre class="line-numbers language-java"><code class="language-java">    <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span>    <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span>    <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span>    <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span>    <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span>    <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span>    <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>    <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>    <span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"GetParameterServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/getParam"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GetParameterServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>            <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>            <span class="token comment" spellcheck="true">/**             * 1.   String    getParameter(String name)                     根据表单的name属性 获取对应的值             * */</span>            String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/**             * 2.   String[]    getParameterValues(String name)                    获取name相同的所有value 例如复选框。             * */</span>            String<span class="token punctuation">[</span><span class="token punctuation">]</span> hobbies <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterValues</span><span class="token punctuation">(</span><span class="token string">"hobby"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>String hobby <span class="token operator">:</span> hobbies<span class="token punctuation">)</span> <span class="token punctuation">{</span>                System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>hobby<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token comment" spellcheck="true">/**             * 3.    Map    getParameterMap()                     参数名作为key，参数值作为value，封装到map中。             * */</span>            Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> map <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>String key <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">keySet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                <span class="token keyword">for</span> <span class="token punctuation">(</span>String s <span class="token operator">:</span> map<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>                    System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-2-乱码解决"><a href="#2-4-2-乱码解决" class="headerlink" title="2.4.2 乱码解决"></a>2.4.2 乱码解决</h3><h4 id="2-4-2-1-请求参数乱码的由来"><a href="#2-4-2-1-请求参数乱码的由来" class="headerlink" title="2.4.2.1 请求参数乱码的由来"></a>2.4.2.1 请求参数乱码的由来</h4><p>我们在输入一些中文数据提交给服务器的时候，服务器解析显示出来的一堆无意义的字符，就是乱码。<br>那么这个乱码是如何出现的呢？如下图所示：</p><p><img src="21.png" alt></p><p>有乱码那么必须处理乱码，不同的请求方式处理乱码操作不同。</p><h4 id="2-4-2-2-API介绍"><a href="#2-4-2-2-API介绍" class="headerlink" title="2.4.2.2 API介绍"></a>2.4.2.2 API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span>String env<span class="token punctuation">)</span>设置请求体的编码<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><h4 id="2-4-2-3-使用步骤"><a href="#2-4-2-3-使用步骤" class="headerlink" title="2.4.2.3 使用步骤"></a>2.4.2.3 使用步骤</h4><ol><li>创建EncodingServlet</li><li>在EncodingServlet的doPost或者doGet方法中第一行，调用setCharacterEncoding方法设置编码</li><li>然后获取请求参数</li></ol><h4 id="2-4-2-4-注意事项"><a href="#2-4-2-4-注意事项" class="headerlink" title="2.4.2.4 注意事项"></a>2.4.2.4 注意事项</h4><ol><li>获取请求参数之后，调用setCharacterEncoding方法无效</li></ol><h4 id="2-4-2-5-演示代码"><a href="#2-4-2-5-演示代码" class="headerlink" title="2.4.2.5 演示代码"></a>2.4.2.5 演示代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"EncodingServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/encoding"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EncodingServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>       <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//处理post请求乱码</span>        request<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String username <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-4-3-案例：使用BeanUtils封装表单提交的数据到javaBean对象中"><a href="#2-4-3-案例：使用BeanUtils封装表单提交的数据到javaBean对象中" class="headerlink" title="2.4.3 案例：使用BeanUtils封装表单提交的数据到javaBean对象中"></a>2.4.3 案例：使用BeanUtils封装表单提交的数据到javaBean对象中</h3><h4 id="2-4-3-1-案例需求"><a href="#2-4-3-1-案例需求" class="headerlink" title="2.4.3.1 案例需求"></a>2.4.3.1 案例需求</h4><p>​    <strong>现在我们已经可以使用request对象来获取请求参数，但是，如果参数过多，我们就需要将数据封装到对象。</strong><br>​    <strong>以前封装数据的时候，实体类有多少个字段，我们就需要手动编码调用多少次setXXX方法，因此，我们需要BeanUtils来解决这个问题。</strong></p><h4 id="2-4-3-2-案例效果"><a href="#2-4-3-2-案例效果" class="headerlink" title="2.4.3.2 案例效果"></a>2.4.3.2 案例效果</h4><p>​    <strong>使用BeanUtils，完成数据的封装到实体类。</strong></p><h4 id="2-4-3-3-案例分析"><a href="#2-4-3-3-案例分析" class="headerlink" title="2.4.3.3 案例分析"></a>2.4.3.3 案例分析</h4><ol><li>设置一个登录页面准备提交表单数据（username、password）</li><li>导入BeanUtils相关jar包</li><li>创建Servlet获取请求参数</li><li>调用BeanUtils.populate方法封装数据</li></ol><h4 id="2-4-3-4-实现步骤"><a href="#2-4-3-4-实现步骤" class="headerlink" title="2.4.3.4 实现步骤"></a>2.4.3.4 实现步骤</h4><ol><li><p><strong>准备登录页面：</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span><span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"/day02/login"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>table<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span>用户名<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span>密码<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>        <span class="token operator">&lt;</span>tr<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>            <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"登录"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>        <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p><strong>在web目录下创建WEB-INF\lib文件夹，导入BeanUtils相关jar包</strong></p><pre class="line-numbers language-java"><code class="language-java">commons<span class="token operator">-</span>beanutils<span class="token operator">-</span><span class="token number">1.8</span><span class="token punctuation">.</span><span class="token number">3</span><span class="token punctuation">.</span>jarcommons<span class="token operator">-</span>logging<span class="token operator">-</span><span class="token number">1.1</span><span class="token punctuation">.</span><span class="token number">1</span><span class="token punctuation">.</span>jar<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li></ol><ol start="3"><li><p><strong>注意：导入完成还要关联jar包到项目</strong></p><p><img src="23.png" alt></p><p>  <img src="24.png" alt><br>  <img src="25.png" alt><br>  <img src="26.png" alt><br>  点击OK，完成关联。</p></li><li><p>导入实体类User</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token keyword">private</span> String password<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"User [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", username="</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">", password="</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><pre><code>5. servlet代码：封装表单数据到User对象   ```java   package cn.itcast.web;   import cn.itcast.domain.User;   import org.apache.commons.beanutils.BeanUtils;   import javax.servlet.ServletException;   import javax.servlet.annotation.WebServlet;   import javax.servlet.http.HttpServlet;   import javax.servlet.http.HttpServletRequest;   import javax.servlet.http.HttpServletResponse;   import java.io.IOException;   import java.lang.reflect.InvocationTargetException;   import java.util.Map;   @WebServlet(name = &quot;LoginServlet&quot;,urlPatterns = &quot;/login&quot;)   public class LoginServlet extends HttpServlet {     protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {       doGet(request,response);     }     protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {       //获取请求参数       Map&lt;String, String[]&gt; map = request.getParameterMap();       //创建要封装数据的对象       User user = new User();       //封装前打印一次数据       System.out.println(user);       try {         //封装数据         BeanUtils.populate(user, map);       } catch (Exception e) {         e.printStackTrace();       }       //封装后打印一次数据       System.out.println(user);     }   }</code></pre><p>   效果：</p><pre><code>  ![](28.png)</code></pre><h2 id="2-5-request的其他作用"><a href="#2-5-request的其他作用" class="headerlink" title="2.5 request的其他作用"></a>2.5 request的其他作用</h2><h3 id="2-5-1-获取项目路径"><a href="#2-5-1-获取项目路径" class="headerlink" title="2.5.1 获取项目路径"></a>2.5.1 获取项目路径</h3><h4 id="2-5-1-1-API介绍"><a href="#2-5-1-1-API介绍" class="headerlink" title="2.5.1.1 API介绍"></a>2.5.1.1 API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java">String <span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  获取项目路径<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="2-5-1-2-使用步骤"><a href="#2-5-1-2-使用步骤" class="headerlink" title="2.5.1.2 使用步骤"></a>2.5.1.2 使用步骤</h4><ol><li>创建ContextPathServlet</li><li>直接通过request对象调用getContextPath方法获取项目路径</li><li>打印在控制台上</li></ol><h4 id="2-5-1-3-演示代码"><a href="#2-5-1-3-演示代码" class="headerlink" title="2.5.1.3 演示代码"></a>2.5.1.3 演示代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ContextPathServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/context"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ContextPathServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>       <span class="token comment" spellcheck="true">//获取当前项目路径</span>        String contextPath <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getContextPath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>contextPath<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-2-域对象"><a href="#2-5-2-域对象" class="headerlink" title="2.5.2 域对象"></a>2.5.2 域对象</h3><p>问：什么是域对象？</p><p>答：域对象是一个容器，这种容器主要用于servlet与servlet之间的数据传输使用的 .</p><p>​    今天讲解的request域对象,就可以在<strong>一次请求中的多个servlet之间</strong>进行数据共享.</p><h4 id="2-5-2-1-域对象的API介绍"><a href="#2-5-2-1-域对象的API介绍" class="headerlink" title="2.5.2.1 域对象的API介绍"></a>2.5.2.1 域对象的API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">setAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">,</span> Object o<span class="token punctuation">)</span>  设置数据到域中<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java">Object <span class="token function">getAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  从域中获取数据<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">removeAttribute</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span>  从域中移除数据<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="2-5-2-2-request域对象的使用"><a href="#2-5-2-2-request域对象的使用" class="headerlink" title="2.5.2.2 request域对象的使用"></a>2.5.2.2 request域对象的使用</h4><ol><li>创建ScopeServlet</li><li>调用request对象存（setAttribute）取（getAttribute）删（removeAttribute）方法</li><li>在保存和删除方法调用完成之后，都是的获取方法获取数据，打印在控制台上</li></ol><h4 id="2-5-2-3-注意事项"><a href="#2-5-2-3-注意事项" class="headerlink" title="2.5.2.3 注意事项"></a>2.5.2.3 注意事项</h4><p>​    <strong>以上三个方法都是操作request中域对象的数据，与请求参数无关。</strong></p><h4 id="2-5-2-4-演示代码"><a href="#2-5-2-4-演示代码" class="headerlink" title="2.5.2.4 演示代码"></a>2.5.2.4 演示代码</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"ScopeServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/scope"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ScopeServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">//存入数据</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获取数据</span>        String name1 <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//移除数据</span>        request<span class="token punctuation">.</span><span class="token function">removeAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String name2 <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name2<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-5-3-请求转发"><a href="#2-5-3-请求转发" class="headerlink" title="2.5.3  请求转发"></a>2.5.3  请求转发</h3><h4 id="2-5-3-1-什么是请求转发？"><a href="#2-5-3-1-什么是请求转发？" class="headerlink" title="2.5.3.1 什么是请求转发？"></a>2.5.3.1 什么是请求转发？</h4><p><img src="29.png" alt></p><h4 id="2-5-3-2-API介绍"><a href="#2-5-3-2-API介绍" class="headerlink" title="2.5.3.2 API介绍"></a>2.5.3.2 API介绍</h4><ol><li><pre class="line-numbers language-java"><code class="language-java">RequestDispatcher <span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span>String path<span class="token punctuation">)</span> 获取请求转发器（request对象方法）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">void</span> <span class="token function">forward</span><span class="token punctuation">(</span>ServletRequest request<span class="token punctuation">,</span> ServletResponse response<span class="token punctuation">)</span> 将请求转发到另一个资源（servlet）上（RequestDispatcher对象的方法）<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="2-5-3-3-使用步骤"><a href="#2-5-3-3-使用步骤" class="headerlink" title="2.5.3.3 使用步骤"></a>2.5.3.3 使用步骤</h4><ol><li>先通过请求对象获取转发器</li><li>再调用转发器转发方法，转发请求​</li></ol><h4 id="2-5-3-4-演示代码"><a href="#2-5-3-4-演示代码" class="headerlink" title="2.5.3.4 演示代码"></a>2.5.3.4 演示代码</h4><ol><li><p>DispatcherServlet：</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"DispatcherServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/dispatcher"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DispatcherServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"对用户请求第一次处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">,</span><span class="token string">"test_data"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/test"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>TestServlet:</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span><span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span><span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"TestServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/test"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"对用户请求第二次处理"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        String result <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"result"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><h3 id="2-5-4-案例：-实现登录功能"><a href="#2-5-4-案例：-实现登录功能" class="headerlink" title="2.5.4 案例： 实现登录功能"></a>2.5.4 案例： 实现登录功能</h3><h4 id="2-5-4-1-案例需求"><a href="#2-5-4-1-案例需求" class="headerlink" title="2.5.4.1 案例需求"></a>2.5.4.1 案例需求</h4><p>​    实现用户登录功能。</p><h4 id="2-5-4-2-案例效果"><a href="#2-5-4-2-案例效果" class="headerlink" title="2.5.4.2 案例效果"></a>2.5.4.2 案例效果</h4><p>​    用户名和密码正确，显示登录成功</p><p>​    用户名和密码错误，显示登录失败</p><h4 id="2-5-4-3-案例分析"><a href="#2-5-4-3-案例分析" class="headerlink" title="2.5.4.3 案例分析"></a>2.5.4.3 案例分析</h4><ol><li>设置一个登录页面准备提交表单数据（username、password）</li></ol><ol><li>导入相关jar包（BeanUtils、druid、mysql驱动、JDBCTempldate）</li></ol><ol><li><p>登录案例流程图：</p><p><img src="30.png" alt></p></li></ol><h4 id="2-5-4-4-实现步骤"><a href="#2-5-4-4-实现步骤" class="headerlink" title="2.5.4.4 实现步骤"></a>2.5.4.4 实现步骤</h4><ol><li><p>准备登录页面：</p><pre class="line-numbers language-java"><code class="language-java">      <span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span>      <span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span>      <span class="token operator">&lt;</span>head<span class="token operator">></span>          <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>title<span class="token operator">></span>Title<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>      <span class="token operator">&lt;</span>body<span class="token operator">></span>      <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"/day02/login"</span> method<span class="token operator">=</span><span class="token string">"post"</span><span class="token operator">></span>          <span class="token operator">&lt;</span>table<span class="token operator">></span>              <span class="token operator">&lt;</span>tr<span class="token operator">></span>                  <span class="token operator">&lt;</span>td<span class="token operator">></span>用户名<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                  <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> name<span class="token operator">=</span><span class="token string">"username"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>              <span class="token operator">&lt;</span>tr<span class="token operator">></span>                  <span class="token operator">&lt;</span>td<span class="token operator">></span>密码<span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                  <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"password"</span> name<span class="token operator">=</span><span class="token string">"password"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>              <span class="token operator">&lt;</span>tr<span class="token operator">></span>                  <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>                  <span class="token operator">&lt;</span>td<span class="token operator">></span><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"登录"</span><span class="token operator">/</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>td<span class="token operator">></span>              <span class="token operator">&lt;</span><span class="token operator">/</span>tr<span class="token operator">></span>          <span class="token operator">&lt;</span><span class="token operator">/</span>table<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>      <span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="2"><li><p>在web目录下创建WEB-INF\lib文件夹，导入相关jar包（今天资料文件夹中有）</p><blockquote><p>注意：导入完成还要关联jar包到项目</p></blockquote></li><li><p>导入实体类User（今天资料文件夹中有）</p><pre class="line-numbers language-java"><code class="language-java">      <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>          <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>          <span class="token keyword">private</span> String username<span class="token punctuation">;</span>          <span class="token keyword">private</span> String password<span class="token punctuation">;</span>          <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> id<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setId</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">public</span> String <span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> username<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUsername</span><span class="token punctuation">(</span>String username<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>username <span class="token operator">=</span> username<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">public</span> String <span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> password<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setPassword</span><span class="token punctuation">(</span>String password<span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">this</span><span class="token punctuation">.</span>password <span class="token operator">=</span> password<span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token annotation punctuation">@Override</span>          <span class="token keyword">public</span> String <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>              <span class="token keyword">return</span> <span class="token string">"User [id="</span> <span class="token operator">+</span> id <span class="token operator">+</span> <span class="token string">", username="</span> <span class="token operator">+</span> username <span class="token operator">+</span> <span class="token string">", password="</span> <span class="token operator">+</span> password <span class="token operator">+</span> <span class="token string">"]"</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="4"><li><p>导入配置文件（druid-config.properties）和工具类（JDBCUtils）（今天资料文件夹中有）：</p><pre><code>  druid-config.properties:</code></pre></li></ol><pre class="line-numbers language-java"><code class="language-java">         driverClass<span class="token operator">:</span>com<span class="token punctuation">.</span>mysql<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>Driver         jdbcUrl<span class="token operator">:</span>jdbc<span class="token operator">:</span>mysql<span class="token operator">:</span><span class="token operator">/</span><span class="token comment" spellcheck="true">//day02</span>         username<span class="token operator">:</span>root         password<span class="token operator">:</span>root<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li><p>JDBCUtils:</p><pre class="line-numbers language-java"><code class="language-java">           <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">;</span>         <span class="token keyword">import</span> com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>pool<span class="token punctuation">.</span>DruidDataSource<span class="token punctuation">;</span>         <span class="token keyword">import</span> javax<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DataSource<span class="token punctuation">;</span>         <span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span>         <span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>SQLException<span class="token punctuation">;</span>         <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ResourceBundle<span class="token punctuation">;</span>         <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JDBCUtils</span> <span class="token punctuation">{</span>             <span class="token keyword">private</span> <span class="token keyword">static</span> DruidDataSource dc <span class="token operator">=</span>  <span class="token keyword">new</span> <span class="token class-name">DruidDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token keyword">static</span> <span class="token punctuation">{</span>                 ResourceBundle bundle <span class="token operator">=</span> ResourceBundle<span class="token punctuation">.</span><span class="token function">getBundle</span><span class="token punctuation">(</span><span class="token string">"druid-config"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 String driverClass <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"driverClass"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 String jdbcUrl <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"jdbcUrl"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 String username <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 String password <span class="token operator">=</span> bundle<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 dc<span class="token punctuation">.</span><span class="token function">setDriverClassName</span><span class="token punctuation">(</span>driverClass<span class="token punctuation">)</span><span class="token punctuation">;</span>                 dc<span class="token punctuation">.</span><span class="token function">setUrl</span><span class="token punctuation">(</span>jdbcUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>                 dc<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>                 dc<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">public</span> <span class="token keyword">static</span> Connection <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> SQLException <span class="token punctuation">{</span>                 <span class="token keyword">return</span> dc<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">public</span> <span class="token keyword">static</span> DataSource <span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                 <span class="token keyword">return</span> dc<span class="token punctuation">;</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><ol start="6"><li><p>servlet代码：</p><pre class="line-numbers language-java"><code class="language-java">      <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span>         <span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UserDao<span class="token punctuation">;</span>         <span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span>         <span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>commons<span class="token punctuation">.</span>beanutils<span class="token punctuation">.</span>BeanUtils<span class="token punctuation">;</span>         <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span>         <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span>         <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span>         <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span>         <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span>         <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>         <span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Map<span class="token punctuation">;</span>         <span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"LoginServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/login"</span><span class="token punctuation">)</span>         <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>             <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>                 <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token punctuation">}</span>             <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>                 <span class="token comment" spellcheck="true">//获取请求参数</span>                 Map<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">></span> map <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getParameterMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token comment" spellcheck="true">//创建要封装数据的对象</span>                 User user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">try</span> <span class="token punctuation">{</span>                     <span class="token comment" spellcheck="true">//封装数据</span>                     BeanUtils<span class="token punctuation">.</span><span class="token function">populate</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> map<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>                     e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>                 <span class="token comment" spellcheck="true">//去数据库中查询用户,可以直接放查询代码;建议使用dao</span>                 UserDao userDao <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UserDao</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 User loginUser <span class="token operator">=</span> userDao<span class="token punctuation">.</span><span class="token function">login</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span>                 response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/html;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token keyword">if</span><span class="token punctuation">(</span>loginUser <span class="token operator">!=</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span>                     response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"登录成功！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>                     request<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">,</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                     request<span class="token punctuation">.</span><span class="token function">getRequestDispatcher</span><span class="token punctuation">(</span><span class="token string">"/loginFail"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forward</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>                 <span class="token punctuation">}</span>             <span class="token punctuation">}</span>         <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><hr><pre class="line-numbers language-java"><code class="language-java">  <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>web<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>ServletException<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>WebServlet<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServlet<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletRequest<span class="token punctuation">;</span>  <span class="token keyword">import</span> javax<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>http<span class="token punctuation">.</span>HttpServletResponse<span class="token punctuation">;</span>  <span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException<span class="token punctuation">;</span>  <span class="token annotation punctuation">@WebServlet</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">"LoginFailServlet"</span><span class="token punctuation">,</span>urlPatterns <span class="token operator">=</span> <span class="token string">"/loginFail"</span><span class="token punctuation">)</span>  <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginFailServlet</span> <span class="token keyword">extends</span> <span class="token class-name">HttpServlet</span> <span class="token punctuation">{</span>     <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doPost</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>     <span class="token function">doGet</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>     <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doGet</span><span class="token punctuation">(</span>HttpServletRequest request<span class="token punctuation">,</span> HttpServletResponse response<span class="token punctuation">)</span> <span class="token keyword">throws</span> ServletException<span class="token punctuation">,</span> IOException <span class="token punctuation">{</span>     String name <span class="token operator">=</span> <span class="token punctuation">(</span>String<span class="token punctuation">)</span> request<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">"用户："</span><span class="token operator">+</span>name<span class="token operator">+</span><span class="token string">"登录失败！！！"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="7"><li><p>dao代码</p><pre class="line-numbers language-java"><code class="language-java">      <span class="token keyword">package</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">;</span>      <span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>dao<span class="token punctuation">.</span>UserDao<span class="token punctuation">;</span>      <span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>User<span class="token punctuation">;</span>      <span class="token keyword">import</span> cn<span class="token punctuation">.</span>itcast<span class="token punctuation">.</span>utils<span class="token punctuation">.</span>JDBCUtils<span class="token punctuation">;</span>      <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>BeanPropertyRowMapper<span class="token punctuation">;</span>      <span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>jdbc<span class="token punctuation">.</span>core<span class="token punctuation">.</span>JdbcTemplate<span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDao</span> <span class="token punctuation">{</span>        <span class="token keyword">private</span> JdbcTemplate template <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcTemplate</span><span class="token punctuation">(</span>JDBCUtils<span class="token punctuation">.</span><span class="token function">getDataSource</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">public</span> User <span class="token function">login</span><span class="token punctuation">(</span>User user<span class="token punctuation">)</span> <span class="token punctuation">{</span>          String sql <span class="token operator">=</span> <span class="token string">"select * from user where username = ? and password = ?"</span><span class="token punctuation">;</span>          <span class="token keyword">try</span> <span class="token punctuation">{</span>            User query <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">queryForObject</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">BeanPropertyRowMapper</span><span class="token operator">&lt;</span>User<span class="token operator">></span><span class="token punctuation">(</span>User<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> user<span class="token punctuation">.</span><span class="token function">getPassword</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> query<span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">{</span>            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> null<span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol><p>   ​</p>]]></content>
      
      
      <categories>
          
          <category> HTTP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http协议 </tag>
            
            <tag> request </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html学习04_js高级</title>
      <link href="/2019/03/05/2019-03-05-html-xue-xi-04-js-gao-ji/"/>
      <url>/2019/03/05/2019-03-05-html-xue-xi-04-js-gao-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript高级"><a href="#JavaScript高级" class="headerlink" title="JavaScript高级"></a>JavaScript高级</h1><h2 id="一-BOM对象"><a href="#一-BOM对象" class="headerlink" title="一 BOM对象"></a>一 BOM对象</h2><h3 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h3><p>浏览器对象模型（Browser Object Model），我们把浏览器抽取成对象模型，可以模拟一些浏览器的功能</p><p>history==历史记录  window ==窗口（弹窗/定时器） location==地址栏  BOM==浏览器</p><p><strong>window对象</strong></p><p>对话框</p><pre class="line-numbers language-js"><code class="language-js"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">--</span><span class="token operator">-</span>》 console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 在浏览器控制台输出信息<span class="token function">confirm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 确定 <span class="token boolean">true</span>  取消 <span class="token boolean">false</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'消息内容'</span><span class="token punctuation">,</span><span class="token string">'默认值'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 确定 输入的内容 取消 <span class="token keyword">null</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>定时器</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 复用性定时器</span><span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token string">'函数名()'</span><span class="token punctuation">,</span>间隔时间<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 一次性定时器</span><span class="token keyword">var</span> number <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token string">'函数名()'</span><span class="token punctuation">,</span>间隔时间<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">clearTimeout</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改标签体内容</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 修改超文本</span>dom元素<span class="token punctuation">.</span>innerHtml<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span>  <span class="token operator">+</span><span class="token operator">=</span> 追加<span class="token comment" spellcheck="true">// 修改文本</span>dom元素<span class="token punctuation">.</span>innerText<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">;</span> <span class="token operator">+</span><span class="token operator">=</span> 追加<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>location对象</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 当前URL地址信息</span>location<span class="token punctuation">.</span>href<span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 刷新当前页面</span>location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>history对象</strong></p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 前进</span>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 后退</span>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 刷新当前页面</span>history<span class="token punctuation">.</span><span class="token function">go</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="1-2-window对象"><a href="#1-2-window对象" class="headerlink" title="1.2 window对象"></a>1.2 window对象</h3><p>模拟浏览器窗口</p><h4 id="a）对话框"><a href="#a）对话框" class="headerlink" title="a）对话框"></a>a）对话框</h4><pre><code>&lt;script&gt;    /*    * 对话框    *   1）警告框：window.alert(&#39;消息内容&#39;);    *   2）确认框：window.confirm(&#39;消息内容&#39;); 确定返回true，取消返回false    *   3）输入框：window.prompt(&#39;消息内容&#39;,&#39;默认值&#39;); 确定返回输入的值，取消返回null    *    * */    // window.alert(&#39;警告框&#39;);    // console.log(window.confirm(&#39;班主任美不美？&#39;));    console.log(window.prompt(&#39;5+4=?&#39;,&#39;请输入正确的结果...&#39;));&lt;/script&gt;</code></pre><h4 id="b）定时器"><a href="#b）定时器" class="headerlink" title="b）定时器"></a>b）定时器</h4><pre><code>&lt;script&gt;    /*    * 定时器    *   1）复用性定时器（轮播图）    *       格式：    *           var number = window.setInterval(&#39;函数名()&#39;,间隔时间); 定时器根据指定的间隔时间，执行函数，无限循环，返回定时器编号    *           var number = window.setInterval(函数名,间隔时间); 定时器根据指定的间隔时间，执行函数，无限循环，返回定时器编号    *           clearInterval(定时器编号);    *    *   2）一次性定时器（广告弹框）    *       格式：    *          var number =  window.setTimeout(&#39;函数名()&#39;,间隔时间); 定期是根据制定的间隔时间，执行函数，仅执行一次，返回定时器编号    *          var number =  window.setTimeout(函数名,间隔时间); 定期是根据制定的间隔时间，执行函数，仅执行一次，返回定时器编号    *          clearTimeout(定时器编号);    *    *    *    *      window 是浏览器的默认对象，它在调用方法或属性时，可以省略不写    * */    function sing() {        alert(&#39;燃烧我的卡路里&#39;);    }    // var interval = setInterval(&#39;sing()&#39;, 2000);    // 绑定单击事件    document.getElementById(&#39;myBtn1&#39;).onclick = function () {        clearInterval(interval);    }    function dance() {        alert(&#39;尬舞.....&#39;);    }    var timeout = setTimeout(&#39;dance()&#39;,2000);    // 绑定单击事件    document.getElementById(&#39;myBtn2&#39;).onclick=function () {        clearTimeout(timeout);    }&lt;/script&gt;</code></pre><h4 id="c）案例：会动的时钟"><a href="#c）案例：会动的时钟" class="headerlink" title="c）案例：会动的时钟!"></a>c）案例：会动的时钟!</h4><p><img src="1.png" alt></p><h4 id="技术分析"><a href="#技术分析" class="headerlink" title="技术分析**"></a>技术分析**</h4><pre><code>&lt;script&gt;    // 获取div的 dom对象    var myDiv = document.getElementById(&#39;myDiv&#39;);    // 点击按钮修改div的内容    document.getElementById(&#39;myBtn&#39;).onclick = function () {        // 方式一 修改标签体内的超文本        // myDiv.innerHTML = &#39;&lt;h3&gt;我被修改了&lt;/h3&gt;&#39;;        // 方式二 修改标签体内的文本        myDiv.innerText +=&#39;&lt;h3&gt;我被修改了&lt;/h3&gt;&#39;;    }&lt;/script&gt;</code></pre><h3 id="1-3-location对象"><a href="#1-3-location对象" class="headerlink" title="1.3 location对象"></a>1.3 location对象</h3><p>模拟浏览器窗口的地址栏</p><h4 id="a）属性和方法"><a href="#a）属性和方法" class="headerlink" title="a）属性和方法"></a>a）属性和方法</h4><pre><code>&lt;script&gt;    /*    * location对象    *   1）地址栏的信息：location.href    *    *   2）页面刷新 : location.reload();    *    * */    // 获取当前的url地址    console.log(location.href);    // 跳转到新页面  绝对路径    // location.href=&#39;https://www.baidu.com&#39;;    // 点击按钮，刷新页面    document.getElementById(&#39;myBtn&#39;).onclick = function () {        location.reload();    }&lt;/script&gt;</code></pre><h4 id="b）案例：页面倒计时跳转"><a href="#b）案例：页面倒计时跳转" class="headerlink" title="b）案例：页面倒计时跳转"></a>b）案例：页面倒计时跳转</h4><p>课下思考题，必须完成</p><h3 id="1-4-history对象"><a href="#1-4-history对象" class="headerlink" title="1.4 history对象"></a>1.4 history对象</h3><p>模拟浏览器窗口的历史记录</p><pre><code>&lt;body&gt;&lt;a href=&quot;./06_history后退.html&quot;&gt;演示历史记录&lt;/a&gt;&lt;button onclick=&quot;history.go(1);&quot;&gt;前进&lt;/button&gt;&lt;button onclick=&quot;history.go(0);&quot;&gt;刷新&lt;/button&gt;&lt;/body&gt;&lt;script&gt;    /*    * 历史记录    *   1）前进：history.forward();    *   2）后退：history.back()    *    *   3）前进：hisotry.go(1);    *   4）后退：hisotry.go(-1);    *   5）刷新：history.go(0);    *    * */&lt;/script&gt;</code></pre><h2 id="二-DOM对象"><a href="#二-DOM对象" class="headerlink" title="二 DOM对象"></a>二 DOM对象</h2><h3 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h3><p>文档对象模型（Document Object Model）</p><p>html标签通过浏览器加载到内存会生成一颗DOM树，我们可以通过js代码获取这颗树的任意一个节点（标签、元素、节点），可以修改节点的属性或文本<img src="2.png" alt></p><pre><code>// 获取一个节点document.getElementById(&#39;id属性的值&#39;);// 获取一组节点document.getElementsByTagName(&#39;html标签&#39;);document.getElementsByName(&quot;name属性的值&quot;);document.getElementsByClassName(&#39;class属性的值&#39;);</code></pre><h4 id="a）案例：查找节点"><a href="#a）案例：查找节点" class="headerlink" title="a）案例：查找节点"></a>a）案例：查找节点</h4><h4 id="b）案例：全选、反选"><a href="#b）案例：全选、反选" class="headerlink" title="b）案例：全选、反选"></a>b）案例：全选、反选</h4><h4 id="c）案例：省市联动"><a href="#c）案例：省市联动" class="headerlink" title="c）案例：省市联动"></a>c）案例：省市联动</h4><h3 id="2-3-js修改css样式"><a href="#2-3-js修改css样式" class="headerlink" title="2.3 js修改css样式"></a>2.3 js修改css样式</h3><pre><code>// 通过js直接修改样式 （不建议，耦合性，繁琐）dom元素.style.样式名=&#39;样式值&#39;;    注意：        css中：font-size        js中：fontSize （小驼峰式命名）// js结合类选择器修改样式 （解耦，简洁）dom元素.className=&quot;类选择器&quot;;</code></pre><h4 id="a）案例：动态修改样式"><a href="#a）案例：动态修改样式" class="headerlink" title="a）案例：动态修改样式"></a>a）案例：动态修改样式</h4><h4 id="b）案例：表格隔行换色"><a href="#b）案例：表格隔行换色" class="headerlink" title="b）案例：表格隔行换色"></a>b）案例：表格隔行换色<img src="3.png" alt></h4><h2 id="三-表单校验（重点）"><a href="#三-表单校验（重点）" class="headerlink" title="三 表单校验（重点）"></a>三 表单校验（重点）</h2><h3 id="3-1-正则表达式"><a href="#3-1-正则表达式" class="headerlink" title="3.1 正则表达式"></a>3.1 正则表达式</h3><p>Regular Expression</p><p>作用：按照正确的规则去匹配字符串</p><p><strong>在js中使用正则表达式</strong></p><pre><code>// 创建正则对象var reg = new RegExp(&#39;正则表达式字符串&#39;,&#39;匹配模式&#39;); i = ignore 忽略大小写// 直接使用正则表达式var reg = /正则表达式/匹配模式;&lt;script&gt;    // 定义字符串    var str = &#39;ABCnba5212342&#39;;    // 方式一    var regExp = new RegExp(&#39;abc&#39;, &#39;i&#39;);    // 进行校验  正确返回 true  错误返回false    console.log(regExp.test(str));    // 方式二 （推荐）    var regExp2 = /abc/i;    console.log(regExp2.test(str));    /*    *   在企业开发中，我们不会编写正则表达式，但是需要大家能看懂一些 常用    *    *   例如 邮箱    *       个人邮箱：  peng.peng-ge_123  @  163 . com    *                                               cn    *                                               com.cn    *       正则表达式 /^ ( [a-z0-9_\.-] +) @  ([\da-z\.-]+)    \.  ([a-z\.]{2,6}) $/    *    *       // 正则表达式规则    *       ^ 以什么什么开始    *       $ 以什么什么结束    *       () 代表一组    *       \ 转义符    *       . 代表一个字符 类似于sql _    *       [] 代表范围    *       a-z    *       0-9    *       _    *       + 代表一个或多个    *       ？代表0个或1个    *       * 代表0次或多次    *       \d 代表 0-9    *       {2,6} 量词  至少2次最多6次    *    *    * */&lt;/script&gt;var reg = /^[a-zA-Z0-9_]$/;注意：\w \d + * ? {n,m}        //用户注册-实现表单校验</code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> DOM对象 </tag>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html学习03_js基础</title>
      <link href="/2019/02/27/2019-02-27-html-xue-xi-03-js-ji-chu/"/>
      <url>/2019/02/27/2019-02-27-html-xue-xi-03-js-ji-chu/</url>
      
        <content type="html"><![CDATA[<h2 id="一-JavaScript概述"><a href="#一-JavaScript概述" class="headerlink" title="一 JavaScript概述"></a>一 JavaScript概述</h2><p>作用：用户和页面交互效果</p><p>特点：js是一个基于对象弱类型的脚本语言，浏览器直接解释运行的</p><p>组成：ECMAScript、BOM、DOM</p><h3 id="1-1-JavaScript作用"><a href="#1-1-JavaScript作用" class="headerlink" title="1.1 JavaScript作用"></a>1.1 JavaScript作用</h3><table><thead><tr><th align="left">技术</th><th align="left">作用</th></tr></thead><tbody><tr><td align="left">HTML</td><td align="left">用于页面的搭建</td></tr><tr><td align="left">CSS</td><td align="left">用于页面的美化</td></tr><tr><td align="left">javaScript</td><td align="left">用户与页面的交互</td></tr></tbody></table><h3 id="1-2-JavaScript的特点"><a href="#1-2-JavaScript的特点" class="headerlink" title="1.2 JavaScript的特点"></a>1.2 JavaScript的特点</h3><p>js是一个弱类型的 脚本语言，浏览器直接解析运行</p><table><thead><tr><th align="center">特点</th><th align="left"><strong>Java</strong></th><th align="left"><strong>javaScript</strong></th></tr></thead><tbody><tr><td align="center"><strong>面向对象</strong></td><td align="left">完全面向对象的语言：继承、封装、多态</td><td align="left">基于对象的语言，不完全符合面向对象的思想</td></tr><tr><td align="center"><strong>运行方式</strong></td><td align="left">编译型，运行过程需要生成字节码文件</td><td align="left">解释型语言，不会生成中间文件，解释一定行数，再执行。</td></tr><tr><td align="center"><strong>跨平台</strong></td><td align="left">安装了JVM就可以运行在不同的操作系统中</td><td align="left">只要有浏览器的地方就可以运行</td></tr><tr><td align="center"><strong>大小写</strong></td><td align="left">区分大小写</td><td align="left">区分大小写</td></tr><tr><td align="center"><strong>数据类型</strong></td><td align="left">强类型语言，不同的数据类型有严格区分</td><td align="left">弱类型语言，不同类型的数据可以直接赋值给同一个变量。</td></tr></tbody></table><h3 id="1-3-JavaScript的语法组成"><a href="#1-3-JavaScript的语法组成" class="headerlink" title="1.3 JavaScript的语法组成"></a>1.3 JavaScript的语法组成</h3><table><thead><tr><th align="left"><strong>组成部分</strong></th><th align="left"><strong>作用</strong></th></tr></thead><tbody><tr><td align="left"><strong>ECMA Script</strong></td><td align="left">构成了JS核心的语法基础</td></tr><tr><td align="left"><strong>BOM</strong></td><td align="left">Browser Object Model 浏览器对象模型，用来操作浏览器上的对象</td></tr><tr><td align="left"><strong>DOM</strong></td><td align="left">Document Object Model 文档对象模型，用来操作网页中的 元素（标签）</td></tr></tbody></table><h2 id="二-JavaScript基础语法"><a href="#二-JavaScript基础语法" class="headerlink" title="二 JavaScript基础语法"></a>二 JavaScript基础语法</h2><h3 id="2-1-html与js结合方式"><a href="#2-1-html与js结合方式" class="headerlink" title="2.1 html与js结合方式"></a>2.1 html与js结合方式</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;01_html与js结合方式&lt;/title&gt;    &lt;!--        type=&quot;text/javascript&quot;（默认），当浏览器加载到此标签，解析器改为js    --&gt;    &lt;script type=&quot;text/javascript&quot;&gt;        // js代码   文档 document对象        document.write(&#39;&lt;h3&gt;你好，传智播客&lt;/h3&gt;&#39;);    &lt;/script&gt;    &lt;script src=&quot;../js/myjs.js&quot;&gt;        document.write(&#39;&lt;h3&gt;我是外部标签引入，又在标签体内编写js代码&lt;/h3&gt;&#39;);    &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    html与js结合方式        1）内部脚本            格式：使用script标签，在标签体内编写js代码        2）外部脚本            格式：使用script标签，在src属性中引入外部的js文件        注意：            1）script标签可以在页面的任意位置，推荐放在body下方 （浏览器加载顺序 自上而下）                在企业开发中 一般情况下 css在head，js在body下方            2）script标签可以出现多次，浏览器依次加载解析运行            3）如果使用script标签中的src属性，那么标签体内的js代码不再被浏览器加载解析--&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="2-2-js变量的定义"><a href="#2-2-js变量的定义" class="headerlink" title="2.2 js变量的定义"></a>2.2 js变量的定义</h3><p>java是强类型语言，注重变量的定义，所以在java中定义变量类型的方式如下</p><pre><code>// 整型int i = 1314;// 浮点型double d = 521.1314;// 字符型char c =&#39;c&#39;;// 字符串型String str = &quot;用心做教育&quot;;//布尔型boolean b = true;</code></pre><p>js是弱类型语言，不注重变量的定义，所以在js中定义变量的类型方式如下</p><pre><code>&lt;script&gt;    // 整型    var i = 1234;  // es6 提供了块级作用域    // 浮点型    var d = 123.321;    // 字符型    // 补充知识点：在js中，没有字符只有字符串 单引号和双引号都可以    var c = &#39;ccccc&#39;;    // 字符串    var str = &quot;传智播客，用心做教育...&quot;;    // 布尔型    // 我们在定义变量时可以省略 var （默认）    b = true;&lt;/script&gt;</code></pre><h3 id="2-3-js数据类型"><a href="#2-3-js数据类型" class="headerlink" title="2.3 js数据类型"></a>2.3 js数据类型</h3><p>js与java一样，数据类型也分为基本数据类型（原始数据类型）和引用数据类型</p><h4 id="a）原始数据类型（5种）"><a href="#a）原始数据类型（5种）" class="headerlink" title="a）原始数据类型（5种）"></a>a）原始数据类型（5种）</h4><pre><code>number：数值类型（整型和浮点型）string：字符串型（字符和字符串）boolean：布尔型null：空值 例如：var a = null; // 引用数据类型的占位符  Objectundefined：未定义 例如：var a;</code></pre><h4 id="b）引用数据类型"><a href="#b）引用数据类型" class="headerlink" title="b）引用数据类型"></a>b）引用数据类型</h4><p>js与java一样，使用new关键字来创建一个对象</p><pre><code>// 上帝对象var obj = new Object();// 日期对象var date = new Date();</code></pre><h4 id="c）typeof操作符"><a href="#c）typeof操作符" class="headerlink" title="c）typeof操作符"></a>c）typeof操作符</h4><p>作用：判断变量的数据类型</p><p>格式：<code>typeof 变量名 或者 typeof(变量名)</code>；</p><pre><code>&lt;script&gt;    // 整型    var i = 1234;    // 在java中  sout=System.out.println  （控制台）-----&gt; console.log(.....); （控制台）    // 在js中，一行代码结束可以省略分号，不建议    console.log(&quot;整型：&quot;+typeof (i))    // 浮点型    var d = 123.321;    console.log(&quot;浮点型：&quot;+typeof (d));    // 字符型    // 补充知识点：在js中，没有字符只有字符串 单引号和双引号都可以    var c = &#39;ccccc&#39;;    console.log(&quot;字符型：&quot;+typeof (c));    // 字符串    var str = &quot;传智播客，用心做教育...&quot;;    console.log(&quot;字符串：&quot;+typeof (str));    // 布尔型    // 我们在定义变量时可以省略 var （默认）    b = true;    console.log(&quot;布尔型：&quot; + typeof b);    // 空值    var n = null;    console.log(&quot;空值：&quot; + typeof n);    // 未定义    var u;    console.log(&quot;未定义：&quot; + typeof u);    // 引用数据类型    // 在js种，使用var声明的变量，可以多次定义    var u = new Date();    console.log(&quot;引用数据类型：&quot; + typeof u);&lt;/script&gt;</code></pre><h3 id="2-4-js运算符"><a href="#2-4-js运算符" class="headerlink" title="2.4 js运算符"></a>2.4 js运算符</h3><p>js与java的运算符一样，什么算数运算符、赋值运算符、逻辑运算符等等，不用把这些运算符都记住，写程序时自然会用就OK。</p><p><strong>a）算术运算符</strong> ：<code>+ - * / % ++ --</code></p><p><strong>b）赋值运算符</strong>：<code>= += -= *= /=</code></p><p><strong>c）比较运算符</strong>：<code>&gt; &lt; == === != !==</code></p><p><strong>d）逻辑运算符</strong>：<code>&amp;&amp; || !</code></p><p><strong>e）三目运算符</strong>：<code>条件表达式？为真:为假</code></p><p>下面说几个与java不一样的js运算符：</p><pre><code>&lt;script&gt;    // 算术运算符    // 在js中，字符串可以和数值进行数学运算，底层实现了转换技术    var a = 10;    var b = &#39;3&#39;;    console.log(a + b);// 字符串拼接    console.log(a - b);    console.log(a * b);    console.log(a / b);//不再是整除，保留小数位 （后期数据存储的价格 单位是分）    // += *=    // 比较运算符    var c = &quot;10&quot;;    console.log(a == c); // 返回结果 true 比较内容    console.log(a === c);// 返回结果 false  全等运算符（恒等） 比较的类型和内容    // != !==    console.log(a != c); // 返回结果 false    console.log(a !== c);// 返回结果  true&lt;/script&gt;</code></pre><h3 id="2-5-流程控制语句"><a href="#2-5-流程控制语句" class="headerlink" title="2.5 流程控制语句"></a>2.5 流程控制语句</h3><p>在高级语言中：顺序、分支、循环</p><h4 id="a）if判断"><a href="#a）if判断" class="headerlink" title="a）if判断"></a>a）if判断</h4><pre><code>if(条件表达式){    // js代码}else if(条件表达式){    // js代码}else{    // js代码}&lt;script&gt;    // 条件表达式    /*    *   数值类型：非0为真    *   字符串类型：非空串为真    *   变量： null 和 undefined 都为假    *    * */    //  var flag = false;    // flag = 0;    // flag = &quot; &quot;;    // flag =null;    flag = undefined;    // if判断    if (flag) {        document.write(&#39;&lt;h3&gt;为真&lt;/h3&gt;&#39;);    } else {        document.write(&#39;&lt;h3&gt;为假&lt;/h3&gt;&#39;);    }&lt;/script&gt;</code></pre><h4 id="b）循环"><a href="#b）循环" class="headerlink" title="b）循环"></a>b）循环</h4><pre><code>// forfor(var i =0;i &lt; length; i ++){    // 循环体}// whilewhile(条件表达式){    // 循环体}// do..whiledo{    // 循环体    // continue; 跳出本次循环    // break;跳出整个循环}while(条件表达式);&lt;script&gt;    // for    for (var i = 0; i &lt; 5; i++) {        document.write(i + &quot;&lt;br/&gt;&quot;);        //document.writeln(i);    }    // 拓展知识点；使用var声明的变量 全局变量    console.log(i);    // 在js 6的版本中，提供 另外一种变量的let声明  （块级作用域）  这不是局部变量    for (let j = 0; j &lt; 5; j++) {        document.write(j + &#39;&lt;br/&gt;&#39;);    }    // j is not defined    console.log(j);&lt;/script&gt;</code></pre><h3 id="2-8-函数（方法）使用"><a href="#2-8-函数（方法）使用" class="headerlink" title="2.8 函数（方法）使用"></a>2.8 函数（方法）使用</h3><h4 id="a）普通函数"><a href="#a）普通函数" class="headerlink" title="a）普通函数"></a>a）普通函数</h4><pre><code>// 格式function 函数名(参数列表){    // js代码    [return 返回值;]}&lt;script&gt;    // 普通函数    // 注意：在js中没有方法重载，重名的方法会被覆盖    // 再来一个3个数相加的和    function sum(a, b, c) {        return a + b + c;    }    // 来一个2个数相加的和    function sum(a, b) {        // 在js函数中，内部有一个arguments(数组)对象，获取实际的参数列表        console.log(arguments);        console.log(arguments[0]);        console.log(arguments[1]);        console.log(arguments[2]);        console.log(arguments[3]);        return a + b;    }    // NaN not a number 这不是一个数    // 不会报错，弱类型语言  我们在调用方法传递的实际参数个数与定义方式无关    console.log(&quot;返回结果：&quot;+sum(5,10,15,20,25,30));&lt;/script&gt;</code></pre><h4 id="b）匿名函数"><a href="#b）匿名函数" class="headerlink" title="b）匿名函数"></a>b）匿名函数</h4><pre><code>// 格式   一会我会讲js事件                  // 匿名函数，通常与事件结合使用var fun = function (参数列表){    [return 返回值;]}&lt;script&gt;    // 匿名函数    var fun = function (name) {        console.log(name + &quot;喜欢购物&quot;);    }    fun(&#39;陈浩&#39;);&lt;/script&gt;          &lt;input id=&quot;myBtn&quot; type=&quot;button&quot; value=&quot;&quot; /&gt;&lt;script&gt;    document.getElementById(&#39;myBtn&#39;).onclick=function(){        // js代码    }&lt;/script&gt;</code></pre><h4 id="c）变量作用域"><a href="#c）变量作用域" class="headerlink" title="c）变量作用域"></a>c）变量作用域</h4><pre><code>&lt;!--    变量作用域：        全局变量            特点：作用域范围在整个页面        块级变量            特点：在我们局部范围 （要求浏览器的版本高）        局部变量            特点：在函数中，函数执行完毕变量销毁            特殊：在函数中，如果未使用var声明变量，此变量默认为全局变量--&gt;&lt;script&gt;   var a = 5;    function show() {        var b = 10;        console.log(&quot;我在函数内输出的局部变量b：&quot; + b);        c = 15;        console.log(&quot;我在函数内输出的未声明c：&quot; + c);    }     show();    // b is not defined    // console.log(&quot;我在函数外输出的局部变量b：&quot; + b);    console.log(&quot;我在函数外输出的未声明c：&quot; + c);&lt;/script&gt;&lt;script&gt;    console.log(&quot;我是全局变量:&quot; + a);&lt;/script&gt;</code></pre><h2 id="三-JavaScript事件"><a href="#三-JavaScript事件" class="headerlink" title="三 JavaScript事件"></a>三 JavaScript事件</h2><h3 id="3-1-作用"><a href="#3-1-作用" class="headerlink" title="3.1 作用"></a>3.1 作用</h3><p>js通过事件监听用户的行为，结合函数完成页面的交互效果</p><h3 id="3-2-常见事件"><a href="#3-2-常见事件" class="headerlink" title="3.2 常见事件"></a>3.2 常见事件</h3><table><thead><tr><th align="left"><strong>属性</strong></th><th align="left"><strong>描述</strong></th></tr></thead><tbody><tr><td align="left">onblur</td><td align="left">元素失去焦点</td></tr><tr><td align="left">onfocus</td><td align="left">元素获得焦点</td></tr><tr><td align="left">onchange</td><td align="left">用户改变域的内容</td></tr><tr><td align="left">onclick</td><td align="left">鼠标点击某个对象</td></tr><tr><td align="left">ondblclick</td><td align="left">鼠标双击某个对象</td></tr><tr><td align="left">onkeydown</td><td align="left">某个键盘的键被按下</td></tr><tr><td align="left">onkeyup</td><td align="left">某个键盘的键被松开</td></tr><tr><td align="left">onload</td><td align="left">某个页面或图像被完成加载</td></tr><tr><td align="left">onmousedown</td><td align="left">某个鼠标按键被按下</td></tr><tr><td align="left">onmouseout</td><td align="left">鼠标从某元素移开</td></tr><tr><td align="left">onmouseover</td><td align="left">鼠标被移到某元素之上</td></tr><tr><td align="left">onmouseup</td><td align="left">某个鼠标按键被松开</td></tr><tr><td align="left">onsubmit</td><td align="left">提交按钮被点击</td></tr></tbody></table><h3 id="3-3-事件注册方式"><a href="#3-3-事件注册方式" class="headerlink" title="3.3 事件注册方式"></a>3.3 事件注册方式</h3><p>标签绑定事件，完成监听的效果</p><pre><code>&lt;body&gt;&lt;input type=&quot;button&quot; value=&quot;我是普通函数&quot; onclick=&quot;sing()&quot;&gt; &lt;br&gt;&lt;input type=&quot;button&quot; value=&quot;我是匿名函数&quot; id=&quot;myBtn&quot;&gt;&lt;/body&gt;&lt;script&gt;    /*    *   事件绑定方式有二种：    *       普通函数（耦合性太高）    *       匿名函数（解耦）  ---- 有2天来学习 jquery（jdbc-jdbTemplate）    *           *       用单击事件举例 onClick    *     * */    function sing() {        window.alert(&#39;单身情歌&#39;);    }    // 获取按钮对象    document.getElementById(&quot;myBtn&quot;).onclick = function () {        window.alert(&#39;海草舞&#39;);    }&lt;/script&gt;</code></pre><h2 id="四-JavaScript内置对象"><a href="#四-JavaScript内置对象" class="headerlink" title="四 JavaScript内置对象"></a>四 JavaScript内置对象</h2><h3 id="4-1-数组对象"><a href="#4-1-数组对象" class="headerlink" title="4.1 数组对象"></a>4.1 数组对象</h3><pre><code>&lt;script&gt;    /*    * 数组对象    *   1） var arr = [元素1，元素2，元素3....];（掌握）    *   2） var arr = new Array();    *   3） var arr = new Array(长度);    *   4） var arr = new Array(元素1，元素2，元素3....);    *    *    *    *   注意：在js中，数组的元素类型和长度任意,很像java中的集合    *    * */    var arr = [&#39;鹏哥&#39;, &quot;牛哥&quot;, &quot;婷哥&quot;, &quot;擎哥&quot;];    console.log(arr);    var arr2 = new Array();    arr2[0] = &quot;苍老师&quot;;    arr2[1] = &quot;波多老师&quot;;    arr2[2] = &quot;小泽老师&quot;;    console.log(arr2);    var arr3 = new Array(2);    arr3[0] = &quot;花泽老师&quot;;    arr3[1] = &quot;大桥老师&quot;;    arr3[2] = 1234;    arr3[3] = new Date();    arr3[4] = true;    console.log(arr3);    var arr4 = new Array(1234, true, &#39;张三&#39;);    console.log(arr4);    /*    *   数组常见方法    *       1）concat() 连接数组    *       2）join(&#39;拼接规则&#39;) 与split功能相反，将数组元素拼接成一个字符串    *       3）reverse() 数组元素反转    *       4）sort() 排序    *           字符串 按照字母顺序    *           数值    *               sort(function(a,b){    *                   return a-b; 升序    *                   reutnr b-a; 降序    *               });    *    *    * */    console.log(arr.concat(arr2));    console.log(arr2.join(&quot;+&quot;));    console.log(arr3.reverse());    var arr5 = [&quot;c&quot;, &quot;b&quot;, &quot;a&quot;];    console.log(arr5.sort());    var arr6 = [11, 9, 1, 8, 5];    console.log(arr6.sort(function (a, b) {        return a - b;    }));&lt;/script&gt;</code></pre><h3 id="4-2-日期对象"><a href="#4-2-日期对象" class="headerlink" title="4.2 日期对象"></a>4.2 日期对象</h3><pre><code>&lt;script&gt;    // 日期对象    var date = new Date();    console.log(date);    console.log(date.toLocaleString()); // 根据系统的本地时间来显示    console.log(date.getFullYear());// yyyy    console.log(date.getMonth());//MM    console.log(date.getDate());// dd    console.log(date.getDay());// 星期    console.log(date.getTime());// 获取 1970至今的毫秒值&lt;/script&gt;</code></pre><h3 id="4-3-全局对象"><a href="#4-3-全局对象" class="headerlink" title="4.3 全局对象"></a>4.3 全局对象</h3><p>不需要创建直接使用</p><pre><code>&lt;script&gt;    // 字符串转换数值    /*    *   parseInt(); 字符串转换成整型    *   parseFloat(); 字符串转换成浮点型    *       特点：从字符串第一个字符开始转换，当遇到非数值字符串停止转换    *       应用场景：    *               图片修改大小 100px 200px    *               获取鼠标左表(x,y) onmousemove    *    *       NaN  not a number  这不是一个数    *    *       isNaN(); 判断这个字符串不是数值 返回true    *    * */    var a = &quot;a1a23.a3a21&quot;;    var b = &quot;123&quot;;    console.log(parseInt(a));    console.log(parseFloat(a));    console.log(isNaN(a));    console.log(isNaN(b));    // 编码和解码    /*    *   浏览器发送数据到服务器   中文---编码    *       encodeURI();    *   服务器返回数据到浏览器 中文--解码    *       decodeURI();    * */    var str = &quot;鹏哥年轻有为，活力棒棒哒.....&quot;;    // 编码    var encodeURI = encodeURI(str);    console.log(encodeURI);    // 解码    console.log(decodeURI(encodeURI));&lt;/script&gt;</code></pre><h1 id="JavaScript二维数组"><a href="#JavaScript二维数组" class="headerlink" title="JavaScript二维数组"></a>JavaScript二维数组</h1><p>其实，我们都见过这样的二维数组，只不过平时没在意罢了，例如：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">//这就是一个二位数组。角标从0开始，这样看起来比较繁琐</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment" spellcheck="true">//一般我们会这样定义二维数组</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例题：</p><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">,</span><span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 输出结果为['a','b']</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出结果为a，第2列第1行所在的元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-js"><code class="language-js"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token string">"a"</span><span class="token punctuation">,</span><span class="token string">"b"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">// 输出结果为['a','b']</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出结果为a，第2列第1行所在的元素</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS语法 </tag>
            
            <tag> JS事件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html学习02_表单和CSS样式</title>
      <link href="/2019/02/25/2019-02-25-html-xue-xi-02-biao-dan-yu-css-yang-shi/"/>
      <url>/2019/02/25/2019-02-25-html-xue-xi-02-biao-dan-yu-css-yang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML表单和CSS样式"><a href="#HTML表单和CSS样式" class="headerlink" title="HTML表单和CSS样式"></a>HTML表单和CSS样式</h1><h2 id="一-HTML表单（重点）"><a href="#一-HTML表单（重点）" class="headerlink" title="一 HTML表单（重点）"></a>一 HTML表单（重点）</h2><p>作用：将用户在页面输入的信息（数据），发送给java服务器（php、.net）</p><pre><code>&lt;!--    表单（容器）    &lt;form&gt;&lt;/form&gt;        常用属性：            action：将表单数据发送给指定的服务器 (url地址)  # 代表当前页面            name：当前表单的名称            method：当前表单的提交方式，共有7种，常见2种：get（默认）、post                get：提交的参数在url地址栏后面进行拼接   ***.html?username=鱼儿水中游&amp;password=12345&amp;birthday=&amp;gender=0&amp;hobby=somke&amp;hobby=perm#                post：提交的参数不会再url地址蓝后面进行拼接                区别：                    1）get提交在地址后进行拼接 相对来说不安全、post提交不会再地址后进行拼接 相对来说按钮                    2）get提交参数有大小限制（4KB）、post提交参数没有大小的限制     文本框     &lt;input/&gt;        常用属性：            type：type属性的值不同，展示的样式和功能也不同                常见的有11个值（必须掌握）                    text：普通文本框（默认值）                    password：密码框 特点：输入的都是掩码                    date：日期选择器 (h5提供的)                    radio：单选框 特点：name属性相同分为一组，完成互斥的效果                        checked=&quot;checked&quot; | true 当前表单项默认被选中                    checkbox：复选框 特点：name属性相同分为一组                        checked=&quot;checked&quot; | true 当前表单项默认被选中                     button：普通按钮（后期学习js，按钮会结合js事件完成某些动作效果）                     submit：提交按钮 特点：点击提交按钮，触发表单提交 执行action发送请求                     reset：重置按钮 特点：使表单项恢复到默认状态                     image：图片提交 特点：与submit功能一致                     file：文件上传 （必须使用post提交方式）                     hidden：隐藏域 特点：页面无法看到，用户无法修改或填写 （存放id）            name：当前表单项的名称                设置了name属性的表单项才会被提交                格式：key=value                ?username=婷哥                &amp;password=12345                &amp;birthday=&amp;                gender=0                &amp;hobby=somke                &amp;hobby=perm#            value：当前表单项的值（让用户去输入）     下拉列表     &lt;select name=&quot;&quot; &gt;        &lt;option value=&quot;&quot;&gt;展示的内容&lt;/option&gt;     &lt;/select&gt;         注意：select标签的name=option标签的value         selected=&quot;selected&quot; true     文本域     &lt;textarea name=&quot;&quot;&gt;我是value&lt;/textarea&gt;        常用属性：            cols：列宽 默认30            rows：行高 默认10--&gt;</code></pre><h2 id="二-CSS样式（整体感知）"><a href="#二-CSS样式（整体感知）" class="headerlink" title="二 CSS样式（整体感知）"></a>二 CSS样式（整体感知）</h2><h3 id="2-1-概述"><a href="#2-1-概述" class="headerlink" title="2.1 概述"></a>2.1 概述</h3><p>层叠样式表（Cascading Style Sheet）</p><p>专门用于网页的美化</p><p><strong>初体验</strong></p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;01_初体验&lt;/title&gt;    &lt;style&gt;        font{            color: red;            font-size: 45px;            font-weight: bold;            font-style: italic;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--&lt;font size=&quot;7&quot; color=&quot;red&quot;&gt;&lt;b&gt;&lt;i&gt;脚踏实地行&lt;/i&gt;&lt;/b&gt;&lt;/font&gt; &lt;br&gt;&lt;font size=&quot;7&quot; color=&quot;red&quot;&gt;&lt;b&gt;&lt;i&gt;海阔天空飞&lt;/i&gt;&lt;/b&gt;&lt;/font&gt; &lt;br&gt;--&gt;&lt;font&gt;脚踏实地行&lt;/font&gt; &lt;br&gt;&lt;font&gt;海阔天空飞&lt;/font&gt; &lt;br&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><strong>美化优点</strong></p><p>实现了样式和内容的分离，提高内容的显示效果和样式的复用性</p><p>功能更强大 例如：给font标签设置超大字体、加粗、斜体</p><p>降低了耦合性 css样式专门用于页面的美化、html专门用于页面的搭建</p><h3 id="2-2-html与css结合方式"><a href="#2-2-html与css结合方式" class="headerlink" title="2.2 html与css结合方式"></a>2.2 html与css结合方式</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;02_html与css结合方式&lt;/title&gt;    &lt;!--        type=&quot;text/css&quot;  当浏览器加载此标签 根据type属性类型 解析器切换为 css    --&gt;    &lt;style type=&quot;text/css&quot;&gt;        span {            color: blue;            font-size: 25px;        }    &lt;/style&gt;    &lt;!--        rel=&quot;stylesheet&quot;  relation 关系 声明html与引入文件的关系    --&gt;    &lt;link rel=&quot;stylesheet&quot; href=&quot;../css/mycss.css&quot;&gt;    &lt;!--&lt;style&gt;        @import &quot;../css/mycss.css&quot;;    &lt;/style&gt;--&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    html与css结合方式 共有三种        1）行内样式（一般不用）            格式：所有标签都有一个共同的属性，在style属性中编写 css样式        2）内部样式（整个页面）            格式：使用style标签，在标签体内编写css样式        3）外部样式（整个网站的使用）            格式：                使用link标签，在href属性种引入外部的css文件 (常用)                使用style标签，在标签体内@import函数引入外部的css文件（加载效率没有link标签高）    使用优先级：就近原则            注意：style标签可以出现在页面的任意位置，建议放在head头部 （浏览器加载顺序自上而下）--&gt;&lt;span style=&quot;color: red;font-size: 20px&quot;&gt;java从入门到放弃&lt;/span&gt; &lt;br&gt;&lt;span&gt;php是世界上最美丽的语言&lt;/span&gt; &lt;br&gt;&lt;/body&gt;&lt;/html&gt;1）行内样式&lt;div style=&quot;css样式&quot;&gt;    &lt;/div&gt;2）内部样式&lt;style&gt;    css样式&lt;/style&gt;3）外部样式&lt;link rel=&quot;stylesheet&quot; href=&quot;外部css文件路径&quot;/&gt;</code></pre><h3 id="2-3-css书写规范"><a href="#2-3-css书写规范" class="headerlink" title="2.3 css书写规范"></a>2.3 css书写规范</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;03_css书写规范&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        /*            我是css样式的注释               格式：选择器{css样式}                属性名和属性值之间使用冒号分隔                多个属性之间使用分号分隔                属性名由多个组成使用减号分隔                属性值由多个组成使用空格分隔                属性和属性值不区分大小写，建议小写        */        span {            color: blue;            font-size: 25px;            border: 1px solid red;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;span&gt;php是世界上最美丽的语言&lt;/span&gt; &lt;br&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="2-4-选择器"><a href="#2-4-选择器" class="headerlink" title="2.4 选择器"></a>2.4 选择器</h3><h4 id="a）基本选择器"><a href="#a）基本选择器" class="headerlink" title="a）基本选择器"></a>a）基本选择器</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;04_基本选择器&lt;/title&gt;    &lt;style&gt;        div {            color: red;            font-size: 20px;        }        #mydiv{            color: yellowgreen;            font-size: 25px;        }        .myclass{            color: skyblue;            font-size: 30px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    基本选择器 有3个        1）标签选择器            格式：标签名{css样式}    div{css样式}        2）id选择器            格式：#id属性值{css样式}   #id属性值{css样式}            特点：id具有唯一性        3）类选择器            格式：.class属性值{css样式}   .class属性值{css样式}   选择器使用优先级：id选择器》类选择器》标签选择器    注意：给标签设置样式不会指定id，通常使用的class--&gt;&lt;div&gt;我是第一种选择器：标签选择器&lt;/div&gt;&lt;div id=&quot;mydiv&quot; class=&quot;myclass&quot;&gt;我是第二种选择器：id选择器&lt;/div&gt;&lt;div class=&quot;myclass&quot;&gt;我是第三种选择器：类选择器&lt;/div&gt;&lt;p class=&quot;myclass&quot;&gt;我是第三种选择器：类选择器&lt;/p&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="b）拓展选择器"><a href="#b）拓展选择器" class="headerlink" title="b）拓展选择器"></a>b）拓展选择器</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;05_拓展选择器&lt;/title&gt;    &lt;style&gt;        .div2 div .sp1 {            color: red;        }        input[type=&#39;text&#39;] {            background-color: skyblue;        }        input[type=&#39;text&#39;]:focus {            background-color: lightyellow;        }        input[type=&#39;password&#39;] {            background-color: lightpink;        }        a:link {            color: blue;        }        a:hover {            color: red;        }        a:active {            color: blueviolet;        }        a:visited {            color: green;        }        font,p,b{            color: orange;            font-size: 40px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    拓展选择器        1）层级选择器            格式：父选择器 子选择器 孙子选择器...{css样式}        2）属性选择器            格式：基本选择器[属性名=&#39;属性值&#39;]{css样式}        3）伪类选择器            同一个标签（元素），在不同操作下呈现出不同的样式            文本框                格式：input:focus{css样式}            超链接                初始状态 a:link{css样式}                鼠标移入 a:hover{css样式}                鼠标点击 a:active{css样式}                访问过后 a:visited{css样式}        4）并集选择器            格式：选择器1，选择器2，选择器3...{css样式}--&gt;&lt;!--    标签.class属性值 tab 创建标签--&gt;&lt;div class=&quot;div1&quot;&gt;    &lt;div&gt;        &lt;span class=&quot;sp1&quot;&gt;span1&lt;/span&gt;        &lt;span class=&quot;sp2&quot;&gt;span2&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;div2&quot;&gt;    &lt;div&gt;        &lt;span class=&quot;sp1&quot;&gt;span3&lt;/span&gt;        &lt;span class=&quot;sp2&quot;&gt;span4&lt;/span&gt;    &lt;/div&gt;&lt;/div&gt;&lt;input type=&quot;text&quot;&gt; &lt;br&gt;&lt;input type=&quot;password&quot;&gt; &lt;br&gt;&lt;a href=&quot;#&quot;&gt;let me see see&lt;/a&gt; &lt;br&gt;&lt;font&gt;我是字体font&lt;/font&gt;&lt;p&gt;我是段落p&lt;/p&gt;&lt;b&gt;我是粗体b&lt;/b&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="2-5-css常见属性"><a href="#2-5-css常见属性" class="headerlink" title="2.5 css常见属性"></a>2.5 css常见属性</h3><h4 id="a）字体和文本"><a href="#a）字体和文本" class="headerlink" title="a）字体和文本"></a>a）字体和文本</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;06_字体和文本&lt;/title&gt;    &lt;style&gt;        div{            font-size: 40px;            font-weight: bold;            font-style: italic;            font-family: 华文琥珀;            color: red;            text-align: center;            line-height: 100px;            text-decoration: line-through;        }        a{            text-decoration:none;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    字体        font-size：大小        font-weight：重量            取值：bold 粗体       font-style：样式            取值：italic 斜体       font-family：类型            取值：宋体、、、、    文本        color：颜色        text-algin：内容对齐方式            取值：left 左侧（默认）        line-height：高度        text-decoration：装饰            取值：none 普通文本（默认）、underline 下划线、overline 上划线、line-through 横线（删除线）--&gt;&lt;div&gt;城市套路深，我要回农村。。。。&lt;/div&gt;&lt;a href=&quot;#&quot;&gt;我不需要下划线&lt;/a&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="b）背景属性"><a href="#b）背景属性" class="headerlink" title="b）背景属性"></a>b）背景属性</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;07_背景属性&lt;/title&gt;    &lt;style&gt;        body{/*            background-color: #eaeaea;            background-image: url(&quot;../img/girl3.jpg&quot;);            background-repeat: no-repeat;*/            background: #eaeaea  url(&quot;../img/girl3.jpg&quot;) no-repeat;;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    背景属性        background-color:背景色        background-image:背景图像            格式：url(&#39;图像的文件路径&#39;);        background-repeat：平铺方式            取值：repeat 水平和垂直（默认）、repeat-x 水平、repeat-y 垂直、no-repeat 不平埔        进入企业开发，我们一般会简写        background：背景色 图像 平铺方式--&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="c）显示属性"><a href="#c）显示属性" class="headerlink" title="c）显示属性"></a>c）显示属性</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;08_显示属性&lt;/title&gt;    &lt;style&gt;        div{            background-color: orange;            display: inline;        }        span{            background-color: orange;            display: block;        }        h3{            display: none;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    display:显示属性        取值：block 块元素、inline 内联元素、none 隐藏--&gt;&lt;div&gt;块标签&lt;/div&gt;&lt;span&gt;内联标签&lt;/span&gt;&lt;h3&gt;我是看不到的&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="d）浮动属性"><a href="#d）浮动属性" class="headerlink" title="d）浮动属性"></a>d）浮动属性</h4><p>将标签脱离原有的规则，可以在一行内显示多个</p><p>官方的名词：脱离原始文档流</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;09_浮动属性&lt;/title&gt;    &lt;style&gt;        .box{            float: left;            width: 100px;            height: 100px;            border: 1px solid red;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    float：浮动属性        取值：left 左浮动、right 右浮动    clear：清除浮动        取值：left 清除左浮动、right 清除右浮动、both 清除左右浮动--&gt;&lt;div class=&quot;box&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;box&quot;&gt;2&lt;/div&gt;&lt;div style=&quot;clear: both&quot;&gt;&lt;/div&gt;&lt;div class=&quot;box&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;box&quot;&gt;4&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="2-6-盒子模型"><a href="#2-6-盒子模型" class="headerlink" title="2.6 盒子模型"></a>2.6 盒子模型</h3><h4 id="a）普通盒子"><a href="#a）普通盒子" class="headerlink" title="a）普通盒子"></a>a）普通盒子</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;10_普通盒子&lt;/title&gt;    &lt;style&gt;        /*盒子*/        .box{            width: 300px;            height: 300px;            border: 10px solid red;            /*padding: 10px 20px 30px 40px;*/ /*上右下左*/            /*padding: 10px 20px 30px;*/   /*上 左右 下*/           /* padding: 10px 20px; *//*上下 左右*/            padding: 10px; /*上下左右*/            margin: auto;        }        /*饼干*/        .cookie{            width: 300px;            height: 300px;            background-color: darkgoldenrod;            border-radius: 150px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    普通盒子        边框            border-width：宽度            border-style：样式                取值：solid 单线、double 双线、dashed 虚线            border-color：颜色            简写 border：宽度 样式 颜色            border-radius：圆角半径 (∟)        内边距            padding-top 上            padding-right 右            padding-bottom 下            padding-left 左            简写 padding：上 右 下 左;        外边距            margin-top 上            margin-right 右            margin-bottom 下            margin-left 左            简写 margin：上 右 下  左；            特殊：                margin：auto； 水平对齐--&gt;&lt;div class=&quot;box&quot;&gt;    &lt;div class=&quot;cookie&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="b）怪异盒子"><a href="#b）怪异盒子" class="headerlink" title="b）怪异盒子"></a>b）怪异盒子</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;11_怪异盒子&lt;/title&gt;    &lt;style&gt;        /*盒子*/        .box{            width: 300px;            height: 300px;            border: 10px solid red;            /*padding: 10px 20px 30px 40px;*/ /*上右下左*/            /*padding: 10px 20px 30px;*/   /*上 左右 下*/           /* padding: 10px 20px; *//*上下 左右*/            padding: 10px; /*上下左右*/            margin: auto;            box-sizing: border-box;        }        /*饼干*/        .cookie{            width: 260px;            height: 260px;            background-color: darkgoldenrod;            border-radius: 150px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;!--    普通盒子        边框            border-width：宽度            border-style：样式                取值：solid 单线、double 双线、dashed 虚线            border-color：颜色            简写 border：宽度 样式 颜色            border-radius：圆角半径 (∟)        内边距            padding-top 上            padding-right 右            padding-bottom 下            padding-left 左            简写 padding：上 右 下 左;        外边距            margin-top 上            margin-right 右            margin-bottom 下            margin-left 左            简写 margin：上 右 下  左；            特殊：                margin：auto； 水平对齐         box-sizing：盒子的类型            content-box （默认类型）：指定盒子宽度和高度（300*300）之外调整的边框和内边距            border-box：指定盒子宽度和高度（300*300）之内调整边框和内边距--&gt;&lt;div class=&quot;box&quot;&gt;    &lt;div class=&quot;cookie&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML表单 </tag>
            
            <tag> CSS样式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>html学习01_标签</title>
      <link href="/2019/02/19/2019-02-19-html-xue-xi-01-biao-qian/"/>
      <url>/2019/02/19/2019-02-19-html-xue-xi-01-biao-qian/</url>
      
        <content type="html"><![CDATA[<h2 id="一-HTML概述（理解）"><a href="#一-HTML概述（理解）" class="headerlink" title="一 HTML概述（理解）"></a>一 HTML概述（理解）</h2><h3 id="1-1-HTML是什么"><a href="#1-1-HTML是什么" class="headerlink" title="1.1 HTML是什么"></a>1.1 HTML是什么</h3><p>超文本标记语言（Hyper Text Markup Language）</p><p>简单来说搭建网页的一门技术二 HTML标签（重点）</p><p><strong>HTML5</strong></p><p>移动端和PC端浏览器无缝对接，展示丰富的内容</p><h3 id="2-1-文本标签"><a href="#2-1-文本标签" class="headerlink" title="2.1 文本标签"></a>2.1 文本标签</h3><h4 id="a）标签介绍"><a href="#a）标签介绍" class="headerlink" title="a）标签介绍"></a>a）标签介绍</h4><pre class="line-numbers language-2.2"><code class="language-2.2"><!--    文本标签    1）标题    <hn></hn>        n取值范围：1~6 （数值越大，标题越小）        常用属性：            align：对齐方式  在html5中，使用div标签+css样式                取值：left 左侧（默认值）、center 居中、right 右侧    2）文本    <font></font> 在html5中，使用span标签+css样式        常用属性：            size：大小                取值：1~7（数值越大，字体越大） 默认值为3            color：颜色                方式一：英文单词                方式二：光的三原色 RGB红绿蓝（0~255） 十六进制 #12 34 5f            face：类型                取值：宋体、楷体、隶书等等    3）粗体    <b></b> bold    4）斜体    <i></i> italic    5）换行符    <br/>    6）水平线    <hr/>        常用属性：            size：大小                取值：没有限制的            color:颜色            width：宽度                方式一：像素 px                方式二：百分比 %            align：对齐方式    7）段落    <p></p>        常用属性：            align：对齐方式--><h3 align="left"></h3><font size="7" color="英文单词 #12345f" face="宋体"></font><b></b><i></i><span></span><br/><hr size="限制" color="" width="像素px 百分比%" align="center"/><p align="left"></p><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-2-超链接标签"><a href="#2-2-超链接标签" class="headerlink" title="2.2 超链接标签"></a>2.2 超链接标签</h3><pre><code>&lt;!--    超链接标签    &lt;a&gt;&lt;/a&gt;        常用属性：            href：连接跳转地址                相对路径（网站内部跳转）                ./ 当前目录                ../ 上级目录                结对路径（网站外部跳转）                例如：https://www.baidu.com                mailto:打开邮箱客户端发送邮件                例如：mailto:fishyo9@163.com?subject=学习强国&amp;body=短时间1小时，长时间3小时             target：连接打开方式                取值：_self 本身跳转(默认值) _blank 新页面跳转             title：鼠标上移显示的标题--&gt;&lt;a href=&quot;相对路径 绝对路径&quot; target=&quot;_self _blank&quot; title=&quot;鼠标上移显示的标题&quot;&gt;&lt;/a&gt;</code></pre><h3 id="2-3-列表标签"><a href="#2-3-列表标签" class="headerlink" title="2.3 列表标签"></a>2.3 列表标签</h3><pre><code>&lt;!--    列表标签    1）有序列表    &lt;ol&gt;&lt;/ol&gt;        常用属性：            type：排序的类型                取值：1（默认）、i I（罗马数字） a A    2）无序列表（最多）    &lt;ul&gt;&lt;/ul&gt;        常用属性：            type：显示的类型                取值：disc 实心圆（默认值）、circle 空心圆、square 实心方块        子标签：列表项            &lt;li&gt;&lt;/li&gt;--&gt;&lt;ol&gt;    &lt;li&gt;列表项&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;    &lt;li&gt;列表项&lt;/li&gt;&lt;/ul&gt;</code></pre><h3 id="2-4-图像标签"><a href="#2-4-图像标签" class="headerlink" title="2.4 图像标签"></a>2.4 图像标签</h3><pre><code>&lt;!--     图像标签     &lt;img/&gt;        常用属性：            src：图像文件的地址                相对路径                绝对路径            alt：图像丢失时显示的文字内容            width：宽度  注意：设置宽度自动调整高度（纵横比缩放）            height：高度            title：鼠标上移显示的标题--&gt;&lt;img src=&quot;相对路径 绝对路径&quot; alt=&quot;图像丢失显示文本内容&quot; width=&quot;纵横比缩放&quot;/&gt;</code></pre><h3 id="2-5-块级标签和内联标签"><a href="#2-5-块级标签和内联标签" class="headerlink" title="2.5 块级标签和内联标签"></a>2.5 块级标签和内联标签</h3><pre><code>&lt;!--    块级标签和内联标签 二种        1)块级标签            特点：独自占用一行            例如：h3 p ul ol....  div        2）内联标签            特点：内容有多少就显示多少            例如：font b i a img....  span    所有的标签都有一个共同的属性，style添加css样式--&gt;&lt;div&gt;    作为盒子&lt;/div&gt;&lt;span&gt;展示文本内容&lt;/span&gt;</code></pre><h3 id="2-6-表格标签"><a href="#2-6-表格标签" class="headerlink" title="2.6 表格标签"></a>2.6 表格标签</h3><h4 id="a）标签介绍-1"><a href="#a）标签介绍-1" class="headerlink" title="a）标签介绍"></a>a）标签介绍</h4><pre><code>&lt;!--    表格边框    &lt;table&gt;&lt;/table&gt;        常用属性：            border：边框            width:宽度            height：高度            align:表格对齐方式            cellspacing:单元格间距 一般设置为0            cellpadding：单元格内边距 一般设置为0    行    &lt;tr&gt;&lt;/tr&gt;        常用属性：            align：内容对齐方式    单元格    &lt;th&gt;&lt;/th&gt; 列标题（加粗、居中）    &lt;td&gt;&lt;/td&gt;        常用属性：            rowspan：行合并            colspan：列合并     表格标题     &lt;caption&gt;&lt;/caption&gt;     &lt;table border=&quot;&quot; width=&quot;&quot; hegiht=&quot;&quot; align=&quot;left&quot; cellspacing=&quot;0&quot; cellpadding=&quot;0&quot;&gt;    &lt;caption&gt;表格标题&lt;/caption&gt;    &lt;tr algin=&quot;内容对齐方式&quot; bgcolor=&quot;&quot;&gt;//设置网页背景色        &lt;th&gt;列标题&lt;/th&gt;    &lt;/tr&gt;    &lt;tr&gt;        &lt;td rowspan=&quot;&quot; colspan=&quot;&quot;&gt;列（单元格）&lt;/td&gt;    &lt;/tr&gt;&lt;/table&gt;     表格语义化标签     &lt;thead&gt;&lt;/thead&gt; -- 头部     &lt;tbody&gt;&lt;/tbody&gt; -- 内容     &lt;tfoot&gt;&lt;/tfoot&gt; -- 尾部</code></pre><h4 id="b）案例：学生成绩表"><a href="#b）案例：学生成绩表" class="headerlink" title="b）案例：学生成绩表"></a>b）案例：学生成绩表</h4><h3 id="2-7-实体字符"><a href="#2-7-实体字符" class="headerlink" title="2.7 实体字符"></a>2.7 实体字符</h3><p>作用：在页面展示一些特殊的符号，例如：空格、版权、人民币、大于号、小于号等等</p><pre><code>空格：&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;结尾 &lt;br&gt;版权：&amp;copy; &lt;br&gt;人民币：&amp;yen; &lt;br&gt;&amp;lt;hr/&amp;gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML标签 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
